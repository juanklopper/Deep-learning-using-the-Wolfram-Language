(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1204756,      22871]
NotebookOptionsPosition[   1192241,      22679]
NotebookOutlinePosition[   1192617,      22695]
CellTagsIndexPosition[   1192574,      22692]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Creating a densely-connected deep neural network", "Title",
 CellFrameColor->GrayLevel[0.498039],
 CellChangeTimes->{{3.7447783117024584`*^9, 3.744778327758565*^9}, 
   3.7448856378633876`*^9},
 FontProperties->{"FontMonospaced"->True},
 FontColor->RGBColor[
  0., 0.00784313725490196, 
   0.3176470588235294],ExpressionUUID->"05e86aeb-e120-4f56-a8fb-c12b7be2819a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3UFuJMuWJuaCJEAa5thGFKAF5FDDEDRSj1ItaB4tqCVo0kp0CxA08yXk
EriE3EADvoRcApeQO6DoFcF3eflIJskIP7+5+Tf4ClWF9+6Nc+x3d6Obu/l/
+7/93//2//gv/uVf/uU//TcP/+Pf/rv/93/4j//x3/1//8uXh//jf/0P/+n/
+j//w7//3/+n//D//Pv/89//x//+f/svH/6f/+PDf3b6r//lX/6rh//9/v4e
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACg1n/+N18fzAAAAAAAALATX+NrdLCW//xvDg/uAQAAAAAA
YCcO8TU6WIv1XwAAAAAAAPblEF+jg7VY/wUAAAAAAGBfDvE1OliL9V8AAAAA
AAD25RBfo4O1WP8FAAAAAABgXw7xNTpYi/VfAAAAAAAA9uUQX6ODtVj/BQAA
AAAAYF8O8TU6WIv1XwAAAAAAAPblEF+jg7VY/wUAAAAAAGBfDvE1OljLf/43
X+5Pa8AAAAAAAACwB1/ia3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQDfaf/c/f3lw+KCv6d8NAAAAAAAA
sBdP1nWPD6YHtw/ms98P7q/o8Z97e/53Hc//7i/pPgAAAAAAAABsyXmt9fuT
Nd5rru1e6vf5Nz2uC9+k+wUAAAAAAADQg2X99LyOuqz1/upgffeza8I/z2vC
h3RPAQAAAAAAACq00z7Oj+u9dx2s3a65Hvzd+8EAwB61034un/H9/EzdUz8e
fE3XBAAA7M/575T0/eYRTOFxnDrowSY4jvqWPifCU+30ju9yL2+r7/deaql7
ub64b5nPouvMeuZnfrS/7tt/O/f+Jp2BEcixHI9EnvmAQzqvshyzPDP61vn5
eO5/1xkBAGCbzPWvZgqPo/Xfd3Ic9S19ToRmzfc1d817wclcus704fE+7uO9
22VcvqTzsRVy3A05lmdqHdJ5leVNWf4GWc7Ry/n5e3OOBgDgk8z1r2YKj6P1
33dyHPUtfU5kn9pfezvP6WNgI5Y+HdPjtifNdaZ3v9tf92rdp5XjrZJjeWYd
h3ReZXkIy7M7y3dapt4zBQBAH8z1r2YKj6P133dyHPUtfU5kX9rpXd/le76/
09nfqKVvy/tjN+mxHF1zndmiX+fj45DOTy/keJPkWJ65XNfHT5PlLVue2Vne
EfatFgAA/om5/tVM4XG0/vtOjqO+pc+J7EM7fQvRu77XtbyPcEiP7aia68zW
/T4fI8s+A7t9p1KON0+O5ZnPOaTzKsu7sLwfvDyvYy0YAIB/Za5/NVN4HK3/
vpPjqG/pcyJja6d71nfpnA9uWVf/lh7r0TTXmdH83ONxIsfD2WWO5ZlPmNJ5
leXdWf7eWd4L3v2zOgAAe2aufzVTeByt/76T46hv6XMiY2rWfROWfu92XWCF
DLvOjGlXe6jL8bB2lWN55hOmdF5ledeWb93s6vwMAMCJuf7VTOFxtP77To6j
vqXPiYyl9bfuO59NZ9/P54/XfH/yn709/3d7que9NR/SWdi65jqzB8PvoS7H
uzB8juWZT5jSeZVlmjk5AMDuPMz/vj741cFcdMuWZ96P4XE8nn9Huhe9u1vx
ONramkyP5vQ5kTG0032s5LXt8RuJ0/m3XH3vtfN553j+d2zhW8bLb7xJZ2Or
muvMngx7f1aOd2XYHD/Ls7+jeY8pndd3ZNm9hP3wPjAAwI61v947eryvvOzn
tfwNv9e/b5faH+/j/+NdrfQ4vTF+N0/G8PG9sZ/nOkb/u+73uc7bc93f2kpr
L+88hp73P92fpLtzD36ce3I89+hr+phhHO10/vsZyvjy7/2ezHQ73b/73vn5
ZjkH+BbZ5WP9/B3xvVzn92T4ZybkeBeGz/GTPH9tL/8N7ZkHfqTz+YEcP95L
eMzx4/4zzstjWcZzSucNAID+tL/eOVr+ph1pTXj197V60E5/030717nV8Xtc
5/3HOmK6rx/s/+Pa8M825t/Sj2Oz5Mz6LiVaZh/8n+dzUHfXi+U3nY/B2w7P
M/F9M0bX/rp3O9pc7XmO5g/o7Th4r90+MyHHcjyS9tezDqPO/3ndnM7fSufl
np835H2W51MO6VwBANCvdlrP+t62+Wzz8rf38rfLbteozuM3tb7vQ/w6j9Oy
lnGT7tkKY/D4zt5W723encfnkO4l+9NO96Eqrz9353PmTbr2D/RoWQte7tX1
dp9uN++FpT3JQOr9+EuPueU5hsc9WC7KTPvnd5u2sKa29OBbOkdpcizHI2mn
+f+PDYwbl5vTeVs5y9/OWd7i/aDlNz++A/Cvz5W3D/xN217ee22L7/1v5h11
AAByWv19+Evm+cd0v3rSTvfUbjsYm8Xju9hdvldXcAz1tkbjOKI753PWj8K8
/xoh7+10n6qn+83L7/ie7suenI+d3p/7Wq4vyzrZTfGxscw7enxn/tHy23Y1
L5JjOR7dBrI8t7++rdOz2/b3d+XTfftbD9M5K8zztw77/9wyp1/93Nz+2ovn
cU04Xfd7+rJqTwAAGEOrvSf/UVO6Pz1r2Xcqlr+Ldrfm+8o49P4shfUaYoqP
j+W8dEjXvEIPe7vfvPT5Jt2XPWmndaLe9p3o5nmA9te7eb1di5ffs9t9a+RY
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
q9v3+S5dK5vKy2tu0j3omevM2D1/4pCue5SepmvthRxvv6/pWremfew9yx/p
39uDwjzP6VrDfU59A/gmXTsAABmFc/0pXWtBLy+9d27td6MKj6P7dK1sQ6t9
n/OYrperZObL+TqUuC+1mNM96JnrTKTnU+A4mNJ1y/FY5FiW96i9fw/oOf1b
e1CY5133O3Q+XhzStQMAkFE415/Sta7cx+OF/bH2u2GFx9F9ula2oTCTd+la
uWpuUvelHn1L96BXrjORnld9P/2pn+m65XgscizLe9Te/1z2nP6tPSjM8677
HTofL47p2gEAyCic60/pWlfsobXfnSs8ju7TtdK/K5yT3E/YsRb6NtnZXbr+
XrnORHr+xTEgx1snx7K8R+39++DM6d/ag8I877rfofPxYkrXDgBARuFcf0rX
ulL/Ll1nWfamsva7cYXH0X26Vvp2vq9QtX73O10vq2So8vmBl3xP96BHrjOx
vpc/D5GuWY7HI8eyvEft7W9aLH+DL99iNee4t/5b3OvSc/HZlK4bAICMwrn+
lK51hd5dY+33S7oOrpIF94DoQqvdv3dK18tqOUq+A/zbtfHFMXGdGbzvTwz7
XKAcj9/3PeRYlrehndZ3H9d5l/nxt9FzeUGvrP+O1+unpnTdAABkFM4/p3St
V+6btV+e5sE9IOLa6d3ft951uLabdM2slqX0O8BTuge9cZ2J9T3xTexDum45
HoscyzK8pTDPc7rWtMpzh74DAFA4/5zStV6xZ9Z+eZ4J94CIa7X3d2/T9bJ6
nrwD3BHXmVjfE+tmw+5HKsdyPApZZiSFeZ7TtaY99OBH4Hy8+74DAOxV4Vx/
Std6pX5Z++WlXLgHRNRDNm6K7yN8S9fM6pnyDnBHXGdifT/IvhxvnRzLMryl
MM9zuta0lnkeZ/d9BwDYq8K5/pSu9Qq9uvTeibXfQRUeR/fpWunTQzZuC+8h
3KXrpSRT1fuJP+cd4L+Ph+tMpu/WzeR48+RYluEthXme07WmNeu/AAAUKpzr
T+laL+zT13bZfXBrvwMrPI7u07XSn3Zap6u8h/AjXTNl2Urco3pq6P1DPzgW
rjOZvn8N5P5num45HoscyzK8pTDPc7rWtIcefA+cj3ffdwCAvSqc60/pWi/o
kbVf/pQR94CIafVrdDfpminLVvW+4s/dpXvQC9eZaO+rcz+na5bj8cixLMNr
CvM8p2tNa5n9GIZ+HgcAgNcVzvWndK2f7I+1X96TE/eAiGj1e/T+StdMecZ+
FubrJcd0D3rgOhPtfXXm53TNcjweOZZleE1hnud0rWnNfvwAABQqnOtP6Vo/
0Rtrv7w3K+4BEdHq9xCzH+/OPIz5t+KMPTene9AD15lo72VejjdPjmUZXlOY
5zlda1qz/gsAQKHCuf6UrvWDfbl07fe2WfvdjcLj6D5dK315yMRd8f2Dr+ma
2UXO5O6fx8B1Jtf76rzP6ZrleDxyLMvwmsI8z+la05r1XwAAChXO9ad0rR/o
ycVrv+kaKM+Me0CUa/XvZd6layaWtepvTLuu/vMYuM7kel+d9zldsxyPR45l
GV5TmOc5XWtay6z/fkvXDQBARuFcf0rX+s5+WPvlM7lxD4hylbk7+5GumVjW
boqz9tzvdA/SXGeiva/O+5yuWY7HI8eyDK8pzPOcrjWt1X+7Z3FI1w0AQEbh
XH9K1/qOXlj75bPZcQ+IUi2zHufZ8R1rp2/aV2fuqWO6B+H+u87kel+d9Tld
sxyPR45lGV5TmOc5XWtay+yp47tkAAA7VTjXn9K1/qEP1n65JD/uAVHqIQs/
qu8dpGsmnrnE+wpP/Uz3INx/15lc76uzPqdrluPxyLEsw2sK8zyna01r9eu/
u99DBwBgzwrn+lO61jd6YO2XSzPkHhClHrJwV3zvYE7XTDxz6T2gF7t9f8F1
Jtr76pwPu9e+HMvxKGSZkRTmeU7Xmtbq139333MAgD0rnOtP6Vpfqd/aLxdz
D4hKDzn4VnzfoNtzOOXZswd0rveuM5m+f3G+leOtk2NZhrcU5nlO15r20IOf
zsUAAFQpnOtP6VpfqN3aL1fhHhCVlnNP8X2DxSFdN3nNHtDJ3rvOZPp+COR8
Stctx2ORY1mGtxTmeU7XmlZ57jj7lq4ZAICcwvnnlK71Wd3Wfrka94CodOG5
S+74tPO1szR7L9jlHtCuM7G+J9bNhr1XK8dyPApZXr2/N+ce/8nQ+4wX9tv6
b12vq7/hs8t5MwAAJ4Vz/Sld65Oarf1yVYXH0X26VuJZS+z9/CtdN/1o9fet
nht6TeGNvrvOZPqeOOce0nXL8VjkWJa3pr3/mYU5/VtHUJjn3Y9X8XnY33AA
ADtXONef0rWe67X2y9UVHkf36VqJZy2x97N3K/iHUAZ3fx12nYn1fQpk/CZd
txyPRY5leWs+kNk5/VtHUJjnXY9Xq9+Lwd9wAAA7VzjXnzqo9dK132O6BvpU
eBzdp2slnrXyvZ+d+3iqZd4je+p3ugehvrvOZPr+ozrj6ZrleDxyLMtb81D3
z3f2Z07/1hEU5nnX4/VQ/7H4XPw1XTMAAFmFc/0pXOcy17b2yyoKj6P7dK1E
c5Zadzuka6cfD3n4Esrhru9nuc6M3/ezofdqlOPx+76HHMtySX9/vbM/c/q3
jqAwz7ser1b7LM5dul4AAPIK5/pTsMZLn7M8pseJvhUeR/fpWonmrPz9HZnj
Je3992XX8j3dg0DPXWcyfa/+3vVtumY5Ho8cy/LWfKA/c/q3jqAwz7ser1Y7
f57S9QIAkFc4159C9Vn7ZXWFx9F9ulaiOau+f7sY/h0ePq6FnkV44me6B4Ge
u85k+l6d7SldsxyPR45leUvax76ROqd/7wgK87zb8Wr1++fcpGsGACCvcK4/
BWqz9kuJwuPoPl0rsYzdFN8zeLS7dTb+rPkGcKLnrjP1Pf/IGsS1HNJ1y/FY
5FiWt+ah5u8f6M+c/r0jKMzzbser1c6dd9tnAAD+rnCuPxXXZe2XMoXH0X26
VmIZu/SctolzN9vQcs8jPLWrbwC7zkR6/pE1CL2X4y7JsSxvzUPNPz/Qnzn9
e0dQmOfdjtdD7beF5+FDul4AAPpQONefCmuy9kupwuPoPl0rsYxV3jNwPuSP
WmY/8t1m03Um0vOPrEFcw5yuWY7HI8eyvDXtY/OLXeStoOfWf9fvcdW8+S5d
KwAA/Sic609F9Vj7pVzhcXSfrpVYxlJrbYd07fSp1a8pPPcj3YPifrvO1Pf8
d3Gmp3TNcjweOZblLWkf319kTv/mERTmeZfj1Wr34T+m6wUAoB+Fc/2poJbJ
XJmEwuPoPl0rkXwl99r9kq6fPl3hmnupOd2D4n67ztT2+2sg04d03XI8FjmW
5a1pH3+We07/5hEU5nmX49Xq9nH6la4VAIC+FM71p5XruHROfUyPBdtVeBzd
p2slkq/Ut3/ljVe12ncZdp9P15nyfld/M/V3umY5Ho8cy/LWtI//TT+nf/MI
CvO8u/F6qPlLq9uH4ZCuFwCAvhTO9acVa7D2S1ThcXSfrpVIvn5U5euZu3Tt
9Kud7mclcvnU13QfCvvtOlPb71/FWb5N1yzH45FjWd6a9vF1sjn9m0dQmOfd
jVer2y/nZ7pWAAD6UzjXn1b6/dZ+iSs8ju7TtTJ2vp6Z07XTt1b/XcnnvqV7
UNhr15m6Xif23N9FluVYjkchy6v09Nsn+jOnf/cICvO8u/F6qPmuoK/LfPwm
XSsAAP0pnOtPK/z2S9Z+lznyId1/xlB4HN2nayWSr5JsvWBO107fKs99VXOL
XrnOlPa6+tvW9syVYzneGFlepaef+dt+Tv/uERTmeVfj1er24P+erhUAgD4V
zvWnK/7mZc/Jnxf8lmXtdzd7RrK+wuPoPl0r5dn6WpWtNc/bjKnl9iZ/dJvu
QWGvXWfqel3xrs5TP9I1y/F45FiWt6R9/n31Of3bR1CY592MV6v77u9uegoA
wMcVzvWnK/3eZR59ybesrP1ydYXH0X26Vsqz9Zm98Lo6bzOuVvdew+7vebnO
lPX5EMjxTbpuOR6LHMvy1rTP7+s1p3/7CArzvJvxajXPSC73tr6kawUAoF+F
c/3pCr91eS7Y2i/dKTyO7tO1Up6t6v0br3reZmwts8bwt+t6ugeFvXadGazP
Z3O65lH7m651L33eY45l+eq9vGSvm91lb6UxsP573X5W7d90SNcKAEDfCuf6
04W/c5lDX7J/jrVfVlN4HN2na6U8W5fsde+eAqtqn9+v0Tnx4712nVm/x4n9
9g/puuV4LHIsy1vSLt/ba07XMILCPO9ivC7M9Hv55i8AAH9UONefLviNx2bt
l44VHkf36Vopz1bF/YPXHNL1079gPh/dpHtQ1GfXmYF6fPYrXfPIPU7Xuoce
7zXHsnzVPn523+dHc7qGERTmefjxajX7Pt+m6wQAYBsK5/rTJ3/fNfY+Pab7
zNgKj6P7dK2UZ6skV684pOunfw85uZPTkj67zqzb38Re5t/SdcvxWORYlrei
nd77vcYeN3O6lhEU5nno8Wqn9xbW7uEun7kBAOBzCuf60wd/15cr/rbl/d8v
6V4zrsLj6D5dK6W5+lKVq1cc0j2gf5Xnvz3n1HVmnP6ezemaR+9zutbR+7vn
HMvyxb1bnlO41rNju83glcfE+u/lPbz0e2XvsewL5b4WAADvVjjXnz7wmw4r
zJ3NlVlN4XF0n66V0lwl3uN5yr75/FHLfqP6Q/OLLXOdWbW33wO5PaTrluOx
yLEs966d3o28dt/mdF0jKMzzkOPVrP0CANCpwrn+9I7fsrzrtub3Un6m+82Y
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
LArn+tOFv7OnNeDb9LjRl8Lj6D5dK2PmSt64RDirh3T9O+jxXi1rEr6PKsdb
J8cbz3K61oJeHi7oz5z+/SOozPNO3KXHFAAAFoVz/ekKv/W2g7n81ephHIXH
0X26VsbMlbxxiXBWd/Fdhh7OBzuy7JE7pcd8RHIsx6OozHK61qJ+/vxkf+b0
bx9BZZ53ZEqPKwAAFM71pyv93s/+bbiGY3r86EPhcXSfrpXSXPXwzMvXdB/o
X+U5cK/nxGSPd+Rf18vaTp4pkONhyfFgWU7XWtTPr5/sz5z+7SOozPOOLOfi
m/TYAgCwb4Vz/elKv3f5RtCvDubzj6yN4B4Qa+Vq6uAcd0j3gf5VngOf+Z2u
fQc93oNlf1zrZXK8dXI8aJbTtXbe0zn9u0dQmOfH89Rn3Z5/66PfHZx75RMA
gG4VzvWnK/7mLx3N9ZffYQ145wqPo/t0rZTmqof13yndB/rXTvfzEvmc07UX
9rhy3ew2OKaVlucJj+mx3RM5luNRVGY5XWthT4+f6M+c/t0jKMzzKuPVTt+Q
XvLT43nf99cBAIgpnOtPV/7dyx5RvawBL/ddPGu/Y4XH0X26Vkpzdejg/PYj
3Qf6F8znz3TthT0uv848/O83D76307c3eplzXWqp40fz7J4cb5sc7zDLo2un
Z7w/2p85/btHUJjnkvFqp3tFPXxH5/F87V4RAAARhXP9aYXf/q2D+fyjX+mx
JKfwOLpP10pprnpY/53TfaB/wXxO6doLexy/zrTT/dTHdbT0uekjlnuvy31g
7+DIsRwzTJZH9Injck7/5hEU5rl0vNrp+Z8ezvWepwUAIKJwrj+t9Ps/s0/U
Wm7T40lG4XF0n66V8mylz2u7+b4qnxfM5zFde2GPu7vOtNMzKlPlb/uAZW+W
5f3IQ3rskGM5Hk+PWR5BOz2b8ZH+zOnfPILCPEfGq/Vxz+iQHmcAAPancK4/
rVhDL3v7LDzbuUOFx9F9ulbKs9XDXpX2LONV7XP7NV7LIV1/YZ+7v860074s
y1rVr0AWHtfJlnu8N+nxQo7leGxbyPIWtdP7+R/pz5z+zSMozHNsvFr++2H2
iwMAoFzhXH9auY4e9vV5dEyPK7UKj6P7dK2Mm603HNJ9oF8tu0/5bp5N2Np1
pp2eC3hcR7u74u+7O/di+ed+d37aFjmW41FsLctb0j62Rjenf+8ICvMcHa/2
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
g/P7l3xN94RXs+IeEOVa9ltUj36k+0B57qrfPXev6951hjHIMaOQZUZSmOc5
XeuFfUq/I2AfaAAAPqRwrj+la/1kf3rYY/XR8synNeAOFR5H9+la6UcH9yAe
z0vW53bkYbzvCvN1m663F64zjECOGYUsM5LCPM/pWq/Qq9uqY/8V9oEGAODd
Cuf6U7rWC3rUwzt2j6y1dKjwOLpP17oHyzH24JD+He/8rZVrca85pvtAWd6+
FmfLM09/9d51hs2TY0Yhy4ykMM9zutYr9Gr5O/F31fH/AveDAAB4t8K5/pSu
9YIeLXP85Ldenvtlzt+XwuPoPl3rHrS/P9e9jO331uk6VOtjn/q7dB8oy9v3
wlzN6Xp74jrDCOSYUcgyIynM85yu9Ur9Sv/9dZvuAQAA21A415/StV7Yp/Rz
nkP+7TSKwuPoPl3r6P5wrC///2U/gK7Wg5t3gKnLWuWzUPa3+3vvXWfYPDlm
FLK8D62j+f7KdVr/7bdnrzFPBgDgjwrnrVO61iv0atn3sqc14Nt0T/hHNtwD
GkT72PPcU/r3fuI3r+VXug+snrObwjzdpevtjesMI5BjRiHL42unZ0KXMejy
+c8r12r99+M9q/4mynP2gQYA4I8K5/pTutYr9etbeJ7/3I90T3APaCTtY+/S
HtK/9/ybe9mfoIt+sFrOfhRm6ZiutzeuM4xAjhmFLI/voffTK2Oy/K2wfCtm
ef7yJv07r1Sr9d/rZqTKz3QPAADoW+Fcf0rXesWeVX7/8D2O6Z7sXeFxdJ+u
dWTt4893dPPMdevjHeA53QdWzVjVPuN36Vp75DrDCOSYUcjy2NrHnq3c/PPY
hXme07WukJP0d3i+p/sAAEC/Cuf6U7rWK/ftNjzPf+6Y7smeFR5H9+laR/bB
cexuv+OWv//gXDSoVrv3hQy9PAauM2yeHDMKWR5b+9h7nVP6916hXuu/n+/d
oepc8IrlOYWbdB8AAOhT4Vx/Ste64d6915DfI9qCyiykax3VJ/527+5Z/9bH
O8B36T6wSrZ+yk98DFxn2Dw5ZhSyPK728e+qHNK/+Qo1W/+9rH9V8+TXdPdc
MgAAfSic60/pWlfo3fK34a/wXP+p5e9Ua8CZLLgHtHHt4+/0f0v/5lfq6OGc
dEz3gatm6qYwO4d0vb1ynWEEcswoZHlc7YPfdE3/3ivVbP33sv599JmBNUzp
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
AACwDe2018HxfK9ilG8GL+u9yzu+35vv+QIAAMXOf2cdzn9rLWvDP85rw/Mn
/+6a0jUBAAAA29RO37b6dr5HMbdt7Bc9n++nHK33AgAAW3JeJ370/fy32HOH
9O8EAAAAxnFeE356L2JZb63eO/ru/O+9fbz/Ya0XAAAAAAAA4LqePKv++N7w
U/M7/Hj23zk++Wf6Xi8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACM6j//m8OD
ewAAAAAAANiJQ3yNDtZi/RcAAAAAAIB9OcTX6GAt1n8BAAAAAADYl0N8jQ7W
Yv0XAAAAAACAfTnE1+hgLdZ/AQAAAAAA2JdDfI0O1mL9FwAAAAAAgH05xNfo
YC3WfwEAAAAAANiXQ3yNDtZi/RcAAAAAAIB9OcTX6GAt1n8BAAAAAADYl0N8
jQ7WYv0XAADg/2/vDq7cxpWGgaYwa6y0+ANwCArBXwYKwSEoBIfQITgEheAQ
OoTJwP9wmnrWtEWJAAkUSN3FPect3liFQhFoAiQIAADAazmG79EBAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
sHnp//3fX//4+o/zP3784/KPXzO8j//fH+N/++0fx+Hfi24T/Rjra6iNt3/8
HGvne3Rc8Nk/dfllHMOG8ez7OL4N/p45Jl79vPlvz6Ph3/0S3Ubo1T/Xx2Gl
6+/95r99+/T3iWuQKsb54/Tpb+m5tXs7X5zUKQAAAMQY9zKOndrUesHNWvve
XPdSb52i8/0p94dxPfS6H7e2Yc1rWMsa1nCHtayjutl+3RT217c79fEeHVdm
G4z7O5N+P/dy3WeqMQ4+2586jzFU68Peanfv7Uuef8rpu+N4DQzXQu4e71LD
3z7XZ9eqXoMbqVtzSn4fHtLH3zc/KtXv3+O/fRp+K7q9GTmJrt8qc82ndkZf
v5P10EFsRXEDAAD0Yrx/ablGtXT/7XZ9q6t1ydR+zT3SJTrfY86/Buf9Td1s
r24W9tf7RNu+RseW0Qbj/g6kj2dHhrzUeu5l8fWePvajVztLobfafYFr8xhd
571KH/sSp1Rvv2zNa/BUsy87rNsp5pT/9tthzMPU3zU1/Rzrstv8j7mJrtl/
VW5n9PV77ji2uS7pv8/BHaLrFwAAYLCh+6opw/rBsLYV/nx/so/Xum572PNY
nAd1sx3p8Xj5Fh3fSu3Ygm7G/YC+O4xtj1ivX2rxOem91e4LXJvH6JrvTfpY
2//RQd+UGvZAVx07O6zbXC81p6T4Zyc/1+Nb6nC/LNn/beXccWxLvI+1/dLP
mQAAALE2fl917z7rFJjLXtZSWrgE5fiv8V46N97b71dedZEHdbMdT2pvWMPc
xPpOMu5vTuprvT7s+u+tdl/g2jxG134P0sffHlHvSXbfrx3W7RK7nVPSx/u2
Pdfw8FzFITpPN/my/9vGuePY1nJ9zuElnjEBAAD6kT7OjxzWlHt4l3ItIWs3
6fd3F3teW1nLJahW5+Z2qOfhzNGH99np41266/mNRblQN33XzYr199eM9jUf
dxZcS8b9DUjL1+s/n8E8OSam/35n71ta/1vClxVrN3Iv/P0aQ8VrcxB5pvA1
hpdeq04ffyO8LeiLoVZuzxoerq3Dk9+8XoNfx//uR1r/74Njpbo1p3QolZ+Z
c3ue7fBv/PGMW/r9jdzrnLFGDXTxPnD6mH8j6/p/z6xWbuftvNOyrdffnLzO
Uh9zfo12H6PrGwAAeE3p9/rvdc1p7Xue63uYb+NvnG9+a+09sOHfOwTmclgT
GdZMtnpW58N+bJzLIY9z1l9/lt5Tp9/rvFm5UDf91s3K/fJtRvsu0XEWts24
35lxDCjJy/DfDGPHsUI8S/bBBn9XytVQu6cV4nuUz6H9IXuh6WP9u9accG3f
ae2a2bL0+33f3Hq6vuM15HPV8yDS7+fV1tgHqdrXyZzShbEfcvN/WVq/6fe3
sZfU6nAtfYvO4URdf6tQ19fnVqtemxltXfte5O/0ey5dNDam/875a8+JP9Of
48rnMWatPfK3pbkAAABYKv1eA1t6z5e1ljDe261xz/l3R/fSp1S+Nn29bz6u
6NvNvWx2XI3zNiem80q/9yXz3r7qnoC66UNGTRyiY12hrcb9uNxf33XJbfNb
izan3+v6RX3UKIdLxsyr915raO/ti5bmP2926989s4YxHlLZtzCuzo1zak7p
v46HejpUrNXSMavb/fexbUufx9hEbY3XUklbq+/jp+VzYvbYcpOTpePL8Nsv
fc4GAADQh1T+/Z2/c++nJn576f31KTqHY1u+FMZ/btTHs/PcMF9z7ulX7d+U
953ho7rpq26C89/V+yor9K1xv12+S/ZHqqzZZ8Sbu+ba5F2XjLnjnvdWcWpf
P9LHvJ875gz//2NgzMP+U8l7iOegeM0pbeo459mAISfV958K4vrc/1+jc/ug
bUveB93U3l+adxbObb81aV9aNicujnGF8eUU3bcAAACF9+3fV/z948J77FN0
Dsd2fC+I/dgwvln39g3i+Gvmvfw5uOabrEmpmziZY997dLyBbTful7XxUNDG
Jmv2M2LPPS/h2DC20vcNu91n+NS+057b1ziXue9KdvX+dEH858BYzSn1cvtX
ZtuaP69WMGdUqYOV23QobM9bdOyF7Z17P3JsHFfJnP9j5RiOqfx94FN03wIA
AK+t8P72uHIMS58f72W9PDSPM2J8eg/dIIY577RcKscwZy3trG76qZtKNZD7
TkH4OLNi+437dfNbctZsV++Yzxwnm49JhbX7Hp3PzDZmf582OubepPxnq87R
MU+0I2dfbdU9j8w4zSn1+n/uePAe3YaC6+5q6Lfuzi/IuPZudVdHM9s65+/i
S0BcJWPL6n9PLRxfTtH9CwAAvLaU/0xrlXvblHf+1K2fPawbZKzRVFn7mhnj
s7WMausWaf4ZgdXzMq4nPOqvs7rpo24qtafkHbsu31FZkAPjfp325L6rEr5m
/6Atc/eAz53Xbti+WGH7cs+b3FT7Kucu97zn7r/TmXEdXoLjNKes246cvd9u
Yk/l323tpg03bcl+9zQ65oXtfbZ/fwqKK3dsOfZUE6nT50sAAIDXkTLXGivH
Uvrs+Hlreax5f/ogxmd7sNVimnn/fmmYi0drhC3jUDft21PyTseu3rEz7ldp
R+67Id2td99p018zxu6m/VAwZnZVJzPal7u+vKn2Vcxb7jm5w/93E2vyad5e
4CU4RnNK2/7udh7JjL/btqT8ZwV/Rse8sL1fn7TvEBRXV/dJBXP05msDAADY
ttx1kgbx5N7n/RrXGULXDFL+2v8xKM5H+a0S04w1hatT41xM7Wtc1E183VRq
R8mZ21e7+camcX/1+He393vTtmfXzKVxPLlrr6foHFZu3zk65mipbO93E9ff
TRuf/R0V+oySOWW1uDe991vYjv+0KTr2mzbMPbcoZC5s3d7AuHKf5zg2iGnO
94zM1QAAQBdS5lpjg3ienc3b5X1Vbh5b3J9OxPno/r5KTBn3yU3XsdL0emqz
dVR107wduft0t3ZzzqpxP7Smul2zL6yXS0exbHp8GtuXu+ewqfZVyNfu935v
2vpwHyQ4NnNK25iH/98huiaftKd0D/gtOvYx/pfa/x3b3N340uOcn+Z9L/ne
NbvJuQcAANi23tZsSmK63ldtKY8t7k8fxDq1Vvqtwm/9NTMfIc/8p4l3gNVN
bN1Uir9kveazXazdGPdXi3n3e783bZ08B7pxHJsZMwvbZ/93fq5y9343/R3G
GXNY2NhiTmley8foepzZrtwzlK/OHcSeOxaHx7xCm0Ov2YmYupzzC2t78zUC
AABsT6drNqX7NGHns/Z6fzoR69Q967nhb30W8m7lg/gO6iaubhrHn+MU3Y6I
umsU06bG/fT4G+L3dP++1pP2Tl4/jePYzJhZ2D77v/NzlXsG5+Zz9aT+w9pn
Tmlay9+j67BmbfRQzzf1kxPvOTrXK7R5qm3vG6qfZnWTHjwXNyH0mUUAAOA1
9bhmM8ZVck5r2JpIz/enE/HeWxM7B/bj6r89M76p9Z0m/aNumsZ+ubcWk5n/
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
dnKaucZ0ic5VQX/nGt5hPUW3Ud00zePUeb2L1lBT/rmN79G5qFF3FePoctxP
ZXtPL7NeH6lgzNy7Y3SfVOrnkr8PLtFxvypzysOYSuaTS3SfNqydkvcom+Qo
M55zdC5XaK/933kxlTyzUD0uAACAe3pYs8lcr3lrsV5TO4+BLtG5usnZs3dO
l+p+H1jdrJbHqXOrF/d/yt+H+BKdj7XrrlIM3Y77e7xG9mJDY2Yrx+g+qdTP
rsENMac8jMuzDM9z1OX1nhnPOTqPK7TX/u/zeB59K2dK9XfVAQAApkSv2aTp
9/a6uv9cO4+BLtG5+pS34T665Gy8rDbXXg9QN6E5fPQc/uL13ZR/xlvR94Z7
rrsKv9/1uL+3a2RPNjRmtnKM7pNK/ewa3BBzysPY1PJGc5QZT9O6qtRe+7+P
YxnuWXOfWx6e/+juuXUAAOB1RK3ZpLx9v79r3s9F5DHQJTpXgfnr7t1xdbNK
Dqf2Z99W+ve/ZObq7+icrF13K/7uJsb9vV0je7KhMbOVkGukQT+7BjfEnPIw
RrX8PEe571M2yVFmPOfoPK7QXvu/03EMY03JWe5V4gEAAJir9ZpN+jjz95w6
PKOtZR4DXaJz9SCHwz5byRpQjqHuvkW3Vd2slr+/HowlxxV/J7cuv0bnZs26
W+H3NjXu7+ka2ZsNjZmtHKP7pFI/uwY3xJzyMFa1/DxHJftq1XOUGc85Oo8r
tNf+7/0YhvvTku8VnaL7FAAAoPaaTfrYnzmOv5Nz79Ttmb1r5DHQJTpXM+ql
RS6H90XCnytQN4vzd5qI933l3/mema+36NysWXcF//6mx/09XSN7UzBm/hzr
aity15jDr5dK/ewa3BBzysPY1fLzHNn/7cCD6zisbbljy9rXe8p7zuTWKbo/
AQAABgX3VTnrmEVrHtFrNY3yuNaa9Htv6yUr5fPLghqaa7if/6Jutls3aXod
+Lzy7xwK6iv8+YIV6+6lxv3SNkTH/QoKarebuprZvuOe25eRB9fghphTVq/l
7r8jsXKO7P924MF1HNa2grHltMJvDs+bDN8Uz71XWi0GAACAtRTcV9V0ic5H
wzweV/79LzPvVTeV43/i/brg/rv7+3R1szj2qXgPFX4v9728sLqqUHcvNe6X
tiU67lcQPWY2aJ/931+uwa0xp6jlhTmy/9uBB9dxWNsKx5bhnmY4t2e4hzzM
/J3r/dDc74nfMzxX3PX3XwAAgNfT2ZrN4Bidk0Z5rNLO9PHM8lvkeknF/Jac
vzXXSd1sq24exFsl1vSxLpTTV93lbEHdvdS4X9qO6LhfQS9jZsX22f/9ta9r
MP0+zyTaqWIbzSkvUMsVc2T/twMPruOwtq04tkydn7TWM8bDv3WI7kMAAIDP
OlyzeY/OSaM8HivHM/Wu4iU6VwvadP02cK194JO62UbdjLUwVQdV+jGVnQF9
iM7VSnX3UuN+aTui434FvY2ZFdpn//fXvq7Bgj6t5VyxjeaUlWs5BX+fpHGO
SvZ/f3TWd+foPK7Q3j3v/9Yy3It8i+47AACAKZ3eV52j89Igj8fK8UytN16i
c7VC2569q7rESd30XzdDPz1Yh6n23d2Ufy5cl2tCxv2n+Sl9xuQYHfve9TZm
Vmif/d9fReftd5uPgj7d3BhbcF1uur2ZuSmNv7tarpijkv3f6v3bWzwN2mv/
d76/x9iq3XMAAACsIfe+6sm/NZxxN6xzDXszb2nZe5qH6NzUzGOLdZ10/0yr
S3SuVmzf8D7mku80TWn2zoW6KY5xam/gfcxpLblrlO/RuVqj7p78W7sb9wv6
udn1+ep6HDNXbp/931/7ugYL+rSWc8U2mlPWr+Uunx/rKEfV6vkmrq7iadDe
Pez/DveF9+5j1nK9z7DvCwAAbMKaazZ3/u3hPc3vhfdXl+jc1MxjarOPdy/3
m8rrzHYeV77Xf291X69uiuI7VFzXqaG7Mxxz6y7z3978uJ/K1+vP0bHvXY9j
5srts//7a3Ie2uQ1mD7mrOszRN/T7+9Otph/hmelfoy/Xa1WzCkP4zefPM9R
yR5/tXq+ieul+uvBdRzWttyx5VoX47h7fYZk6T3i+zgGdff3PAAAwDM112xu
fuNUeL91is5PrTw2Wre4t458ic5V5T5Y69vA39VNn3WTyteBozSppZp1V/gb
mx33C67Lq7fo2PeuxzFz5fbZ/y3r501eg+ljb/Nr+pjX1nqObdhv/NpzfxX+
xibnlAW1fImuz4Y5KslP9b24zHjO0Xlcob272f+98+8M+8Hf0vP3g3+OY+h5
HHMO0f0CAACwRIs1m/F33gru7at+yzMyj1P3pxXieqn1pPH+fq33ag7qpr+6
Sevt8bfyd3TOltbdgt/Z5LifyvcZfkb37d71Omau2D77v2V52MU1mD72J5bM
caeguM0pj/t0F387VMxRdn46jOscnccV2rvb/V8AAIBX1XDNZnjHoeTdhh/R
OaqRx1b3p+nP76ReonPVaX/c89ZhnC9dN6l8Xy5a03ex1q67Bb+zyXE/fXx/
sqivo/t273odM1dsn/3fX/8bO17yGiyogau3wJjNKev35+AQXY8N8lMy314a
xbaJ62/F9v6YaNs5MKZdz/kAAAC1tVqzGX+rdA3kGJ2ntfPYqk3pz3clLtG5
atgnQ70tfVf0oG76qZvU7puJa+vqORbj/qy4S8eO0Lj3rtcxc8X22f/9nYvS
85A3n5NU9p5r2HNG5pSnMZf+7XCKrsUGuSnpz1bfaMmJ6RKdyxXaO/U39jkw
pl3P+QAAALW1XLMZf2/q2eJHhjXArs+B7vX+dFxXOd84Reeqcb8M7xUs2QP+
pm76qJv0cbb35FrgGHMrJec5djOG5dbdCr+3uXG/MObQddJX0OuYuWL77P/+
zkXJHugursGCOgidY8wpT+MtfXbtLboWG+Sm5O+pU6PYcmK6ROdyhfZO1elm
ni3Z85wIAABQImDNZtjDKdmPa/Ksd6s8uj9t2jdL9oCrfktQ3WTl6vuDvDRf
0y2oqVN0DkvrboXf29y4n8q/2XiJ7t892/uYmez/3ubi9MrXYG67g2M1pzyO
99HfL4+8R9dhb7UzOjSK7aX66sE1ddxQfYTFCgAA0KPWazbjb5auqx+j87VW
Hntuyx6lZXvA1fYW1U1Wrqb6L+Rs5ZT/blrVZwlq1t1Kv7mpcT89ft88bMx4
dXsfM5P939tcFH8DeA/X4IM5r9o4vSBWc8rjWEve5776El2LlXOT+250s7+l
UuYZ9NG5XKG93VwzNzHtes4HAACoLWLNZvzdnwVrIO/R+Vorj+5PQ/qou7VC
dTM7T4/eAzsFxfS1oJYO0bksqbsVf3dT434q//5oSE2+gr2Pmcn+7+d8lJ7D
foqOfYW2Z+2LBcdqTnkea+kziFW/QxKtIC/N3uHOvQZTJ3/jFbb1y4N2beZs
+b3PiQAAALkC12xKn4U/R+dsjTy6Pw3rp5JvsJ3VTXi/Te0B/B0cV+66ZbVa
qll3K/7upsb9VP7MSMg76a9g72NmwTWyqfYV5KP0DOjNX4PJ/u+c393MnJLK
v2fdzdkhFXJScs5Gs/ehc6/BLY/H6cEzjcFx7XrOBwAAqC1qzWb87dK1kO7O
QnN/ug2Fa4VndRPaZ4/WB9+CY8sdw96j81lSd8E5Cxv3n9TeM5s/f7ZHex8z
C+aoTbWvIB8vewZ0sv8797c3MacUXNuh81+jnOQ+3/Hec12nTp7xW7mtTXO+
Qh8co3MJAADQk+A1m2Fdr+Q8tO6ehXd/uh0p/7zAau8RqZvFOQrNRypbzw1f
xzXuZ8Vbev7sObqf92jvY2bBmLKp9hXmpHR/b9Pn5ib7v3N/ezNzSir/psBb
dD1Wykfutd30mi6Yby7ROV3Q1qm/dULbtPc5HwAAoLbINZvx90vP9jtH525J
Hl/h/nRckxvOEwvf7/oUV+6Zrhd1E9pfU+ul79GxPYmv23Vc435WrKXvbHVR
n3uz9zGzoN421b7CnDz6LuVur8Fk/zfn9zcxp6TybwoM+9ubfp99Ih+5+/ZN
c1Ay/0fntEJfnIPj2vWcDwAAUFv0ms0YQ+73la662Vd0f/pHLm779C06pk/x
5a4lX9RNWF9Nfo8sek3qJsbvmX0Y+s3ikrqrFMNmxv1U/s7WKbqvK+dlWBs/
NP7NXY+Zyf7vVF5Kx4tTdOyt2hwcqzllXoyl7yoPNv0++51c5P4t/hYQ46Gg
n47RuV25nafg2HY95wMAANTWyZpN6bsd3ZwDvbf70/TxLsWw5/E2/u/Zz9yn
P/dKwve77sSY01fOf25QNxP/3qOzdw/R7R1jLBm/vgbHbNzPr+uSWN+j67Ni
Tm73MYYz9b+1uCb3NmbeaZ/933XysvlrMNn/zY1hE3NKwRi2+VqeyEPus3OH
oDhz9+u/R+e2oI2P3ksPyftNbLue8wEAAGrrYc2mJI7e7rP3dn+aFuzhpvtr
lqH7XTNjnHJWN/Xr5s6/9eh9hG6e/Rhj7eab0jXqrpc4Isf9zDHj1im6Phv2
3bm32u19zLzTPvu/07l5qWswt73BsZpT5se45B3gTdbyRB5ycvAWGOej5xDv
6e6Z1wVtDG/L3ud8AACA2jpasxnWQ0rP2DxuLY89xPygLffedbtk/Pf3nul/
i27Xpxjt/3ZWN5m56eocxFT2Tb+wb/kZ94tiLX7/MLKvK+Vi6tmM6ueo7mnM
XKnONtW+SnW3y2sw2f8tiWMTc0rBOHa1i+8Ap/wzNQ6BsZb8fXeKznFG+x6N
q28dxLfrOR8AAKC2XtZsxlhK19fD10P2dH86sXZ2zvjv762VhPfRpxhz1lWr
9ZW6yf73rrqppTHWv7a0PmjcL4419z2gqy7Oqaich/cea7fnMXOiffZ/H+cn
98zYxXNRYFvt/5bF0v2ckpbtU2+ulu+0P+fMlND5M5U9d3KJznFG+x7tb586
iG/Xcz4AAEBtPa3ZjPGUrq9v6jzVXu9P0/Qz+bPf63qw9tbNO5spb1212nqg
usmuofBr/UHMuWNX2BnWxv3iOJec21n93dhGOZi6Nt96rN1ex8yC/O6ifSvk
Z8m+2aauwWT/d0k83c8pBdf6Zmt5Qbu7eHY05X/jYzNj85PxtIfc73rOBwAA
qK3DNZsl6+th+4t7uD9N0+uqWd9/StPvQr5Ht/EmxrnrqlX36NTN5L/59iAH
p+g2T8Sce57h4BAUq3G/PNavhXFu8gzaO+2fWitu8o33PYyZT9pn/3f9HP1v
Pt/SNZjs/y6JZxNzSirfpw57fmyFNufUdZN5ZUbMJWdAv0fHPaNdj/5u7eJZ
y9yx5RXnRAAAgEd6W7MZYypdXx+EPBO/h/vTB23IXgN40O5TdDvH+OauC1Y9
d07d3P33Hp2l3MW7ICvUVZP6WqvuGsW0mXE/PX4+4ZG36BqtVDfFz3rUrt0e
x8wn7bP/W6cONncNJvu/S2Pqfk5JL3YOdMp7Tq6L/ccx7sPe+mhG7fWy977r
OR8AAKC2HtdsxriKn4lPAftDW78/Hdc2pvaust+FSNPrluHvwGWu41RdA1Q3
2Tl5i27zk9hz9wXfg+I07i+L869Udh5k8XURbRgLe7gutz5mzmif/d/5uSod
L07Rsc9sn/3fuBppNqc8GVuf6WKPbmY7c97J7u5Zv1T+3FeXZ3U/uWbfo+Ob
Gac5EQAA4ImC+6qWz8SXnt3W/Jnxrd+fPlkjy+7zJ+sk5+C2zn3/4KJu2tbN
+G92/z7Cg9hL3jdq3ibjfnisp+haLWjro/3uZjW89TFzRvvs/87P1ZLnME7R
8c9o3273f80pf8SZ817srb9b5XKFNubsxXfXpoKx+Sr8udeCtpyiY7yJdddz
PgAAQG0931elZWe3tf4mZLd5XJjnonM9Z+QjbG0nzX+Gv3ofqZs//s1na6Bd
raFNtCH3LEfPq8yvq97G/eG9rd3vAT8ZM9/V7qrty91j6PqZmAb5WnJ+bte1
kfa9/9ss91uZU56Ms490967snbblfD/3FB3vg3ZkXZM3uvn2eHr+d8t7dIyf
4u12bAEAANiC3u+rUvnZbU3XRf/5re+ZsZ2j+36M+9m7EaXfcH22hv0zsL1z
+ueibkLq5tE6fpM+CejTwaFxjMb99WLd9R7wjFpp+g3rgutrU/ujKW+fpJs5
IThnu7wGU+a7zcGxmlPWibN0D7ib/cU7bcp5pqXpfFLQlsOCOgrvozTvzIRj
dJ4/xZw7tmxqzgcAAKgt5T/L3Pr9qiXvdjQ7F60gj2/RfT/G/Wwd4FT4785Z
I2meg4x1hKO6aVs36fm7v12vC960o+Rbfk371bhfpc9L95+6/R7wjGvyV0Cu
c2v3HJ3HzPblrnVvqn0V8/ZlwZjR5TWY247gWM0p68W6ZA+4q3OTM+fGt+h4
Z7Ypd4zuoo9m9kXz82hmxJ377MY5OmYAAICeFKyHNN+DSWX7KbfrNtWft85Y
3/hfXB30/Zw1psOCf39OHk4N23uY2U/Nalzd/O/fnPONvnN02zPaU7LOnJWz
xvEZ9+fFW/ydydbxzmjPnL3f94C4cmv3LTqXme3LXeu+RMfci7Tse8BdXYOp
4FujwfGaU9aNdclZ0F3sAY81vKu935u2lY4z1z5q/fzDtxl98d7TGLgg15uq
JQAAgJpS2TlW70Gx5p6JeKvqmVsL1pROgX0/Z21pUV+n+e+DNMnDzHianUut
bv7z787Z8zhHtbtSez67NIrNuF8v3i+pfF14WHs9Rtfu2I657ze1XsPeTO0u
aOPmngnqSfrYAy4967enazB7/y8w1s1cl1uaU0pqIGpsvhP7nOeHrs6RsRa2
b84zi3Pq6Vg5zmOa/zdJF88N3MnzJsYWAACAHqXyM6xCvq2zcC2k2rpNKl9r
bP6OWmYeF72fkfK+03juoM2t3+9QN7+y1mMvrdvcIFefVV+zTcb92vEu2X/6
NbY35B2cgtgPjeMrrd1TRD4L2pezZ7K59m2kVn6N18AhMPbSZ8OizpU1p9SL
dcl+9SVgjM6dQ04RNbBSW5ec+XHrfRz7V6mrsQ9OKe9ZtC77YcHY0mV7AAAA
WhrWXRbcq4adL5byvzH2+R571bgXrs1cc3lqlLtTyjujb9HaXEFuqpy/mObv
/bb8vpu6+VW0ttOkzQvzteQ7g4Nqe8DJuN8y5jnnLT7K9bnGePgg3lNmvE2/
E5jK90ZDazejfUv2ErpvX2BOl4zFw98Ohw3VwTEgx+aU+rHmnKN8T5O5JOXN
ISHzcoU2r7UHfHUZ++s4d+xJH+/ffx3/u5K6PkXnsUJuzYkAAMDLGu8Tl7wX
cXtv1XR9eox/yffdrnGfVojjWHif/SiuH2NOr76Ov5Pj66d/421BnIv6NhV8
v26t/hl/f+5ZrM3WCdTNf/JQeh0PcYW8N1S5XZ/beFwxLuN+wBrnmPel1/tw
LVYbn8ZrvyTGJtfgmMOcsySe1e6hdR3MaN85Ld9DCLk2ezeOHUvHvh8t6j0t
e2ZkcAyoW3NKu3iXnCtRbfxL+c8IdvWt7RXav/Ye8GdDbi93rPGbzWo4I59r
jS2Dqn8/AQAARBvXC47jvfn3hWsdj1yfV/5336lRu95WiPkw8/e+jHm87ovl
rHNs1WWlvir9/fdUeB7a2F9z66PmueDq5r+5OK2ch9u972HsiXjH88v4298r
9e/7+G8PuZs1tibj/rOYZ437K8eeuz7+qBYW53qs2yU1+14pT4exdr9Vrt2f
47//LWW8Z7XB9p3G39vNXsvC3C99FmOYc4Yx6OtaOU2/9zrWmD/OlXJnTnkc
86FhHX9Ny/f9fox9WRz3WA/fM2MZarzLZ/dW6Je5z5v2IuSZuIlrsMXY8p7+
e79gXgQAADYrLT/vbk0/K7d1jeeD/13L+/TvrrFWv3WrnEGb1rmXv96z312n
T/9dO8jpt0XfN74Th7q5qZsUNxZVf587uJ//WLcLzPU9mxz3a0u/30Nc6z2h
y9iO2/XMKd/S77Mh1/j984p52XXtdta+IY6XfhcqrXsGx709hbv5Tb/3Oa7P
hP2oUBer/U3TWd2aU/6spTVi/je36fc8MncOKfmd4b/d9X7b2C9rnFVR/XpK
gfNA6mts+ZXMiwAAwMaksjN3q2nQ3rWeuf7fnlFab11ly1a5F059roUM9/rH
CrWobm7qJsWORav376e+js7z2bi/7rjfSvq9dt/T+meuw4r52HXt9ta+FPCN
2B6N/bLkPN2eDGPJsId32mvdNqiHzc0p6ePd8aXvL9c2xHeIvt4DxpYe5/d/
zwDvJD/RufjsGJ0XAACAuXq7r2rY7uHdy6VrN3+N/9ar7+O9r9gvf6Xf5/7W
/D7WHMPvr/Je80Rb1U0/Y9Gx8ngTnetzR7n+wxbH/Qhj/Fvbg3pbOQe7rt3e
2pesc3/un2EPbWvPY9ye732olJeu6rZhPWxuTkn9PVPU5bfWW0v9nAl0Pbe+
i/evU2djy+gYnRcAAIC5eruvCmj/9buG2es3N//Gq+/jrXou8qf+qfmt1ClD
LZwa1J666WcsOlbu6+hcnzvK9R+2OO5HSh97UMP5mqVna9byd/rvNzkPFdq+
69rtrX3JOvejvlr6Xeza1+BQS032cHqr28Ba2NSckj7G6ajnLYdnmXb5fd+F
fXJMMe9pD7X7rdWYkZmP8DHlk2N0XgAAAMiXfn9v7Tzee1/S9Pr6JTreV5M+
9jyu7wavvd56fT/GN53ghWx93B/jvz4n03I/+JL++x3IrtaMoaVPf5+scS7w
HO+p8vMWFNXCJueUm3mkVv1e/86259tHnwx7/sMe/DdjBwAAAHwY1/iGdR37
hPF9cV1j+5Z+733MWSO5jGse1zVT+xbApK2N++njXbSvM/cfptaFr//NdY/3
NObgEN0+2ILxejmN18+PjL9R7l2H32/+ZjlGt43FtdH1nLLg7+vrPu9tzXo+
aL1+ufbJ7ZjyaG5/T3/O5V97rTsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgLX8f/LbZ7A=
    "], {{0, 579}, {1920, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1920, 579},
  PlotRange->{{0, 1920}, {0, 579}}]], "Input",ExpressionUUID->"dd8063af-1ee7-\
4831-bd82-481b9ba164a0"],

Cell[CellGroupData[{

Cell["Deep neural networks", "Section",
 CellChangeTimes->{{3.744885647233268*^9, 3.7448856511242437`*^9}, 
   3.7448868009717445`*^9},ExpressionUUID->"dda4dbf9-0585-42f0-b97a-\
968659526a59"],

Cell["\<\
Deep leaning is a branch of machine learning.  It is loosely based on the \
neural structure of the brain, representing layers of connected neurons.
The image below, taken from Wikimedia Common shows a diagram of a neuron.  \
The cell body is on the left.  It has many dendrites stemming from it.  A \
long axon terminating in many branches flows from the cell body.  The \
dendrites connect to the axon terminal ends of many other neurons.  \
Electrical impulse flow from the dendrites, along the axon.  The impulse is \
transmitted to dendrites of other neuron on a selected basis.\
\>", "Text",
 CellChangeTimes->{{3.7448856539371347`*^9, 3.744885672215163*^9}, {
   3.7448857055249376`*^9, 3.7448857131727395`*^9}, {3.7448857498606186`*^9, 
   3.7448857825171537`*^9}, {3.744885845438259*^9, 3.7448858877805758`*^9}, {
   3.744885937476819*^9, 3.7448861417481985`*^9}, 
   3.7448862371562924`*^9},ExpressionUUID->"5d3c53b7-4670-43d2-baba-\
b35e230db03b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
cDgcDofD4XA4HA6Hw+FwOLrG/wOZqgqr
    "], {{0, 159}, {318, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{174.84210526315601`, Automatic},
  ImageSizeRaw->{318, 159},
  PlotRange->{{0, 318}, {0, 159}}]], "Input",ExpressionUUID->"f9f74817-6125-\
45ff-affb-ac6d2bc8e79b"],

Cell["\<\
A linear regression model can also be viewed as a network of neurons.\
\>", "Text",
 CellChangeTimes->{{3.7448862523928895`*^9, 3.7448862859079356`*^9}, {
  3.7448864320997734`*^9, 
  3.7448864357561755`*^9}},ExpressionUUID->"b951790c-b1a5-4597-acef-\
83773bf16bb9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
q4v6PFI5jqgZy79E+fc9fn6VOx+Yh83rc0s8XcTZr1uOfZPax6TvHAtLEc/b
25ZnbdX2eX3BuauxT/VY/le4j+e5WJzJir/fX+od0xDPFO0hwKLFs+4m6mNV
rP0l6mWjtDumsi/mYy0Nz5EG9TZaFTFzSxz948h73rS8x9hzFqP2PL+LmOI5
/j3aGKNoY62n4VeVhtz5A03xt3mfOx38cy++uBfAUjXi7e/x31e50xVpe9eo
O95OJW1MQyrXMm+uoXa0D7vtfbmvBS4V/XfVM/NxSn3O0bb6JZ7lv7SrMiX6
WqchGYMALFD0R9zWYtqPY/VtX5Dmd402guvcaSK/tDt+vFP/9eb1tqXv275j
zE7EDB8bMe1V7nQdSfPfjTaCm9xpglrcp00oT/5X685r/wAWIWLuu4gz7uYY
vzbaDe7V2dZrT/z8tuN7X537XpiCqKfO+lmYtmPjn8PN1NuBWba0XefG3+H4
eV88x+zlDcxeS8x9lTtNPVxTs852nTtNjP438KkZP5/4frE3s9MSc1/nTlNP
13WTtuu03eROD+sVsfdd7nSsSTzTnrV5AHNWq6MtJubec50fa/VQY8VWIu3u
GXZwjbWW9zdj7ze5rwkOifh0UTF3yzW+q7WpWpeN0aXt2Ofb3GlZg9pzTf0N
mK203RtxFfFoo53hi7bT5Uvl3t1/7Ct2wnub66Nba43JSuX86Mc1xaONdoar
3OlhXeI7ZwzGePm8iucasDypHF++2nF7tetfTR11rTavp0b8/OmE935ovNce
Y0xOtCl+ib/R29zpyXj91l9idNGH8bKG/otM+at9A5i1Wl/397X3+6btOHR9
4AuVdseMnxJ7N/vMzfVmUmp93Y9rr/uncv3pZ33gjC0ZDz1UvlZx913utACc
KvoG7ozb2cmXqg989XXXJTo39m7p8z5pnjgMLdoOV9nXfSBPlHNkIf7uPT/F
3cBsRXxZ9Y1c5U7PFKXtmsA3udNCr/f15Ng77a6NXuwP/jr3tUAh4svv6vkH
86ga3/Uld1pYD/F3b/ko7gZmK8bheYZ1yyv1tYXpEnunck219xFzN+eHF3G3
tc2ZhFo7ajFWxzyZw3n1t7xibLX4+yZ3WuZI3A3MWZQBL8qAk/Ksqq/dqa/N
X8fYe2cP8BpzvJkEddKz8uyvtJ1TdJU7PayDutfZ+Vb1f8g3YHZqba/XudMy
N1Ffq8boi79nrIfY+yX6wj/kvhbWqzZ+yTre5+XfXTIWmBFpKzs5v6q1b29y
pwXgVOoZveRhNadS/D1jPcXev9db23iV+5pYF31oveVjtQ+ZcpFRpD/X2lGP
aM8j61cAsybuHiQ/lZsz1SX2bhxfzP0u1jj/eqAP3PxvRiHuHiQ/lY+MJll7
/1DeFGMDnpM1GYCZqo3ZUa/oN1/F3zN1auzdeG8Rhz+0nOMh93WxfKmc+yju
7j9fxd+MrvZ390Vd4p/8+JzskQjMmPrE4PlbtMs+5k4HJ9+3s2Pv2jna4u+T
zwNdpe1c0ZvcaVmiWj/k6mMgxpPKMej30dd7nTs9mfKgWs/2/9v4X3KnB+Ac
tf4RcfdweVytv3aXOy2cdN/6iL1fpXKvsfp5fua+NpZJ3D1aPhvPRBa1MYrF
POer3OkZ6Zr/ij7/f/q6w13udAGcSj1t1Lz+K/L6Nnda6HzPeumvro2Pq3uf
+/pYFm18o+d30Qf5PXc6WJ+0nQdexaKLbQOK6/sV37er+Nk/c71zpw3gFPHs
fhYLjprnVVuHNVNmoMfY+80p54q+8k+N/vIfufODaYt+sPvc6ViLWlvHl9xp
YZ2iTnFftesvKQZP5VzI57i+65bfmycJzIp6WrZ8v4ky4yp3Wjh6r3qbp91y
rp1YOpXrs+1bI13szV6pHIf6vKS69xxoT2UKiti0FoN/mWv9Itqzqn7u4nl2
c+DYot//Y+40A3SRtvOF1NPy5H9RZlh7beLGjL03r/d7Ym6xNwdF/GfNjnz5
X7WnKk/JKmLwu3gefJ9Lm1Aj3a393C3vudF/BMxBrZ52nTsta5W2YxVvc6eF
g/dpyNj7W+P3b2u/K/YB/yD25phk7tAkJOPImJBUrol+G8+G5+gLn1TbXNRF
v0T6Tu6vj2ffizYvYOqS+WmToK9q+vqKvRtx9d5zVTH3ns8Xe7Mj6qv3udOx
drU2EGNgmZRan3I1jrv497uxY9b4jrxrxNv/pOWCcz5e8n6AoVXtoLnTwR/3
w9jziWqJlz+feZ62OdxH1zkXe3NI1KmtHTER7gdTF23+Rb3jPsqVx4h/i3mI
1z1/VvF9uIlY+7H2eV/6+qxkrzFgwlI5BulX389XLr4v+komqiVefqn3S3c8
R9sa55329xZ7c0gyb2VyUjn23L5jzELEx7fxd1vFx9V+Xvdpu5f2bRWf19w0
fv89bdd7e4m6zff4XXF87/3syV5jwITFM/AudzrYuS9VX4k5SxOzJ/buPPY8
leuWP13wfrE3raIe/Jw7Hezcl7+0cTNn0U9zKLaufG/8/ibeN+o8umSvMWCC
xHfTpl1kmg7E3v/EwhtvD7y3WCvtZ8v7HjZenfH5Ym/+Ib6btmQuEYwm2WsM
mKBoo7zNnQ723p+riK+ucqeFP+7Lzljxlp8V/drFfO5P4due46r3vznz88Xe
/CNiu/vc6eDgPXpOB/YmBvqR7DUGTIw+73mIttu73Ongj3uyM1Y8ta+b1sXD
KXF3y+eLvdHnPRMRDzznTgcsXbLXGDAx+rznQd/39LTF3vHz96l9Hve+vu4i
Zu80zvzA54u9qfq873Kng073St83jCDZawyYCH3e86Lve1r2xd613xcx+OdU
zv2ujzN/iP7xD+fE3Hs+X+y9cvq850XfN4xDmyQwFSnWocydDjrfr6rvW1vJ
BByLvUf+fLH3yqWR53lH29HXaFuqj+P4ce5YjrWJvm/9cTCgZK8xYAKMYZ4n
7SXTIfZmSsaK4yKu3rde4M58itz5MmVjt5fAWiV7jQGZbV5fjMGZn6Jurf12
GsTeTMUYz4WiH7vRx93V19z5M1Vpuw7UVe60wJIle40BmUUfyXXudHD2vTNO
Mf99EHszCWOMh0nlOgVtsXU1xrzaQ6/tGP3f+/P1zlgmGFay1xiQkb7TeTNm
YRpyxxdib+LvYPC+01SuGdj8ey/i7Nctx75J7WPSd45FeQxjSPYaAzKKdvYv
udPB2ffvauNX7nSsXdrdR+zbyJ8v9qbqz3kc8Pyv2/q6j7znTct7jD3fn1/m
osLAkr3GgEyU8/OnDMkv7c59HTX+FXsTfwfFePPB5jGmci3z5hpqR/uw296X
O6+mSns4DK94ThozCIwtlXt6P+dOBxffR+PO89+D3LH3j5rPufODPEYYb94c
P96p/3rzetvS923fsfa8Mu4cBpbsNQZkIGZbBmVIfqlcW6oeVzzlThPrEjHb
kOPN2+Lntx3f++rc967R0G0owD/fs2fjPoExGau8HOYOZM//D83YIneaWJdo
Sx1srHJL+9LLie8Xe3fPq2LuwE3udMCSJXuNASNK1nlclDTwPE9g2oZuS027
e4adNK+iJfZ+kzvPpiqZiwqDi7FC97nTAaxDKud6DzY+kdHvp7oarNQYbalp
d02Dzmv5p9310a21dji/rs0jgmHpgwLGtHndzjVWa6kDFk7aTzntrrtb+JD7
2i7IE20psFJjfP/T7j56nZ+5LXMyet9jbGnlgpgAhlf0e5vfAYxhzmOUow+l
ud5up71u4v1tawaNuh/zQPnykjsNwPjGGPdySVzbEhf3Ptd7aeVCKucQXOf+
24IlG+PZCVCYe7m+eb1vqScdnX+YyvV2m/03Rf1s9vvdzP2eAudJ5ZpBtwN/
xlmxd0uf92D77y2pXBjjnsLapXKfmF+50wEs3xL6SNPu2j9H64Ob1+eW97zP
fS095cd9MnYKVie++9cDf8bJsXfaXRu9cz/0BelcRLmQynlhg61bD5SSvcaA
gS2lnS/6KjqPMUztYwo/576OHvPjVj8JrE8q9xi8GvgzjsazqRz3/T5i7rZ+
5MHXNl9KuZDKOfz3udMBS2eMCTC0JZXp6YQxhi11weK/Zz/WvHZ95i3BCqUR
xjF1jL139gCvGW0/7yWUC8la5zCKVO41Zq1aYDCb181SYu+4nra1ad83jmmr
Ey5qf9kltakA3aSRxjH1EHtXce0o64YvoVwYo00F1i7ZawwYWFrY2OR0ZJ2c
tLu37NH5f3Mk9ob1Get731Ps/bsPeui+5SWUC2JvGEeyXg4woKXF3nFNe+fs
pd21dx5yp3egPLhSV4N1mVLs3Ti+iG0/7Ol/rvrAB+1jnnu5kMp5/NaAgoEl
c/aAAS0x9o7ralurtm2d3cmMKRwgD15ypwEYz1Rj78Z7izj8oeUcg8e7cy4X
0gjr1wP/fNcWsQYxME2pXNPxY+50DHBdbWMMJz2mcIA8eMmdBmA8aaS9qPp4
lu6Jvwd9Js+5XBB7w3iSvcaAgSy5PE/tYwx/zzHMnb4Rrv8ldxqA8Yw1jqmn
2Lt1/68R0j7LcmHJZTVMTbLXGDCQpZfne8YYFlr3d12SI307wDLdZXi2nNVX
nNqfz+/7TOtSyoXN6z9t/F/J+sswuGSvMWAgacGxdzo8vvDzBecs5gfW+2sm
2VdSpC13GoDxpBn1e8d53pxyrj6ev32XC2OVCZvXfyxigXCV+28NlizZawwY
SFrofO+4tn19G5W3J5yrWB9o3xq9Ym8guzSj+d4HzrXzPO3z+dtXuTB2mZCi
nby4v6lc8/xd7r83WLJkrzFgAGm565y3zelrzi0s+j6O7iu7eb0/UlcTewPZ
pRmsc97hXD8av+/t+dtXuZCjTEi1MWpFPBDx923uvzlYqmSvMWAAS4y9U/sa
Pp/31JeOjjFs1NeKetmHqcfeyf7esDoLib2/NX7fy/O3z3IhR5kQsfZV7b+L
fZCK8effk3Gx0LtkrzFgAAuNvb+19Gu8it/9aKlnHR1jWNWvav899dh7lDo4
MB1zi71Tez/0zrn6eP72XS6MXSaklrbUVM5JLWLv52Q/JOid7xbQt1SOXbvP
nY4er6etD6NeP3rd8vvfdbATPkfsDUzKWP00Lc/Qc9eubJsvfXSd81Ofv2OU
Czli79rvirGxRb/4Te6/QViSZK8xoGdLitFS+5jCtnV7PrXUs76d+FlTj73N
U4IVOhSj9fkZh2LZjudoW+O80/7epzx/xyoXhiwTopx+7nBMEX8PvtYerEWy
1xjQs1TOC17EfJbUPm6wdb/Wzeuh5djO+8rOIPa+1VYL6xPx16BjJPfE3oVO
Y89T2c/cts9X1/efEnuPUi6MEHvfdziuKM+rfcjMAYcLJXuNAQNII/STjHAN
bX0Wh/aJbe1zSR3HGM4g9r5Pxh/C6qTaetgDfsa+2PslYt29c6VTuS5Zsx/6
JeLeXp+/Y5YLA8fet+mE/uxUjpP9NfTfAayB+hTQt2gjv86djgvS/7qlLvfU
4X1t+7x2GmM4g9j7ec73FE6Ryj7UQmt/Zsvxn085vo/PHDEvirjrduDPaItP
mz8r8uZrxL+Fb3uOq97/5szPb33+jl0uDBx7n3xPU7mWS/GPj7n/JmHOkjl8
QM9SuU7qbMvndP7a5a9S+7jH3tf6yZAnL7nTAGOpfY9fN37+qS1uqh1/0hzl
Lp+Z2xj1xJZn5qfUvm5aFw+nxN0tn78v9h61XBg49j6rfTyVa+89R+xuzCyc
IdlrDOhZKsez3eVOx5lpbxtT2HnN3dS+x83RMYZTjr1TOTfQ2iCsRlscnLZr
V+/0daZybPHZcfe+z5yCMb7/bbF3/Pz9nrh1X1/3p2PP2g6f33XdtEHLhYFj
75dzY+dUzle9j/jdXklwhmSvMaBHc43V0oVztmvnaeuvOTjGcOKx922aaVsK
nOPU2Huoz5yKS2K1E86/E3vXfl/E4MXY7R/pz3HfD/G8/XBOzL3n8380fpel
XBiqTEgd1jjveJ6iXCjmgL/L/fcJc5PsNQb0bOi62tJMPPYu5hDc5E4H6xQx
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
YxnKknoMUpUl1pZnMSLe/lj7Pt2P3ebUiPl/hTvfNdrsiZ/fdnzvq3PfC1MX
daSbiIOzxMCNetpzPM+/R7pWUVeFNYvvevGPj7nTMuA1FnXlm9zpGPD69pUl
78Z6jreUJS/KEuaq9p2q4u27Mb9PHdL3d6Pe9uXSNjWWI5Vrl/8RP5/4frE3
i9KoI1V1k6vc6Yq01dt3q3bV69zpAoYT9bjq+z6JumXP17fIvcYiFqjKkvsJ
lyUvyhLmIP5u79J2XsXk245SOQbljzTnThPZ/yaae4YdXGOt5f3N2PtN7muC
U0Ub6m08G5+jTnKVO11H0nwVbalVmidfBgHniWfUfcRKV7nT0/O1LWavsVpZ
8jzDsqSeZmUJkxHxa9WOVcSxs5uHE8+Gj7Xv2U3uNJHtb+FHI3b+dsJ7m+uj
W2uNWam1oVb9Ete503Tmddyk7Zoft+pNsEy19rZFzSNMM99rLO32x83y/ihL
mJL4Xi3u7zG+Z2Lwldq8nhrx86cT3vuh8V57jDELabuOUdWGepU7TT1d1/US
yylgK5Vjmf/5judOS4/XdDfH64my5IuyBPrTqKN9WerfXy0Gf5xr3w9n3ffm
mPFTYu9mn7m53kxe2o4t/76UelLLNdbrTTe50wP0K5XjtB/jOTb7emma4V5j
tbLkXlkC/UjluOxF19Farrl6ltwt4XnO0ft9Vuzd0ud90jxxGFvUIVbVvlhr
Uy3qTrMdzwnsir6haj/CWX+/04z2GltpWfKuds2z/ltjmtJ2fPnzWr5XLdf/
PS1wThE79/rk2Dvtro1e7A/+Ove1QJv05z65i92n58j138Z39TZ3eoB+1fqJ
bnKn5cLruJ/yNaTt+HJlibKEHtWeYYsdX35CXlRzihYxponWe3w09k7lmmrv
I+Zuzg8v4m5rmzNJtf6Jok53lTs9mfOiGqOq3wIWJp51/4xZzJ2WC65hsnuN
KUv+yAtlCb1I27E7v9bY190hX559x5anY+y9swd4jTneTFLazp9ZXf/EkXyp
+m1ucqcF6E8qxyxWMdHs+kvSRPcaq/X1KkvkCz2J73vVnjW759VIefTRd2x5
eoi9X6Iv/EPua4FC+nMfXO2F7Xk0+z4yoF3azrG5zp2WM9I+mX6eWlkymTRN
Tb0sET/RVVrgXg0D5tXf6mvL0lPs/Xu9tY1Xua+J9aq1o5onczyvZt1HBuyX
ynUWZ9dfkiay11ha2DryA+fVX8oSuopnk7F3p+WZ+tqCdIm9G8cXc7+LNc6/
HugDN/+b0dXa37/kTstcpO06dPp1YGFqbZGz6ZNME9hrrNbPpCw5Ld/uIt+U
JbTyN3JR3tXHdM7iec7ee3nyOue19xZx+EPLOR5yXxfrUuvjucmdljlSHsIy
pZnNwUmZ9xrTJ3dx/n1RltBGPaPXfBR/z9glsXftHG3x98nngXOIu3vNR+Ui
LFDarj05+X1jU6a9xpQlveajsoTfxN2D5Kf4e6Z6ir1fpXKvsfp5fua+NpZP
GS8/gW7STNY3Shn2GhN3D5KfyhLE3cPmq/h7hvrqr968Prec633u62O5anUl
z/P+81U5CQuUtmuI3U+1zpZG3mtM3D1ovipLViza0fwNDJe/4u8Z6jH2ftP1
XNFPXqzX9i2Va7P9nieeyjXc7BnOQalcV01dabj8VWeChUozWGNxrLSl7bpq
N7mveYmUJevl3o+Wz//sx5A7HZx0z3qbp91yrh8txxT7lTXHp7cp4nL7lbFD
XWm0fNaeCgsWfVKTbMNMI+w1piwZ7V5+ibYUZclK1L5bk19fYu7Sdo8/+zLM
xJixd+q+T/je2J11i2fMs2fMaPld7G2bdb8fYDhpuzfjXe60NNI16F5jtfrq
pK57qaq23NzpYJR7/Vc8Uz7mTstaaEecl4Fj72+N31drshWK+eFvar97E33d
zXN8yJ1HTEcq5ygaWzNefmtPhYWrfc8LV7nTU0vTy1B9pdGuuIiyJJVje//j
lPuVtXWsh3patnyv1tI0xn/i+oq9N6+3Xc6Vynnee8eSt8Tf+r75Ryr3yDEG
evx8v9KeCsuXtnszX+dOS6TnfojnTpQlz0soS9J2nbj/OPXyUVmyfEv6bs1R
PMONL5m4lnj585nn+dpyrpPXOd+8XjfPkzuPyC9tx0Vqz8uT/1V76lXutADD
Sdv1kbKPF00D7DWWtut0zr4sSY312dMM1ujQN7dcqRz3vIjv1pwlYxUnryVe
Pnmcd2pf4/zs/b3F3tSl7Rzv7HXBNYv21Pvc6QCGFXXo4pn7PWccl3rea2xJ
ZUkz7q79fA7xt765BYq/u9vc6Vi7WhvIde60sPce7VvnrNPY8+infjr3/R3S
ZMz5ykVd4j53OtZuSfVW4LD4vn+P+nS2fqzU415jS2k/3Bd3134/6fg7bed+
3+ZOC73d01vtKdMR9+M5dzrYe3/2xd7/xL3pwF7bqZy73bZfWLFP91n7g21e
7xvnOmsMPMuQtmPNr3KnBfcD1ibqcNnm6Kae9hpbyrPrWNzdyLcpx9/XcR2z
vh/8nsdvrPnEaN+arpa4uS2WLvq1i/ncn8K3PcdV739zQXp+NM73OncekU/S
zzo5aSF9R0A3aTtHd/Q5hKmnvcaiLLnNnZcXXkOnuLt2/NTjb2XJAqRyTUTz
iydmKe2NS9QSO39K7eumdfFwYdzd3P/77HHrzF8yhmmS0nbvzne50wKMI/q2
HqOePVosl3rYayyVa7Y9587DC/PhpLi79r7Jxt/KkvmrxXeT+/vi9/f/Lnc6
2LkvrfO0Uzn2u20e976+7iJuPmuceXxec4+yh9x5Qz61Mvk6d1povT+zr8sC
p4nn8l0aeZ3qdMFeY0soS86Nu2vvn3L8faMsma/4bt7mTgd7789VMh9gcvbF
3rXfFzH451SOBa+PMy/6uIv+8YP7dXdMw5vGuYt/G2u+YlFX+J47HRy8R8/n
1gWB+bo0Fjzj887eayyV46fuc+dZ7ryeePxdlCXmls2MdpN5mPszcImOxd4j
fH5b3H32uHXmr9ZOd5U7LRy8T8pdWKkU+39FTDdoPJfO3GssypLZ7iXddxvH
VOPvZNzyLMXf0k3udHD0Pv015+fgEuWMvcXd7Pm7uDu3j+OMzyrGbRTjN340
/g6L/75oHsUa6PuG9Yo63X3Uwa8G/qznU+uO0d9zlzufzrzeXuPu2nmnGn/f
6/uej6q9JHc66Hy/RqtX0+l+ZIm9UzmWvTmG3TjzlUvbdXWuBv6cT2n/Wv07
axnkzpepSvq+YfVSuV71oGtmxWfcnnD8bOd5DxV3184/ufg7levZP+dOB53v
1/0p30ey36+rMerWdL4fo8fe0df4x7pq+hcppIHnpRR/Z2l3H7suvubOm6lK
+r5h9SJe/DVUfTyduNfY0GXJwPk4+Fz6icbfypIZqMVxk/nbodN9u9NeMg1j
x94tcfc3cTeVKHuvBzz/w57YuhpjXu1f33aM/u/2PP04xzou0K9Uzssu4rnv
Q9TLT6nvR1kyu72rIva+GemzirEEk5kDGtduX9GJi7+bu9zp4OT7dp3ME5iE
tLuP2LcBP6sZd3f1Nnc+Mbw08JizVK7X3/zbKuLsnbkOaXctgop5Ebt5Nco8
AWD64nnwPZ0xP7vDub93iUuHLksYRrIm1Cykmc7lYL5tkkuTdsff/hjws86J
u8XeKxH1qkHWWili5pa/q4N/6xF/G3veLX/virbw3OkApiGVY75/dYmVTzhn
p73Goiy5zZ0HnHWPlSUTpl1r3uK5bP/e/PdB7E12Q/edpnIt8/rfVKc95Nve
lzuvpkh5DDSl7d5RvcRSKfYMO3KMcTgzls7cT47R7o+2kRlL5upPQirnt9Zj
i6fcaWJ9UjnPa7C2uLQ7frxT/3XR7tPSFmR9gva8ek7GCgI1Udd7TD2t65WO
rAmSzBmevWRc7GQlcwJmL57Fvl9578HOHOzcaWJ9Usd5fGeeuy1+7jSWIpXr
ohuH0S2vvmgPB9pEf9nF9fZjz5k04NwlxpGs5TVJMY7lOXc6uPg+3vp+wboN
PUawZWzHy4nvF3t3yyfjzoG90nb/rLNj43Rkr7EhyxJG+zv5W1kyPdrXlyGZ
1wGrd6wu1cP5m3uGnbSmQUvs/SZ3nk1V9Gtd5U4HME1VXBX94GeNQd8XXw9d
ljDq34mxzRNjrPJy+H7Bug3dlpp21xPsvI9e2l0f3Vprh/PLeE/goBjrdB91
+ZPrf2nPHCX9csuhLJmW2vhEa3QtgO8XrFvUv64HPH9zD/tPJ7y3uR7CoHuM
tbQTnJTeOEdzbfbCh5HuZbEHkP0rgKMiVv51al/avufMEvvlNq+Hluf5yfOe
UvvaJQ+5r+/Ue0y2+3E91zElc69XDZQnvl+wUmO0pV7yzG15Zg861zv62Ztr
snfaDy3e37auXOd+/h7SX5TPz7n/roB5SOU48SL+vj3hPVepZb7i0GVJpvzZ
WQ/3nDbgPeeZbOyQzEmdlFSuzzXLMSVzr1cNlCfqarBSY7Slnht7t9RVTpon
fkF637ek+ehnp7Jfo9nHX5Qvo+6JtsT6LzCciLOKPuv7rs+O1NhrbKl1yXiu
t8UNJz3XU3vf36T3y0zWzZuMNOBeNCOlf9b1qoHy5CV3GoDxpRH2Ojgn9k67
a6N3biPtKc3N9eGOpnvz+tzynvcZ7ul9GnAOAbA8qRwDdRcx9dE54Kkxtzst
eAxlunC8a9pdt+SsvvMM112UJYuaQzBXzbauOZpzvWqg/Bh0vicwTVHXuh34
M44+a6Nu8j5i7rY2zlHXNk/7+zpa4//UPibq81LvKbBMEUMXY9Bvjhz3x5rm
EYvf5k7/QHnypuX5fsqaoTv7bM4hfljyPZ2btIA+0jnXqwbKj1mPZQDOk0bo
I+0Ye7fVTSpZ9vNOJ4yRamkvKP47y5ioNMJYBmC5Ujl+/Nex50iqjUkeoyzJ
nCdta651na/afO9T7uvpmO6PypL80oLm3s+1XjVQXtxq24L1SSPsB91D7F09
c0dflya1jzV83yHt2fYgj3rzfe6/LWC+UjkG/TFc7Tnmd79NWvh+tal9rbQu
86faxpvPou9OWTINS7sPc6xXDZQPi52nA+yXRhjH1FPs/bt9dMx2z3RknY89
9aqT9s4YIM1FOf2c+28LmL9UzmEp4urrlt/9rjuOUZZkzoe28bJH+6/3lG2j
rV1y4TUvpr91zor2rSXFaHOsVw2UD4tqUwGOG6tcPfUZGs/dD3vaRqs+8NHa
P9OBOUdpd+2QSezXuvR6MDCeqPsX8ffHxs+v4udXa3jm7CmTDpZFaXe8+Sj7
dfR4zYu/r1OXFjg2eY71qgHyQOwNKzPW9/6S9suIw9vm2Y36LE7ta222rcU+
iTFR6ktAn6Kt9jmV48z/qv28+NnHNdQhU/uaa3vHj6f2/rvJ7um95xpecqdh
7ZYYe8d1zapeNcD1/+X7Besyh9i7do62+Hu0MUipfYzUZMdEpYXPvQTGF3XF
IvZ+rJ4vqVwL+/9YQ+wd19ssi34eOLYtjpjVWlHJPkjZLTj2nlW9aqA8eMmd
BmA8qdwj5n6Ez+kj9m7dm2Lk/GobIzXJcYRp4WsOA/lELPArypDCf1pR7N22
5lrrfmEtcfrk9/RuuQZlSf57cJca8z2WYk71qoGu/yV3GoDxRP3pywif00s7
ZmofnzTqHql70lCY1No56kvAkCLmLuLvL/EM/L9zp2mk625rB97Z6zu1jzfP
sl/mhderLHEPhr6+WdSrBrr2l9xpAMaTRhrH1GPs3TbXrvVcUT8q+ieKNTvq
Y5qKfoiv59SB0uHxUSfvGTNEGmvnXnRZDeSXyjXWijHJ/3nj/8ydnhGvu23N
tVeNY5rjzWexp3fLtSpL3IMhr2029aqBrn9fnz+wXHcZni1nz99pOdfOmKRU
1nma/RJtimdz57l3aX/bbKXzM32oNNbO/ziBvy1gPf6f3PXYsaT2duAPjWOa
481nOW81LTjum4sl34M0o3rVQNf/kjsNwHjSzPq995zrR+P3XfcJb33/gc9t
m5O0s9drl+f5UGlsfMZiy2pgGlK5Xmcx7rxo6xt8/tKUtMTWD7XftY03n+X4
WWVJfqmc732bOx0DXNes6lUD5cFL7jQA40kzm++951zfGr+v5uIVivbUN7Xf
FX0VzX0jd/orWj6zbX5fce73Lec6OkZqiDS2fIb6EjCYVO4rVsTdN2mF+9Sm
9jXXXsfvmnHAznzwuVCW5JcWuM75HOtVA+XDS+40AOMZq77UV+yd2ttId84V
daK97aQtz+CD7Z8tx//eJ6Z4b0uajo6R6juNLe9XXwJ6l7b7jD2n7T5ja4y9
22KHD/G75vM7ex3/gutUluS/B0uMvWdXrxogD642fuW+F8B4MsbeJ6+fEedp
W9/m5HXOU8t4wAPHtrXBfjh0rtTDHq6npHHP+4v+qKvcf2PAchSxdirHlxfx
2F+1n68u9o7rbpZJ3yIm/6M8yJ3OC6/xWeyd/R4sKvaea71qgHxY5XMT1ixj
7H1yP0BqX9vm7DpNl+dvau/X2Le2WzNtF48xvDD2Pul4gEPSdk+x25bfFWXJ
Y+40ZsiT1jXXGv99VlvzVChL8ovv3n3udPR0LbOtVw2QF2JvWJk00niXPbF3
odPY82irbNuDoq95463jjlL7uKfW9XLS7ro7Z/XJn5rGQ+/N/fcFLEMq9/Au
4u53e37/11qfOS3P/mZZ9SZ3Gi+8vlXe1ylZUow253rVAHlxm0bYawiYljHK
1QOx90s8h/fO40llH0LbnhHFM/ms8Udpd7zTTr9Eam9z3Rvrpz398kOm8cB7
i3J6dX1QQL8ipr5P5TjzqyPHvuROb6Y8altz7Xc5lTt9F15bMcfgOXc61i4t
ZF7wnOtVA+VHEXvf5r4vwLhS2Zfx98Cf0fbsbP6s6Cv4Gs/mwrc9x1XvP7sv
Ie22u75u/P51y2c/dThv2z6VZ42ROpbGI+9dzPg0II8q7krl/kZ/dTi+OPY6
d7oz5FPbGNrKbNdYi2u7VpZMQ/w9Hf0eTtXc61UD5cn9xk3uewOMK42whmnL
c/NTal83rYuHC+PuZrtr2zrp566xWdTB2sbGnzRGqksaj7z/Nq1sr12gP6nc
N6z4x8cT3lOUJa1j0pduT3l28dpQuSVjYicjlWNPrnOn44L0z7peNVCePM/5
ngLnSeU8vtuBP2Mn9o6fv9/zTN3X1/3pkrpM2t2jbGc8YMvzuXDKeO+2fdA6
18G6pLHDOe5OqTMDFFI5xrx4fpw8HmqMsmSq0pl7Ek9d/C2s8p5OTSr39Ztl
ub6EetUAebLaNTJg7YpnefFMH/gzWmPv2u+LeksxruhH+nNMUtHHXfQnHNyz
sWMa3jTOXfy7Oda8l7lFqb0P5OgYqS5p7Pj5s24fB8aXyjmlj+Hksa2p7Csf
tCyZqtQ+5zvreNaeruteWTINaaZjEJZSrxogX66TdXlgleL7/zzwZxyMvUe4
xrZn76TWnu0zjfH+2c4LA8YV5UDR1332XJW04nW50u74ra+509TTdSlLJmKM
utrSTLnuN9e2FKAfQ5evOWPvKT97h0ijtlTgFFEHLOLumx7OVfzPVe5rGjn/
2sbTZu9X6+G6xHoToy3kpLyadN0vlXMIbnKnA8gjDbxGTq7YO5Vj2Ztj2CdV
J+o7jdpSgS5SOd+wqP8VY8x72esirWzd3tS+dvNS+rw/KkumZW3frwvyaQ51
v9W1U7JuqRwf9tT1u5jKucidj+/jM0fOj2KNnMHWxc4Re6fd+Xdn7wc+pzQq
m5fvjOfXZJ895JHK8eGPEXv31o+2pra/VK6//NB4hk9iLmlP16dfbmLW9P26
II/mUPe7TsaUsDJpOzerudbWP/tKHzj+7L06933mFAz9HBg79m559n6b4LO3
9zSmWDdTW+qynfosmfKzh/Glck20Yoz57QDnXkWdMuLutj2Tsu9b1OM1Kksm
JtrMfuVOx1TNoe4X6Ry0vwumqK0umsqxY8U/nlqOf3NJ3L3vM6ck6mJXA+f3
7+fhgNfRtt5sF0f3mZx6Gjevd8lc78UTe3OuqPMVz/rrAT/j5P3J5iTqCs3+
7n/613KnrcdrfLeGNpQ5SuWe0Iv9fl2QL5Ov+zXu4WDzPGGKTo29h/rMKUkD
7h2ZdvsHfgx4Hec8e8eOvQdJYyr3YtWWunBib06VyjEx96kcZ3418GfdDVWW
ZM7Doq+7GBvXnN/9khY01rx2D5UlE5T0me7Ll8nX/SKdxi6QXdQLf8S/q3nV
TxGvvYmfv4n/rn7+tnGO19X79pz/j7mOzbpo7XOr72L1ns9HzlGluyiPH+Jn
xf/v9JG3fGZ1Pe9bjv0UvxtzPfCbNFCfaRJ7j5LGtPD+pqVIZft89f3/WX/W
tRxbPVt+H9d8llxyPMuXoq6Xynhq8DWS0wLH36TdtZuacfdk1k/u6XqVJROV
xG778mXydb9IZ9F2cpc7v1i3tI1X6/XF+niuqsx7aPz8Te0ch8aLt/VxN+Pg
4jO+1s79Obw/co6HSO/PeP+3Wvn89VA60nZ8zE4cWrvO0erKqewXGWTcedrd
g2WQsQVrlowRnIWIhV/iO149M6r6e3P9ieqZ9BT/rp41L23Ph1OPZ/lSuVZ1
8Y+bkT93UbFbUT/fU29fYtytLJm4ZMzybKWB5/xAF7WY9I+1CGt10n9i4drP
q/rl19rPLoq9LzxHM92va797u+8cqRy/VtWL6+//XTfPcC/u0gBjmVLLPJzc
f3dLkwacM0Dv96o5bqf6ftSfae/bngPpzzbC1+cez7Klsi31LlcMPFRZkjlP
m/3eP9IE13Hq6d7d5k4HB+/RbVHm504HJ9+3m6Rdiwloi1Pj529qZVxbbPpU
+1nO2HtnvEqtLv3tyDmqevGn2s+qPuKL1nY7815cJ2OZZmfzuoq/mavcaeGs
+/eqGTen7TyN5nOxOrb5LDnpeJYrngfFvO77NMIY8z1pWFxZkrb9ATvz3pYi
2StjFpT58xTPZH0kZNcWk8bPW2Phtp9njr3b5ly2pbHtHDt93Gk79j5Le3oq
xzLd5P674KR7dpu0gc9OfP/fp+36TfXnxc6YmNrv2p4lJx3PMqVyvHDR1529
z3lpZUl8Xxf9HVKWzEda4NiSJUvbdTeytIdC3Zpj7/h5Nbf7TS0WH2wPrg73
42bjPvffBZ3vVzVP/zp3Wuh8zz7UngcvtX8/xe8P7rnQfJacejzLFHFT8SyY
xDzQNOD6nQx2z56VJfMglpuXaCu5y50OKIi9f49PL9Z2q8abZxvPJpabF/Xb
eal9x79FW9ur+PnvfRrSn+PEj/Zjn3o8yxLP7GK9h2Kc+aTWN1OWzEcyF3V2
UjmG+TZ3Ojh6n66SOQJMSB+xd/y8bd2yfXMj+4y9d9Y4Te1rJ+27zmrNtWod
9+xrgKey/+Q+dzrodK+e04LGdS5dPAd+tvy8Oeb8oe35cuCZdtLxLEMq+76e
I/aeXP+XsmQ+lCXzk2JdhSl+9/njPt0lfd5MSI+xd7XWUH3dsn1rAu/7zJ97
fn4o9v5jrdP05zrnb459Zks6R9vT+8A90fc9A0k/xaykPf3TadtWV4+9q/7x
H41z7HumnXQ88xff/+I5Pdm1e5Ql86Asma+k73vSon1UnzeT0mPsXd9/s9oj
/KkWk3eJvat1TJ/i38f2966OrfbTre/v/anLdcbv6mu6T6J+nPRXTFqtTjuJ
uZ10vm/1Z0x9D+4/+r3j2B8tx7Y+0845nvlK2/3DrnOnpUNai7LEvJiJirLk
OenzniWx3bRpG2GKarFrW+z9ew7ksZ/H796n7Trh3+LYb3H8qw6f+aoWPz81
Yu8/jq/H0qmcq/0U72vdf2TfZ8bvqnaDr/vyKcN9qWK7m9xpofX+aBuZqdrz
omrjq55TO/sbHDj2qXnsOcczL/FcfgxXudNzQrrFdhOlLJm/aIuzPv3EpO2+
E+YEQA/SgX7sM8710Ne5er7Gm6gzeW5MSCrX7ZhFnxfQj7Sd23mXOy1npP1G
HXR6lCXLkIyDm5xkPAn0ro/YO5X97NV40M+5r2lPGu+T8TKTEvfkLnc6gHFs
Xh/nPg4pnlv2I56QVK7Rd5c7HfRyLz/qK5mO4llnPAn069LYO5VzvKu54T/6
TFvP11nNJZrU3jVrZQwTrEf0ndxFnXrWz+C03WfnOndaUJYskXb5aaiNUbrK
nRZYknRg/nbH97+K92df17xDWm+TtXKyM64M1iPaPR+jPr2I+KgqS5ZyPXOl
LFmm2hwC9zXfPajGmk92/wlgHqK+ZLxg3ntQjA+0ngosXK1P8jZ3Wga4NmVJ
/nugLFmotF1b4Sp3WtYovlv3udMBzF/0wViTJV/+m8sFKxDzBBfbd6VvLnv+
V2sHKEsWKuapGKs4fr77bgG90p6aLd/NuYeFi7GK99EvvOjvurIkW75XZcl1
7rQw6H2u9iK8y52WtYg53uppQO+q9lTteqPldzUvz9whWKiIiZ7j+bqKZ6uy
ZPT8rsqS29xpYZT7XY0vucmdlqWrjQuV18AgtKeOls/armHhog/4ZY3ta/F8
M+94+HxWlqyQmHCUPPbdAgaXtus43uVOy5Klcs0Oc7ZgoaLvd7XraKi3jpbP
xhisVK1tz1jo/vPW8wsYjfbUwfNXXQkWKsaDPvqO/1GWrK7ff6T8VZasXNqu
ryD+7i9Pq7hb/wgwGvH3YPla9YWpK8HCpHJNnuL7bZ+tbZ4oS4bJ1zsxF/G3
IP7uLy9/x93qacDY1Jl6z091JViotN2D5iZ3WqZGWdJ7fipL+EMt/r7OnZa5
EncDU6DO1Fs+qivBAkV9rVi/4dn3+2A+VWXJbe60zJmyhH3Sdv73Te60zE1t
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
n5K67cpNEXvH66Tm0vTa5wKmEN7G5mhHHZZvq4sfcwvl3PnVlYPhbQxn0fdz
WdV/Y922ir3r9faD/dhDj4dzdorYO96nuf5Z17jzVP9Jsi2tcV5qTHhq/4NB
sXOP+3T2mbfE3YPXkGOW30v1jePzT3/Jyk0Ye6fm8iSvFd7W0miug/scDsxn
gpTwNn7pOnda1qhor1Ae9s6rq5hX33OnZUTa/+4rlvh5c8x5NT70snFc23zv
QcfDuTph7N2c990ZSyeO3/vvOXFOcxz53rO01A2P3rO76xotsbd5kJmJGyfN
R/W1FZvy/XSoTInvz9TalSnWvqCX8Nbf7T00TT5e507LUoW3sXKry6PQ0j8d
3saD1mPvqp+p+Q5vW+d80PFwruaMvUM5BvxTtBdLHzg3FSPvjR9v3OtgvS3s
91mPet7EvVr3Lm+pU3r/ZFSLu1czTmzJxN/rduLYu/muLuLwx5DeG7Lz3QoF
cfcs+flnjbHlzPlS7RH/a82/a+FtDabmHtzv+r3jsY+JY19qP2/u7z3oeDhH
U8XeoX38YKse12z2Y7eu25OIqZNjuhP1u+Id9GmE3nXVxLHWH8ooiLvnzNff
8nV9hrzPRlxrb5+K8LavQ7Peltobw56LtAribvl6mvz4J9YbNrEmfHjbO/cl
vo8/xv/fqzt3HPvSUs8edDycm0Q9qXc9J/731LWP97Gxd2rNteS6PWE/Tm/b
0zu1hvoUhsTe6pL5ft+rvV5XX3YuUdCusUpD3mcHrjOoXbLjOu/GpOfOH5Yp
vPXPig/ny9+zj7+DvTWBCY2NC8PbXoCj49Ue90ituZbqQ0mNN0+OU5wp7hZ7
r4B6xMny+e+YvNzpYNB31nxHtc7vOXCd1Dodg9c5D+/HJxknxJ7wto/Yde60
bFl4m9t8lu2p4a29/ip3WoBtGBMXttSvCtX6tMX48+Y6h3trkPdMX+pezfEw
zWu3ruM2Y+zduiaQ2Du/UK5J+kf5eZK8rvYfu8+dFnp/Z4PeaS3XSK3RMThu
DvttqfZi5J34jrGP2Ony+z6c2Xim8H4fzYvc6QG2Y2hcmIqhY8zduR7OEbF3
qj73tXFMcxz5kD7o2dcbF3vnFco9OPWPyHPav6+2NsVe78cYL6fWLh+6f+Nl
431ejHuyNg/vaNuT5zM/azWm4v6c2huA0xgSFyb6I3rHkWNj73huM7Z+PpCm
1rpa4lqjxlbOlcfMkv9nU2dYkvA21sAY/4XriL3/vq9C9z4OX0N6/lHxru1c
VyeWC5W993w4sK8k5yeUY4DPqg92CcLbWIPr3GmZ+Tm/xffPpp8TyGdg7H03
JM5tnHtM7J1ac+1jy3X35oM3rvXQOP65bzpOkcdMnve36mnZ8/+3/F+2xDsq
FUtXe8ZUsfJDy3HV+Qfj5o543zhz9uw+n4M1O3Lm/9VW8z+2LdzH8mpzzwcs
x8DYu7k/V++49cjYO7Xm2tf4b81YunOOYiodfdsPTpHHTJrvV0G/a3a7z9PO
99zpoPM7ar6jbkL7uh6H9O6vPnCd4p0/+5wg1iGcSb/r0oU47iB3OiZ+potQ
ttEXZZV2YmBWA2Pv0TFkSOztNTCdzXrgQ4zJ39XVelwnNUZ91vqd2Pv0Yj3t
d7AWT3bhbe73Ve600PodJd+JoVw3MzWPuzVWDiP3bw3l/mSp/TP0gVP8fhT7
J/zMnQ7+fhdFnHqbOx0TPUs1lkL7MHASR8bevfq9Q3rP1z8D05lcc63x915z
t8N+/31htnmFYu/TC+VY56fc6eC/7+NbMPZ8sQ61R8YY/C6+O+uxcdGm+iO+
i0fF3Im0fAj7bbWD1lxnW2rxkffHAoRyLbLiD6seUxbe9k/7nDstwPkYGHun
YtZD65sX9ahkv8mItDbrY83r9h3nmGoLeD30LKfIYybJ703UC7YmlOP5bnOn
g+R3c9KxQD3S03xHe2eeqfA2huk6d1p49718X2v7dvydKsqjX+oJwKkNjL1T
c6Vf2mLe2FfSthbPnxFpTa25NqgPvnat1LpxhaIP5+D871D2w9/1idfF3qcV
zC9epFqbyEXutLD33Swq9k6lKXd6yPZ7cLvWGG/Lwkrn38dyqGjLKeYwGEcB
nNzA2Du15lnlIbytf3sX9vuk99btGZHWrvsPHpOYSlOjTaG+pm+19lBzzOXB
ce5i75P+PhubuGChXEfWnM2FWVrsHfbX8njJnUdk+T24CNaKWKwi7i7i2Nzp
GJje4vfJOjBANkPjwtAyd/uAu5Z7DZ4f2BIvv465Vrxeqi9/iIP97WLvk/4+
/1auLld46yu5yp0W3n0vS4u9m+9l662dodhWd587HXR+R6tYdy3+Lil7gOzG
xIWhHG/dZ+3b4pgvHfcaPL86lOPYk7H9EXlQPE9qLvshr33qhGLvk/0uX4cV
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
bK89c2ZKr3YUOGNzx2unjL3X8P6dM43KZgDYHm3rrfnyMVFneoya69YOXr92
hvQW+8D+zp1vQD5h5nlEYX8fsd5rfg+8z+Lfv3OmMcR1M8NK9wAFANJ2n392
/s2djqUJ5dq0zb1Z2xTHfcmc3mJ/IfvAwpkr3udhpn0GY1z5Ltac6T6Lf//O
mcaivzuY6w0AmxTKPaFnmyO4VqEcM1jsR/sj0Y/x3361udPpOwQqYca9I08V
e8d7Lf79O1ca5/wOAYC8Yp/pfe50MPr7M3YB+CuU809m6TMN++uGLW5d8S2I
YxcucqcDAJie2G3dYh/Jfe50wKmFcv5x4WPP4++GHD/FPTPlyyzjzmMf77vx
1LmfdWuMNweA7Ytjlq9zp4NR391s8zthycLb2l8fGz8v+mf31gGrHT96rHLb
PZcktsdZ/2GFQrm+ufHmALBhRVlflPm508Hg763oI/mdOx2QQyoODm/rT++N
h959Lo+dI7yS2PvKWKb1KcaZB+ubA8Dmhbc9TS5yp4VB39uT8Qqcq6Gx91z3
XCJjmdYnWHsFAM6GecPrUvVt6SNhCWJM+hj/XM2r/vuzor85/vwy/r36+afG
NT5W57Vc/90862YcXLvvf2uBRXcHrlGluxir/hx/9pzqI0/cs3qevT2k4vWK
f7vJ8H0UY2LMG16J2P5dvM+vcqcFAJif8W7rEttKbnOnAwq1eLXwGmPS+r5L
X+LPnxs/v6xdo2u8eKqPuxkHF/f4Ubv2XfTlwDWeY3pf4/kP4W3v5h9d6Qhv
64/t7bdVe84sfeRiufUo3uXBvC8AOCuhHMN8mzsdHPyeqnaSi9xpgUItJi3i
zQ+1nz/UY+Haz6sY+UftZ0fF3kdeo5nuj7V/+9R2jVDu8VzF6fXzL6vrZvxO
xHMrEPR5A8BZCsYxr8Lu8zOYH8CCpOLU+PMqBm2LTV9qP8sZe39KHF/1aT8c
uEbVjnBT+1m1F/ZRa7sd+Z2I6VZAGwkAnC9x3bJpH2GJUjFp/HkyFk79PHPs
vTcuvCWNqWvs9XGHt7H3H5rXPfH3UsR15n0vlPYRADhvwXjmRQvmBbBA5xx7
x59Xc7sva7H43h7jmb6b38Ga54sU9HkDwNkL5V4nT7nTwd73ch3r0fq8WRSx
93/j04u13arx5nvj2DN9N5+DsTKLE97auf/JnRYAIJ/wNg7uc+604Dth+aaI
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
AIBp/P8TNxld
    "], {{0, 886}, {991, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{247.684210526313, Automatic},
  ImageSizeRaw->{991, 886},
  PlotRange->{{0, 991}, {0, 886}}]], "Input",ExpressionUUID->"e69b03b3-0829-\
4ff9-9463-5c68c186cb54"],

Cell[TextData[{
 "In the image above, the first (vertical layer), represented as three nodes, \
is the input layer.  Each node carries the value of a variable.  In a \
spreadsheet file, this might be a row with three entries.  Each entry is in \
its own column, with each column (header) being one of the three variables.  \
In machine learning these variables are referred to as ",
 StyleBox["feature variables",
  FontSlant->"Italic"],
 ".  The fourth column in this scenario, would be the ",
 StyleBox["target variable",
  FontSlant->"Italic"],
 ".  The aim is to use the values of the three feature variable to predict \
the value of the target variable."
}], "Text",
 CellChangeTimes->{{3.74488631287927*^9, 3.7448867957495627`*^9}, {
  3.744886837156021*^9, 
  3.744887143483747*^9}},ExpressionUUID->"02b9243f-bb60-4439-b7e5-\
05c6bfa79f39"],

Cell[TextData[{
 "The second layer above represents a hidden layer of three nodes.  A weight, \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bccf27f4-50bd-4f4a-a052-21c8423e95e1"],
 ", is multiplied by each feature variable value.  A bias term is added to \
the sum of  each of the product.  This results in a predicted target value, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["y", "^"], "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2abacea3-8bdf-482e-bd20-1428ef6f44d9"],
 ".  This algorithm is termed ",
 StyleBox["forward propagation",
  FontSlant->"Italic"],
 ".  During the first ",
 StyleBox["run",
  FontSlant->"Italic"],
 " of this forward propagation, random values are selected for the weights \
and the bias."
}], "Text",
 CellChangeTimes->{{3.7448871484369683`*^9, 
  3.744887155355905*^9}},ExpressionUUID->"160a046e-a209-4637-8be0-\
8493d9c07553"],

Cell[TextData[{
 "The predicted value might be different from the actual value, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e194d0b5-e59f-4767-b9d1-81440d773c6c"],
 ".  Depending on the type of the target variable, there are a number of ways \
of calculating the difference between the predicted and the actual value.  \
This difference is termed the ",
 StyleBox["loss function",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.744887156881651*^9, 
  3.744887183131482*^9}},ExpressionUUID->"1ea082f0-5d7c-45b3-9173-\
d1ee21ede35b"],

Cell[TextData[{
 "All of the sample (rows) in a dataset go through the same algorithm \
outlined above (forward propagation).  The losses are combined in a ",
 StyleBox["cost function",
  FontSlant->"Italic"],
 ".  The cost function is a multivariable function with all the weights and \
bias value forming the unknowns.  "
}], "Text",
 CellChangeTimes->{{3.744887186499954*^9, 
  3.7448871944907703`*^9}},ExpressionUUID->"e37e96f9-59ef-4428-956c-\
44c3b67d9f4a"],

Cell[TextData[{
 "By a process termed ",
 StyleBox["backpropagation",
  FontSlant->"Italic"],
 ", the weights  and bias can be updated by gradient descent aimed as \
minimizing the cost function.  This minimization is done through the \
calculation of the partial derivative of the cost function with respect to \
each of the unknowns, a single variable simplification of which is \
demonstrated below."
}], "Text",
 CellChangeTimes->{
  3.744887197971157*^9, {3.7448872543712173`*^9, 
   3.744887271875126*^9}},ExpressionUUID->"7a5ab0f3-32e7-4f07-920d-\
d00f492bf9bb"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9DqDPFivQV+L9N8W3+ONGPx9EebvP+0/qJ6x9iN0HVnQFWF+L/iI3xHuGTE7
uTMuuPLawr5+smCbrs0L5lvcJeH+/vPhnBIhC7oi3O8Ff/A7whnVZCd3smCy
fi0MrzXas+7rMEXP3g1h//4za0p27NjR9qX0RBZ0RdjfCz7gd4RbKshOTmVB
APHSHELNH1S5uKaELAggUGRBAM5QBtTY4MaNG51bU0IWBBAosiAA5+zduzft
GR8+fLjtS1lFFgQQKLIgACcpByoPKhe6gCwIIFBkQQDOUp9Y/WL1jdueQ0gW
BBAosiAAp7mypoQsCCBQaW7TefHd2pqQBQE4SGOD6hm3tabE3j8DQFzm5uZM
TkouX77c837mPv1+TuzZsye9z+Tk5MjXo8eYmJhIDhw4MPJjWMiCQB+as9Z2
bxJrfNmXGkBYlP9MVpqfny+8j24399m0aVPPx9q6dWt6n+np6ZGvx3wcPVYF
xs6CKyZXanrY96MoH2rF/+rWL7R9LdTq1+TXV+pHK/X1tq+Foqh4asW5blYq
zDy63cpTqoke9xt7/G3F1ErNVzmGN+p16f7mfdv+GlFUHaUMSB50r1b8cvdr
8l2+LhRFNVErDnQzz3yPt893376n+//tBfdxNjeRBSmqd5EH3azu1+WJ7tfl
HW1fD0VRYVd3LE5/uNzj7frPgjU+uKfgPuZtc21/Pj2unyxIUT2KPOhurfhW
t2f8y21fC0VR4daKTVZemsy8zeShA9afFwoew4wdTmdun+jmxHPWx5grGlvs
3r9nbrMea8G637x5rF65zX7MzrX5fwcy19Lrc+5VVa5BoSgnijzobq34VPdn
z6favhaKosKtTo85g9Z431Q3iw3KW5PWbRNWbjvXzW12jpvq8zhbM7dPZN53
oft4l811l7i26cy1mPe9nLnuyYJrnbdqctDzSVE+FnnQ3epcm0Oo8cFvtX0t
FEWFWdZY2YHM7SYPbcr8fat1n+0mY2Xed77HY9rjbpsyb+uVBc3HXSh4H3uc
Lyn43OwxvWnrdjtf5nrbHXrEVIRFHnS3Vryj+3V5gq8NRVFVV2dtzuA567aJ
gttM7rIzlVlTcsC6zeTDXutRzPvsydyey4LWtV3O5kDrPiZ3JgVvS7LXV3Cd
Re9HFqSiLPKgu9X92ny3+7VhDiFFUZVVZ/2cwYnubduzGcrKZfPWbSaHbbdu
m+v06AN3314497BHFjSPlVuzYt2nX6brO8+v19vJglTMRR50u1Z8vXOtZ/zr
bV8LRVHhVGdtzqBZi2HG7qas+5jMeNm6bV2GzDyWmdeXrdW5eJlrKMqClzuZ
rFlw7T1zG1mQokYr8qDb1bm2pkR58FNtXwtFUWFUJ9P/tfLaROZ+JptNlhjf
G1g93m9rv9sKrp0sSNVew/y7DrD+VdvPP1X4b9KsKXmg7WuhKMr/6lj9387a
XMGi/WNW+7+dtbW52fXHA/Nbj2volwUZF6SoBqvDuKAXxdeJoqiqqrN+zqDJ
Qf32ld5j5cLsHn2F+w2WuIaiLDjf61qs+5gcm5R5zDJvJwtSMRf5wq/qfr0e
WKm/7LCmhKKoMaqzNs/PZLyi8+YmrfFD3T93Xkln/V5+hecX9/j4RVnQPNbl
Xo/VKbeOmCxIUSWKHOhvrfhi51rP+KNtXwtFUX5WZ23O4OV+Gci+T6d4b76J
zvr1I7m9YLJjidbjZrPghPWx1j1W921l9xccNgtOWG/r2Z+mqJCKHOh/KQd2
8+AX274WiqL8q47Va+302Buwe79563699o2Z7Kw/e85eU2yyXXZdSq9cNmm9
j/1Yl7tV5tyRobJgweeZrn9u+2tEUXUVOTCc6lxbU/KXnWt9Y76WFEWVrs76
OYM95/rZ2atozM+6X9EZwpe7uWq6bBa0ru2AlS/Pdf+u2ytfO2Jdvz3uOFTP
m6J8KXJgeMXXlKKomKpTsAc2RVHliswQdnXHBr/b9nVQFEXVWZ0Sa40pisoX
OZCiKIryobo94KK1JnYPt+d5xRRF5YscSFEURflSmfmGuXPsujlwqH2tKSr2
WvEEOZCiKIryobrjggcy+c/kwtwaFIqiBlfn2lpTciBFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFUZRDZc5lbPs6XK/ufvUH2r4OiqIoiqLCK3NWYksf25ks6PKZQKNk
QZc/H4qiKIqi3CmyYHodl10edxs2C7r++VAURVEURakcyoJO92BHyIJOfz4U
RVEURVVbRb/7s7etmO6OF+kvCyu1qXv7ujzWfft09/bLRWNM6j+u1Fz3vpe7
95/vlT+695+37j9V9LG7t01m7nvA7nda17fH+nzmzedjfbwDmbdPFlzX1u7b
7TpgPUb2Y2wd82tQ9tqzz232cfT+57q3n7Oez0Gfz8DnhKIoiqIo/2pQDlFW
6P59T/fPe0y+6pEFTVaYMm/X+1j3WbByypSVS3plwQWTWbrvs73Hx57sPu6C
dd/0732uz9znnPU5zXf/vr2bj+a795nIXNeE9dyYx5u0HsP+HE0+LcyDQ2TB
Qdc+8LntXMuK2euaLPH5DHxOKIqiKIryr0pkQZPnNhW8b1EWXMjcJ80n3T9v
795nu/X2TQOyYJpNSnzsXD6xPt5Un+tbvY/150nr7RPd26bLPH89PseJ7rUV
zq0cIguWufZhnlvzue0p8fmUfk4oiqIoivKnSmTBTZ213uBcJhMUZcHsY63e
J3v/fu9nvc2MVa32M3t8bF3jXOZ9JzrrP5fCj2Nu76zl3qLql1UPZK+rkx9H
nCv63Mt8DYa89uzHzT7Opu59zZhh348zynNCURRFUZQ/VTKHKFNNW/lha/f2
2rNg9+1bO2vz4A70+dhDZ0H7Plbu2VpQuXHRHs9Vr89R1395jK9BqWvv99id
tVyvMVTT7y2bBUs/JxRFURRF+VOdTO+y06evWJCths2CZozP7mNODsqC1n3n
Oj1yZad/j3i7dX29+qzbs/cv+fxls9MoPeKBX4MS126e2629HqfgOZvo8XH6
fj4URVEURYVT1riPWRtyLpMfpjtraw32dNbPvxsqC3b/fq4z3NqRue79zH3n
ezyuGePKrh2Zz1xf0smvv7DXl5j1F3usj9tvzPJcZ21ty2TmMcznaP5euPZ2
0NegzLV3c13f57aztq7YfJz5go/T7/Mp9ZxQFEVRFOVPddbvQ3LOygh2frD3
IJm23neULLjJyiBmbWq/cUhzX5ODCtcwd2/bat3fZJfsnjJz1udr/j6R+Zj2
/imX7Y9bcI1brednqsdj9N2DZdDXYIhrzz63JocW9XxNZtTb54b8fPo+JxRF
URRFUWWrs9YjnmrgY5XqRbtYPl87RVEURVGUqe74kulhmjHHc02MMfmcp3y+
doqiKIqiKFOd9edeXO72ORtZj+pznvL52imKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKcquK9u7zvVh7QVEURVEUVVzZdbyuZ8HuPseF57n1
eZ9SWZD9kymKoiiKiqm6e7wkmduizILdPW4YO6QoiqIoKpoqyn2uZ8ERP88y
WZA+MkVRFEVR0ZS15/NqdW83Z9Zu7Z5Xe7l720Tm/Sc768//nS74GFPmsazb
9nRvs8/S1eOcK/PY2azayZ+XO9c908S+j7nd7HW9OgbY/TyTTJEJKYqiKIoK
ulZst/KWMtv27u0mC57r3r4nm486a+cIH+hmqWnzOJmPMdG9fY912zn7vtn7
DHrsgixo8qo5227Ozrbd+5iMN9+9j/kc93Q//lTm7ZNtf30oiqIoiqLqrmyu
sm/rWGtKuhnpcubvC5n3Wze2V3RfawxO+W2+e9v2jjV2OOix7Wu23nd75v4L
BVkw+5gLmc+J8UCKoiiKoqKqflmw322dtX5srgo+hhnXm+iOwy1Y43Cmv3uu
7GNnsmDh3MaC683lvDL3oSiKoiiKCrnGzILz3XG+dVXwMUzPV2N457p5cFPm
tgNlH5ssSFEURVEUVU2NkQXnu5mt1H583bxn5iZOWo9hbtta9rEzWdCML5bp
EZMFKYqiKIqirOqs9W+nO5m1I5n7ZXOTPe9vqlvTReOC9vt31veCzce+nLlv
38cuuBazLtisHTH50r5PmSx4rrO2Xoa1IxRFURRFBV+da/P1THYy6zvKjhVu
tXNXN7v1yoIm39l7w5g+cW4srt9jF2Q4fQ5z3Tyo2tP9u32fMllwayezxpmi
KIqiKIryr7rZcaHt66AoiqIoiqLqre74nukP2z3i7W1fG0VRFEVRFFVvddbO
EjH95PlevWqKoiiKoiiKoiiKoiiKoiiKoiiKoorr/wNqKPQZ
    "], {{0, 450}, {643, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{231.94736842104743`, Automatic},
  ImageSizeRaw->{643, 450},
  PlotRange->{{0, 643}, {0, 450}}]], "Input",ExpressionUUID->"0e2f42d2-9af1-\
4c39-af5d-cd8bc3f1b6f5"],

Cell["\<\
Gradient descent updates the weight and bias values by subtracting the \
product of a learning rate value and the partial derivative the previous \
value from the previous value. \
\>", "Text",
 CellChangeTimes->{{3.7448873679316573`*^9, 3.7448873722429857`*^9}, {
  3.7448874096907625`*^9, 3.744887498218516*^9}, {3.7448875461946507`*^9, 
  3.7448875650184116`*^9}},ExpressionUUID->"b30fff1d-0d44-4418-9a8c-\
7c5f9fc54323"],

Cell[TextData[{
 "This process (of forward propagation and backpropagation algorithms) \
repeats through many ",
 StyleBox["epochs",
  FontSlant->"Italic"],
 " until (hopefully) the values of the unknowns converge to a minimum for the \
cost function."
}], "Text",
 CellChangeTimes->{{3.744887283043377*^9, 
  3.7448873494266243`*^9}},ExpressionUUID->"596f26f6-694e-4763-b6a8-\
f1e4b154e485"],

Cell[TextData[{
 "A densely-connected deep neural network differs from a linear regression \
problem by the addition of activation functions for every node in a layer.  \
This introduces non-linear decision boundaries.  Every node in a layer is \
also connected to every other node in a prior layer.  The diagram below shows \
shows an input layer representing ",
 Cell[BoxData[
  FormBox["10", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a8313fc1-f5cf-4b62-94fb-e14b1564955e"],
 " feature variables.  The first hidden layer similarly has ",
 Cell[BoxData[
  FormBox["10", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4fc563f8-be71-46e6-b93d-9b25bac6488f"],
 " nodes and a bias node.  This is repeated for a second hidden layer.  The \
output layer has two nodes.  The total number of unknowns (parameters) in the \
cost function is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "\[Times]", "10"}], "+", "10"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "\[Times]", "10"}], "+", "10"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "\[Times]", "2"}], "+", "2"}], ")"}]}], "=", "242"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "39862f11-5956-47cb-90a5-db97c5cb58cd"],
 ".  This represents a cost function in ",
 Cell[BoxData[
  FormBox["242", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ffba9c9f-ced4-4adc-b38a-f88572f86ddf"],
 " dimensions."
}], "Text",
 CellChangeTimes->{{3.744887607217387*^9, 
  3.744887964682928*^9}},ExpressionUUID->"960ee351-14cf-4100-a534-\
5facaa2bce22"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3c2rPNeZ4PmHmYGZ5f0PHPMPiFz2ogwxyzFaJN0MbfAmulFVM1p4blcb
BkFhAq8E3iSFQVpUFbGx0UIwFxcGoUV1GLRQV5vuBBduVSO3E43G/avy29Wr
ZcmuO3FuPufGyZMn3jLjNfN74aNfZkZkvJx4eewn8jnnf/3X/9c//5P/QUT+
3f9S/Oef/6v/+3/70z/9Vy/9i5vizf/x9X/3f/6br//xC//717/xx//mj//0
n/3r/7H48J/9TyLp/yxS/CMPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABnKf5uCnEhLWSFXD04tvrZnc63LkRTbzsAoF/EBAAAAAAAAAAA
lsfk6Qu3msN/OMOusCmspt4nAMBpnJjgP+clJgAAAAAAAAAAMGNa03V3Zn6/
Lu+fTL2PAIB2iAkAAAAAAAAAACyT5vjPresi5w8AF4CYAAAAAAAAAADAMsl+
HMdspBy/z/QtTR+gADATxAQAAAAAAAAAAJZL67vuJ8rzu9Kp2wIArh0xAQAA
AAAAAACA5TL59Rnk+F154WbqdgGAa0RMAAAAAAAAAABguWS6vj2bbMn3A8C4
Zh4ToqnbBwAAAAAAAACAOZtxnt8yfY8y/iMAjICYAAAAAAAAAADAci0gz+/W
fFEHDAADWlBM2BETAAAAAAAAAAA4VPxtZpDD5xkwAMyAzG+8X2ICAAAAAAAA
AAAtFX/rGeTuT5FN3XYAcGmICQAAAAAAAAAALJepl5L9+IlT5+1PtZ66DQHg
UhATAAAAAAAAAABYtuLvbgb5+nOY5xT0+QkAPSAmAAAAAAAAAACwXMVfPINc
fR82U7clACzdBcWEbOq2BAAAAAAAAABgCsXfbgZ5+r5EU7cnACxZ8bedwb2c
mAAAAAAAAAAAwAmKv2QG+fk+ZVO3KQAsVfG3nsF9nJgAAAAAAAAAAMCJir98
Bvn5vjHmIwCc4EJjQjR1uwIAAAAAAAAAMAaTE59BXn4It1O3LQAsDTEBAAAA
AAAAAIBlK/42M8jLD2E7ddsCwNJccEzYTd22AAAAAAAAAACMweTEZ5CXH0o0
dfsCwJIQEwAAAAAAAAAAWC653H4+Lfr7BICWiAkAAAAAAAAAACxb8ZfMIB8/
pLup2xgAloKYAAAAAAAAAADAssnljvNo7aZuYwBYiuIvncF9m5gAAAAAAAAA
AMCJir98Bvn4QU3dxgCwFMQEAAAAAAAAAACWrfjbTp2LH8Fq6nYGgCUgJgAA
AAAAAAAAsGwzyMOPIZ66nQFgCWZwvyYmAAAAAAAAAABwhhnk4cn1A8BMzOB+
TUwAAAAAAAAAAOAMM8jDk+sHgJmYwf2amAAAAAAAAAAAwBlmkIcn1w8AMzGD
+zUxAQAAAAAAAACAM8wgD0+uHwBmYgb3a2ICAAAAAAAAAABnKP7uZ5CLH9oz
8v0A0IyYAAAAAAAAAADAshV/+Qxy8UN7SZ9pbAo3U7c5AMzVlcSEbxETAAAA
AAAAAACXqvi7m0EuflC6n5E+19gJdV8AEERMAAAAAAAAAABg2Yq/dOpc/AhW
zv4msq/7Ms84qPsCAMcVxoQ1MQEAAAAAAAAAcEmKv3gGufgh/cfC1tvnG831
m5z/eupjAABzQUwgJgAAAAAAAAAAlm8G+fgh/aXJ9RduA/vt1n1FUx8HAJiD
Gdy3p4wJO9n3Cx1NfRwAAAAAAAAAADiVXPZ4jybPH+tz3iiw76bua6PTj54H
AMC1ufCY8GNiAgAAAAAAAADg0sl+TNypc/JD+EPhw8JK8/l5TRuY5wE7oe4L
wJUjJhATAAAAAAAAAADLJvt6p/sZ5Ob79mnhh4VM99Hk8ivHdtR5Um2LdOrj
AgBTuOCY8HEgJiQN7ZDqd9OpjwsAAAAAAAAAAF3IvhZq6tz8EN7U5xgmj2/H
+71paAtTG7ZVq6mPDQCM7UpiQkxMAAAAAAAAAABcquIvmkFevm9f6L8mZ5/o
fppxLe9atkmq30+bng8AwCW58JiQExMAAAAAAAAAANdALqfe65mT6///Cn8u
Os6jlP2axi3bJNJnBbu23wGAS3DhMWGr+2hjQuXYAF6bEBMAAAAAAAAAAIsh
lzPm49ec1z8rvKL7Fel+Jpq7b12/Vfzd6jI2Xb4HAEt1RTFhTUwAAAAAAAAA
AFwqfTY6da7+HHe6H+Y/nxd+rXn9zOTpnf3M3fct2yaSsu6rVa0YACyZPhud
+r7eV0z4PTEBAAAAAAAAAHCNZD8e4tQ5+1OYWqwb3YcvnM8/LHzFTHf2MZIO
/UB77bPW794JdV8ALtyFxITfERMAAAAAAAAAANdK9n1+7maQu+8qdvbBjPf4
T4V/LPwH2ffVuS0kzjyPn53RRnfSYdxIAFgiYkLrNiImAAAAAAAAAABmq/hb
ybLGfUy87f+55vpNzv9Nzcub3P6dN5/J/6dntJMdNzIXHUsSAC7NBcSEn2pM
+LUTExJz7/bmOzcmxMQEAAAAAAAAAMBcLSjffzRmo+zHdrTT39Z/b/TfyNtH
82J1RjuZ5W60rW6nPm4AMIQFxYQssO3EBAAAAAAAAAAAHhaR788qttvk+k2t
1yc6n6npWuvnqTdvKl4N2IltFQt1XwAu2AXEhN9OFBNOfp4MAAAAAAAAAEDf
ZpzvT2q2ea3zfFT4ZeF12ddjPebjA/ObHP3ZdVqyr/tKdd3p1McOAPq20JgQ
6zxmu98bKybosogJAAAAAAAAAIDZKf4i2ddLTZ3ft/n7uGF7ba7/97rd3zH/
6jST118H5jfLjXpqr5Wu16DuC8BF0d+6zCkmrBu2NxQTdjqNmAAAAAAAAAAA
uFpOHdNUcvPcocV2RrLv69O8ebdwZ3P5ug9Z4DumFuxugPa6138btxsAlmQm
MSFqsZ2R853/6sWE29C9X2NCPkB73euyiQkAAAAAAAAAgFnQOqZ85Bz/Thrq
uwLbaf7zWeFT/b7J9yfOc4Abb/4baVFHdkJ7RdpeZhviqY8fAPRpwpiQdNxO
859PvJhw2xATOseeFttBTAAAAAAAAAAAzJLs+8ccOudv8uOpn5dvuX2fF37n
LOsbojVeNu8f+M5anwH3Xpelzxmo+wJwkUaKCSf3p6Ax4QtdzofEBAAAAAAA
AAAAwjTnn2keu68c/2Ot7pnbtXOeIZsxF//EbKNOMzn9XcX3zLqzgdoqkrLf
0V5rygBgDhYUE8zz3wed1hQTeh0bwFk2MQEAAAAAAAAAMGuaQ99obr1rna95
XpD0VQdV/P1d4Q+F/y77mrSNOP1tSkXfm1L2A300red2ute8P3VfAC7SAmLC
1j53JSYAAAAAAAAAANBM9uNCxprbTh23+nk84Lpfl33/z78ovOHk+zc63bzO
Kr57q88CBsvD6zMFW/eVTH2sAGBoE8eETGOC6fv5LX3268aEtCYmJCPFhIyY
AAAAAAAAAABAmOb1bS3Zj/Vf88xhq9MjqRnX0T4vHmE7Y32uYNYXTd1uAHCJ
ir+XAzHh8f6r0yP9jJgAAAAAAAAAAMAMab3Wg5RjUG41r/5gc+qaX08qvm+f
D69G2NYbfV5t1nc7ddsBwKXR3/+EYsI9MQEAAAAAAAAAgPnTvP7nhd8U/lH2
fUCbPkbvbH5fnxFva5aR1k0faJtt3dfgzxgA4Fro/fWzwkeFn2lMSBcQE7aK
mAAAAAAAAAAAuGqyH2fSjv/7TuEvNM//+AzYma+2nkvz7unI255qfdqo6wWA
S+XEhGdeTEiICQAAAAAAAAAALIOUYz2afP13tbb2sQ9PZ55MasZ01GcGT/2D
jrjtK+q+AKA/gZhwH4gJpt/lrGYZK3HGERhx292YEE/dlgAAAAAAAAAATMHJ
9f8X7VPZ5vp3Nn9un+82LMc8D8gn2odUt9tsw83UbQoAS+XEhB+fGRPSCWPC
LTEBAAAAAAAAAHCttI/PTzTff6/5/kTz5htnPlNPldQs50afD9xOtB+RbvvT
MwoAQDcaEz5wngMTEwAAAAAAAIAZ0LqMWFH3AKCS5vA/0jz/BzbHX1ibac58
SVMtl95z7qe871D3FWwTYgKAVryY8GFPMSGacH9sTMi4/z21CTEBAAAAAABg
xjRvkzr1DQ81bF3fRnN20dTbD2B6xd/3C5/pPWSrufKtTnsav1FruRrz+Jpj
v5t4n8y23un2rqdu4xH3u0tMsHV9xAQAT4q/vyr83okJf3ZmTNgQEybb71Ni
QkZMAAAAAAAAGJ/s6y9sDqspj9PEPuuJpt4vANPQ3LB58W7hh4WXzXudZu41
iTOvyQtvGpZnnwlMnmPX++W97sdF1jjpPmbEBAB9ICYs2wAxISUmAAAAAAAA
DENzZyb/sushl1PF5MLiqfcVwLj0ed8XhfcLb+q9wOR8Y51258xrPtu1WKbN
sU+eX9f7p82FTzIO5UD7REwA0DvZ136amPDzFjHB9CN832KZxITh9+mWmAAA
AAAAALAcUo5bNlQ+x5cLv/MHrobm9M0Yj7/RHP9Oc+Pm+WLk5/Z1emMdl+aK
a+vCJtjP3dLvccQEAEPSe6UZC/63hR8RE+ZN9s/riQkAAAAAAAALIfuaiu2I
+RxfOnUbABie5sBt7nin/5p88p1ON5/FzvwH9V81y410ufEQ233ivpoaqY0s
sO6LmABgDMSEZSAmAAAAAAAALI/m0qbK57hMXimauj0ADEuv93vnun9BtMZL
c+MbZ94bnS9qsVzbH+XkfX562xXrfhqrqbenZTtOHQ+ICcCVCMSEr154TLDP
UokJxAQAAAAAAIDeSTkm2dT5HNesajUA9E+v9WeFdwtvSdnHcCT7cRu33vzm
PpW2XHbedt4J9jvVfZ/r9hETAIzOiwlvEBPmg5gAAAAAAACwLJrnn7IftybJ
1G0EYBia4/+F7OuyXpN9fVdur3u9B0TO/Cb/v2u57Ei/P8uaKjms+4qn3h5n
u4gJACbhxYQ7jQl3NTEhvrCYkIvXz/XUiAkAAAAAAADLs4CcDrkd4ILp/efX
mvPO9N9UtI9PN+/vfKd1blyXte1zmwdoA1vfZp5zTNo3KTEBwJT0/vNx4e2O
MWHdcvnEhG7bQkwAAAAAAABYoIXkdKxWuT0Ay6G5fPPincIP9HVs8/OaB8+8
76T+Zw3rMPe526n3tWEbI5lB3RcxAcCUpOxjuC4m3HnfOSUmpFPva8M2ziUm
5DO41xMTAAAAAAAAOpD5jePVxNRCzLLPPgCnkXLMw/+mOXlznT9nPtPpJgd+
730n0u+0qouS/bODx/Ejp97fFtua6LZmbfevx3UTEwBMqiImrHqOCasFxoQ7
YgIxAQAAAAAAoInmk6bO05xiO3b+C8BwNNf/vnON57If4/dpTFzZ1z+tvO+Z
XHjrml7RcYWn3t+W23qj+2dy2aPUMxETAMyBxoRnLWJC7H2PmNDvOpcaE3bE
BAAAAAAAcK1EaydmkKM51WbqNgTQD9nX5v6m8EnhQ83Jp7KvO0p1no14fXVq
brr1GI6aPzd54WTqfe6wzWsp676iAddDTAAwC4GY8KrGhKc4oK833vfM/XLX
YT02Jsx6bIDAPhITiAkAAAAAAABBsqyxvKrEU7cjgPPJPtf/vubhTX3Xy5rb
TkTHeNSc99GzXunY16OU/UAvpjZI9s8oNrrdgzynICYAmAu9T++8mJBrTMh1
HmICMYGYAAAAAAAA4NCc2dQ5mT60rvsDMF+ayzYv3im8Kftar504Yzw689x4
3zU58Kzj+syz5bup9/uEdoq1XXLpse6LmABgTpz7/U8KPwzFBJ3vwb8XnhgT
MmLC0XKnvp8TEwAAAAAAADrSXNHUOZm+JFO3J4Dz6fVs89gbfW+eAdzbvLZO
S7zvRdKxdstZ7ihjKPbcTm7dV9rTMokJAGbFiwmZFxNWOs8dMYGYQEwAAAAA
AAB4zOkkM8jF9Gk3dZsCOF/x96zws8Jbss/3mz4/Y3Hy+8XfrQTquiTwXLjF
+taa415Mn5/e9q+0jYzWfZ0GlkNMADA7gZiQV8SEo7pdYgIxgZgAAAAAAACu
jVzGeF6+eOp2BXAe2ef4zYu3ZV/HlMk+t58WNjqPyW/fB75r8tWd+3nU++Fm
6n0/s91Sbbf0xO8TEwDMTkNMyHSeiJhwtA/EhGOLq+sGAAAAAADoQvNkU+dg
hpBN3bYAzhPIOb8s+3x/LE4eX/b1WSvvuwf9RHdYZ6Tfi6fe/zPbbqXtt+uy
L8QEAHMl+zpf97p+qW1M0M/vQ583rPNSYkJETDiwuLGdAQAAAAAAupByTM1L
tMj++gDsyb5m6Zlez6b/SlPnleu0B2e+TAJ1Tfp557otXU/nOrE50n2513t9
4z2RmABgrryY8JZ7r3avcb2PpYHvnxMTdlPvf09t2DUm3M7g3k1MAAAAAAAA
6Ej2z1Smzr8Mhb7dgAWTfa5/V3hX9rn+F821rdMexwLW12aMxqPntVLRN3TL
dZvlp1O3QU/tGEnLui9iAoC50pjwvhMTXhoxJuQXGhNq74vEBAAAAAAAgOWR
y+3TzVr0eG3AtZN9Dt/Ueplc/2tSPg82Ofyn+i7Z9/VsXhzV8sg+d52csO6V
LrNTX6FzJvvxL03d111FW9l2vFTEBGDBNCa8r3GAmNBPe15zTMimPgYAAAAA
AABD0LzP1LmXIV1E/63AtZL9mI472dcpvab/5nrvSkT7gtZ5zedJYBmm78qT
xvmT/bOF/JTvzpXs8/km129y/mtvGjEBwGzVxISkQ0w4mK/j+tNLu48QE6Y/
BgAAAAAAAH3TPNbUuZdBTd3GAE4n+z4KPi28U3hDtE9mZabdO/Oa57xZYBm2
fik6cRt2ZtlTt8UAbbvWfbuzbUNMADBnTkz4ceH7eg8bOyZsLzwm5MQEAAAA
AACAZZN93n/y3MvALqafPuAa6XW81Zy0eW1y1LlOu7fXuNSM61j8ZXLiuI2y
rzcz64mmbosB2tY8B9no/t0SEwDMHTFh0LYlJgAAAAAAAFwAJ3d2yeKp2xnA
6fQ6/lj2dUnGvxTN6WtuOnHm3YVyuaJ9hp6xDSYfnk/dFgO2caxt95sZ3LOJ
CQAqFX8faky41/vWV4gJvbcxMQEAAAAAAGDBNLczdd5laOup2xnA6eTwdyrm
tR2P0NQppeL07yk1NV16vzvpfqDrOvn7S6D7+GwG9+yhJVO3NYDTERNGa2e7
j1Pfs4kJAAAAAAAAHc0g5zKGdOp2BnA62ef3Ta3X+4Xvyj6/bz6L1daZd+2+
95bz2JflGdthlm3qzW6mbpMB23rq+zUxAUAtvf//Y+HnhVeJCYO29dT3a2IC
AAAAAADACWaQcwEAAACAKaRT//8xAAAAAACAvs0g5zKGd2Rf4xFN3d4AupN9
bZe5jt+SfV+euV7TmU7fijN+n05PKpZlxoa8PWNbTH+Y93Jh4wXKvo5tM4P7
NTEBQC0nJvzQiwl3Oj0nJpzdxtcUE9Kp2xsAAAAAAKBvch3jev2Hwg80P7fT
fNbFjtcGXJriL5F9rj8vvKzXdSzap6de06kz/9Oz4cCyTE5718P2mHvJYvv8
LP4ibac7bU/zDP31wqczuGcP7T8RE4Dlcu7BJia8QkzopU1DMcGMt/DRDO7Z
Q0umbn8AAAAAAIC+ae5s6rzL0H4m+7xcIvv84EbzWmbaY92HUAcGzJZet+8W
/sa5Z0XmX51uru3cmX9VuK9ZnrkfxGduk9mOzdRt03GbbT2X2f97vf+Ztvsj
2dfQfVD4ZAb3bGICgEqBmHDvxYQ1MaHVNlfFhOecmHANz3/POvYAAAAAAABz
JOXv/C+ZeZ7xF1LWisS675Hs81ymDagDA2ZK9rn7Z7J/Rre117Fesyu9lu+9
7zxOq1ieuc6zM7cp0vtGcB1zIOF6ro1zDzT9lqa6H98r/KTw2Qzu2WPEhD8n
JgDL1BAT4hNiQtpjTIinbp+GbayMCU5bXFtMmO0xAwAAAAAAOJXmeabOu4yR
6/9Ac1k2r5WJV98l1IEBs6XX5E7/zaTMYSc6/eBZrJ2nYlmRzn9WX516P9lO
3TbeNlXVc0XefImUzz9f0HnNve93M7hnjxUTMmICsEwtYsIuEBPSimVFupxz
Y8LtgmPC2osJu2uJCVMfIwAAAAAAgCFovmfy3MvA/kH2NQw/ln3ey/ZrZ/Jg
qQTyfUIdGDAr3jW9Ueb63ej0p7y/vj/o/zOwvFx6GPNP9vnxdMJ2Mfeq2nou
b/5Y932n97i1lLVeHxe+mME9e+yY8CViArAszvV83yEmVD6bveKYsPJiQnyF
MSGa+nwGAAAAAADom5Q1D5fqnwq/LrxTeEv2OS6TCzP9nsZS5rxqc/hCHRgw
Kefae0uvPXPtPj3jFa//Tr3GzYtgPZfs89xn12nJPnc+av5YWtZzed8x7ZGJ
84xTv2Pev6z78PEM7tljxYStHMeEg+cgDceAmABMSMqx4N+WMiaY6zLX6eaz
zJl/7Jgw2tgAMlxM+IcZ3LOH9rlpr6nPZwAAAAAAgCE4+etLZHL9tu+6v5d9
risTp69YOewHtTFfJ9SBAaOT8jmdeWb3Tb3uzLV4r9Nj8XL3+p3K61J6Gr9X
9rnzfMB9N/vZup6rYvsO+jh27oP/Uv/9T4VfyeX39dk1JjS2sRATgNHJYUz4
tl575lp0Y8Iu8J2kZpnXHBM2chwTnsnlxwQT9z5u23YAAAAAAABLojmfqfMv
Q/m97Puue0/2fX2af1PZ581MfmutbXAjh/mw1mPACXVgwOD0uny38Jpeqw/6
+YOU+esH99oVryY4sMxN3fQO22buHzupGG/4xGV2rueqWIb5fm5z27qtd3q/
ek4O+/n8TO+RP5nBvXvomPDfpFtM6NLusRATgEE590c/JtxLdUw4qAmuWGbl
9I7bZ7ZtKTEhk8OY8JdSxgRzr/zpDO7dQ3lR9n0E7aY+pwEAAAAAAPomZV91
l8bkxn4m+77d7jW/8119nUjZz13itEUkTn94J7RlJNSBAb0TrafSa8s+v4zl
MI/99Frfr+pyujr9vqfti8V57nDC98294+R6rsB+5eL1Yyz7PP9Wp31JX7+u
2236+fxU9vVe/3YG9++hYsLfyRkxQTr8Nsj5fiLEBKBXUh8T7O84cvdak4Z7
vl6v912v84plxbL8mPBb2ceEP5nB/XuomHCj+2t+X5ZOfV4DAAAAAAD0TS6z
D2hT55DIvu86U8PwUeGDwgs6PRbNBRY2XnuYabm0GBu4oV3NcqgDA86k143N
Tecq0esr1XmeXjvfq+3PU5eZ9LSNZv2txxGUHuq5vOXZOq6jZ5V6rzPryfR9
rusz/5rxM59pW+ycdpn6Hj5UTDD1v00xIfPaNpaWYwM3HKNYiAnA2eQ4Jtj7
Z1NMMNcwMaE+JvxQjmNCPoN7eO8xQfct1X3t5dk/AAAAAADAnGh+aeo8TJ92
ul8m92XqF0yOfydlDdaL+q/Jf0Wa98n8vI90HBu4oY0joQ4MOInsn5uZ2s23
pcxlp/aa0nlM7jz3vmeu68o+OPX7eU/baOuIgte09FjPFVh2KhV9FUtZh3br
tIlZ98uy7wP5Q9n39fmGlM9Nkonu3WPEBFPnbGPCa1IdEx5rwwLni/lefu5x
E2ICcDK9r5nr9C29xlMhJrjLTqV7THhJriwmeMfp+9JT/98AAAAAAABzornn
qfMxfUmc/TJjW36uuSzzwZtS1lzda97HyGWf//Lz/WZaKieMDdzQ3rFQBwa0
otfLu1LWICV6zZjPtzpPJF7fntKQy3fyvlFP27kWp4ZIeq7nqljfTiqeR4rX
p7Hey8z8X9Z2/L4cPkOJnO/uJrp/ExOICUAtKWOCvV4SKWPCTueJzDTve0fP
hL3pxIR93/hXExOcdviets1RuwEAAAAAACyZXM5v+3fefpl6LtPXp+nL7m3N
ad3r/mbi5Pf1vclvHdX6ypljAze0fSTUgQG1nGvcXLOPfX/az515Dq5f2efy
H6TmGZ1e15uettFcy6Z+6qfOtvZSz+Wtx9zXcqnpj1jXe2/bQ8q8/5el7PPA
1MGaWq/viNdPqRAT7Lnx1IaBY22npz0f30iICUAt5xpfQkx4z9nWucWElW7X
q1LGBNM/RO59fz2D+3nvMcE5Tg/aRtupz20AAAAAAIC+yWWM7xUH9ut9nfah
5rZsnZfJ99y5OS5n2tFydHosPYwN3HAcYqEODDjgXOPm+nvMQ+vnW3u96rWS
eN/b1l2romO+nrFdfj2XqSc1fQx/dYA2MM8uMgmM5xiYZ2vvGXpPedB93Ug5
hrK19dtNv5fP4J4+REz4iXSPCVV9uMZCTABG51zjudTHhFvve3ndtSr9x4Qf
yHxign32uxJigr9vmZS/Az3adwAAAAAAgCWzOa8Z5GZOFazXkH2e/L9LOQaw
+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
z4kH2HaTB/sbKWuuUv3szpmeO/Mf1VF4y8vkhL5UZYbjQLbY3kTKOrCtUBuM
ETjnnsmTmzEb/0Ff/5mTv95K2c9lLIF8vV5vjTluafFMoMO2r6Ts59eOv9u6
dlKvseD2SKAeVZznlc696zkp67wivb8O0Z9pKpcVE3Jneu4dU2ICtcGYiBzG
hC/037qYEKz1lfYxYdfXvUeICbOPCc4+JM75lITOIQAAAAAAgEvm5H/7yOXY
/HE04Pba/NdOc4Xm9ZecXJjNn91633moyjM5Oa7g9IbtiWWm40C22G5qgzGI
ivPrncJfSznOYCxl/4yZd80e5bPdXG7Dus16szO3/0YC4zmK1pL521bzfbP/
weeIet+4875jlp0401M5rPO6db8z0LFLZFkxIdLj9J7Ux4TU+U5TTLiV644J
D0JMQI+kOia8KWVMeHrOK8uKCff+ttV8vy4m3Mnhb1VsTLDjDOdCTOi67U/3
cT8OAAAAAAAAXAvNM61tXkna/eZ/a3N0VfmsgbbVrPd7up02H3br5A1tbn/l
fCeRmrpAqemPr+U2JTLjcSAbtj0SaoNxhjbnkF6nb+g940HvOQ/OtMyZ11xH
a28dT/O32JbGfHzN91OpGc9Rt21T8337vHFbtQ1SPge4cT4zbWf7MbD3k6fn
mPr5zm+XAY/p0mLCX8hhTHhsQ51+akyorBNusU32GOZjtkVP7dl4PQN1AufQ
Trz6ciljgn22GEkZE8w9JHPmzf17n96jjp4LV2zLkDHBbD8xYUYxwTt2ub6O
xRkPAAAAAAAA4NpJOYbikxlsk8mDvaV5nK/avJ44db+a89l637uVmto9KWuL
K/N4Ddvl9peXnZprnJpQG4wWup4nem1kUj6ji/V6XOnr3JnXLDcNLGPbJtet
y0867o+t7c3r7nNSPks4mkf3xSwjq/n+0X1InBoyKWu+nvLsTnvvZnDc5x4T
XvBiQuqcf/7zFVvnS0yo3w9iAhpJuIb89oSYYO8tuTdvGljGpcSEg/sQMaG3
bbsR53c+er5VHgsAAAAAAABMy8nn/JWTO0yl/G2/7Zcv9/P2Eqix8KavpKxX
OLVWJJIFjQPZYl8SoQ7s6p17Lmju+keax7bPj3L9/KC2Vz/LA8tI/Wu6Yl1m
2duW27WSsr/epOV3bv28u3P/SRu266DmVLxnB1LWVt14n2dLv58MeG4OGRMi
YsLRvhATEDoXdtJhDOkeY0LWYl2jxAQ5fIZ7bkxYO/tITDj9PH06R/w2BAAA
AAAAwPxo3svk+s2b56Wsk7hz8jxRKM8jTp96Fcu2dWOVzwRabmPs5BAXMw5k
wz6tNb+7E+rALp50rOdqsaxcl5O6dLpboxNJoK9nccaHbFiXzfFWbqdUjOfY
YX9yZ9sTaeg/XgJ9EDvL2bj7rfM+5vydbX3gOqs9HlUxIWsZE/KGcyUnJlTu
E7XBV2LkmLBzYsLB82BnGa1igs578Jw1MN3eL+z2jBUT4sBy2sSE2hiHg+P6
FD/1fG31WwAAAAAAAACMT8p+Au+krI1Infy+zRkmclyTYZ/vZg3ryNz84xnb
archP3dZc6JtfSvl2H3UgS2cnFnP1bDslZTjBX5LyucGmU7P5XBsyOC11zbn
rddvsFZYGsZz7LA/5sV3pfm5gt33xPv8VpxnitomGzmu80qk5vkkDtq4Kia4
bflUE6yfERP6OQb+/YOYsHADxwR7bRrfkPK3A3bM29y9Z+q6j86lpvuvM1+b
mHB3RkyIeooJO2JC7+dx5t7ftY1vp94uAAAAAAAAhGn+5s+kHC/O1nulbl5M
AvW+Ti6tNv/j5ATjM7f1RmT540A27CO1wQskPdZztVjXg+b0b6Uc7zHXaeb6
SJ15s9D1abevxboe8+veZ2tpMZ5jy32xzww/bcjz3+g608D2PdUDN9zDzHqS
qc+VuXNiwv2JMeHoOAXWcUtMaL2P7r2FmLAQC4wJwc8D89XFhC0x4XJJ+Ww+
8tt26m0DAAAAAADAMSlrT7dSjhuXOrm1ROezz3rX3veD9ReB9STS0I9fh22O
5ELGgWyxn9QGz5AMWM/VYt3mP28V/sTJaz/otLWX336qDfaW8bjtLddn7w0r
6TieY8NybZ7f+LFUPHuQmrpS/Tx13u90n/06r6NnFqg8LsGY4LRv4hwXYsK4
x4aYMFMTxwSzvrdlX//70CImHN37pUMtbCAmNF7vLZc7REzYEhN6Pdcyr30f
a6un3i4AAAAAAAAcs3lCzRs+1m5I+UzJ1nTYPvTWEug3Vr/zVG9Rsy77XKCX
XJFc4DiQDftLbfC07R/LSPVcDduR2xysk+N/0OcP5hrbOfMevHc+jyQwDmTF
+l4sPJMTx/itWOZKz+PMaduje4tOM+2cBz5/PBbO+1v7Xo7rvDJy1K2PTZeY
EDxuUjEmZ8V5QEw4fX+JCdO2/5xjwr0TE+6deatiwtMz4xbrszHhYcExYSMN
fdUjeJwicWp+nfcX0wc/AAAAAADAJXFylvdO/jzVaU+v9f2mIu+WtMkBaY5v
Kz321SkXOg5kwz5HQh3YGG2cyAT1XA3bZXP99rmDvWZjnf7gXlv+e+fzbdO+
aM78A13GH/W0/Tavn3qfH91bdD+3/vb7zwbEqe0Sr85Lp5Of7naMMnH67Scm
zB8xYbQ2nmtMeK1jTIgCy+kSEz4nJlynQAxIQzEAAAAAAAAA05OypivV3JrN
o91IWccV6bw3Om9o/LhUnNqwmvW5ffz1le+/kQsfB7LFMaQO7Px2jGUG9VwN
27jRczxXa3HGbnTz/s77o5y+LidYdyneGL/i9fl4xrYnUtHnr3NvWet7+5sU
P89/dA/S7bvT1we5aF3n9txtvyZeTLjzYkIUiAnbipgQPIYVx56Y0P8xJCac
345LjgmpTm8bE9KamBCLM8av9NSnQsuYkOj7LjFhQ0wY7HyL5bAG+OA4AQAA
AAAAYF40d/O8lP3I5k7u8CmPpu/tM+Gj2gmpqM2oWGem6+2tBkO33dbmpFO3
60THMhLqwLq0VSIzq+dq2ObUuc42+v4pby/H4/OloWvB5vO9z1YSGM8xNO8J
272RhporKfuYf7FqXj1W/v3oXo9lqM4rJy990vG6pJiQEROICR3aaskxIZXj
mLAJxISjZ7cS6BvaufaHiAlpi5gQExPmR9vQfd5ufzN0Vb+zAQAAAAAAWAIn
f5jZvLCU9V6h/JmZP1g/oXmhuw7rPVh2T/sTay50N+e87UjHljqw43Nj1vVc
Ddtvjt0PpBx70V6vuU43+5J5xz+vWJabI8+kZjzHU68lZ9nbujy/M/+/l4qx
Y6V8Puz2ZWruN6m+TuWwzivy50fr49ZnTLirOgcr1jtUTMiJCcSEinNj6THB
Ptu3120fMWEzREzQ704ZEx6ICWefc+b82nmfPbU7AAAAAAAA5sPJiX3ZyfG7
ObTbQK7nsYYosCzbl2fWct2JVPT/18N+Jbo/eZs846WTK6wDkwXWczXsT6zn
84Pz+rHeyZm+deY31+NDxbJMm7wh5TOgqGa9j+dNx22194K29Z9mP8zYkp/6
56SUz3LXzmeJHs+qZ5KbtvchHB2LppiQVOT/lxATdsSEg+NMTLicmPC8vo7O
iAn/z0xjwjqwLD8mPNWhVsSElJjQ23m3k8OacBszKs8ZAAAAAAAATENzhonz
byxOXYV4YzxK+TwmDizL5t2OxoSsWLftr+/s8eQqtiXVvFTWJud4LeRC68Bk
4fVcLfZtp/v2gugzOJvPD+X2df44cOx/WXUNB9Z70yW3q9f0rm2uXcoxBFNx
nus603P3/uDMb8cLNt/Lm/Ybnc41e93k+u+5MWE3s5hwT0w4ahtiwsI499o8
FBP81/o+FBPiEWJCl9+BuDHh6bmuM52YMO15l8jxb4A2fpsDAAAAAABgeprL
2bo5HTms9zrI/etnt35Ozplm8/dJy/U/5QaHyMcLYwO3aZ9F1oHJhdVztdjf
B702Yymf+27tsRJvDFW9pm719UrK8Ry/IRV1YBXrvZMWz++ce0XacrlH9aFu
bj90n3Fz+xKu81r7uWl0Ps9sTHhqyxYxIVlYTMiICbXtQ0xYgJYxIXbmd2NC
NEJMsNd+2nK5xIQFkOMa4KN2BwAAAAAAwDxo3sbWkqz9/L7m+jLvO+azYB+A
NhcpLfvZdHJ+rfoGPHEfY2Fs4DbtNOs6MLngeq4W+/6g+5461+ydzcO6r/W9
aZcfSGCMX22/VtdBm/y5nNB3rwTGh5WylvQF/x4iZT+TK32fBr7f6rkEGo9N
U0zIOsaE1UxjQk5MaGwnYsJM6f6+ovfCXYeYsFloTLgPxISnz4gJo513SaCd
k6ZzAgAAAAAAAOPTXGCmucFcPzN58VRfH+TY9DP7e/9gvlDKMXhbj7Wo27Dr
8p0T9tVuV34N+eEz2yqSievA5MrquRrawtZEplLWfKXOdfr0Wt9/u/AHCYzn
qG3Yuo9dqek/U5d1yrUefLan59yn4tWM6X7YOrBQnVek5yn9+p5/rl1rTLj6
sYEb2oqYMCN6zjbFBLev5LFiQjpiTMj0dSgm3Ahj0w517h3V+7oxAgAAAAAA
APMgZR99Nn8WyXG9VyrHv/df2/krlptKRZ+gNdti84bxgPt7I+XYwJsu23fN
ZKQ6MLnieq6GdjG51T9zcv632v53zvGxzwB2TvsdtZudp8O6Uzmu97xxcvZd
8vy37r0lMH3j5/pb3o9upaL+FJ3PtUjb+0sdY4Kd5+icc74z95iQERNatxsx
Ydr292NCKk5t5tgxQT8fIiakxIR5OeX+DwAAAAAAgGlIOQZwJmU9RS5lHcmN
eGN+6ecbPwfkTbe5wC75/kQ69ht44j5HUtYQ0T9g97brpQ5MqOdq207mWvqO
vS6VybdudfofFb4QZ6xVnbeqHrN1nla82lo5sX9eaagBdfLHXxHnOYWeE7fO
ukO1RzvOmV7PNxsTNlcaE9Kpj8GSEBMmafNrjAm2r+ctMWHSc6+qzc05yTN3
AAAAAACAGdEcXO7m9OS4vmItXu2W8wyg8vmpLrdTPkjKmuTW/RGese+xlGMD
x1MfiyWSjnVgQj3XKW2cStnX8mNdl35u69gf1HP+dyqWd1d33Qbmz/WYrvQ4
Zx23f6XbF1dMP7iXSNmnqTkvtt4+5YHzaTf1MbokZ8aEp2czNefSUmICz49O
a0NiwvBtbO6FL2t7VcWEzwaMCfYYrfS4ZR23/5yYsPP2KQ+cT7su24OTzr/M
+yz4XBgAAAAAAADTcXI2keb0Uv08l8M+9w7e62c2h1dVv2GfB2Qdt+mknOIZ
bZAIYwP30Y6RHNeB/ZXmqannOr1dTZtmNl+u7Wo++6fCv9d2z928q/tMILA8
c763fgan8/+9nFAbKeWzu6Rmnjt/e4q/9wq/tftUlVvWdum0TWg8ZrOOCTJC
H83C2MB9tSMxYZh2rYoJf6iJCfGCYkJ2ZkwY/Lci18yNEd7nB7/ZAgAAAAAA
wPRsvkycugk5rveyef3I+25al+9x8kSd+lmWE/sUPKMNboSxgftqy1jb8Gfa
np9o3vZNGWCMyEtn8/b6nOTrznOUrZML38jhszlzPj9ULC+qmlYxf6Lr/GbH
7bY1XGnNPGv3PuN8/kbhcyn7gTbXZh5Y/tE9Cb2cc8QExgbusy2JCf23p40J
L1xJTHi9ZUw4ei6JQc5Bc0/MAp/X9gEBAAAAAACAcXk5fpObS/R17uUPTT7x
qEZE8z2V9RbSot6j5ruZLn+UGixhbOBT2yyRmnou6XGMyGuj1+dPCr8pfCxl
n7xP+X3btt73dlXtq+3fWG+nOXZzTL8byvXWfK+xzlPPiXt/O5z7xV/p+VJV
55X4+X/0ds6tnJiwnWFM2BET5ouYMHj7hmJC5MWEJBATtlXtO5OYYO/1oZjw
oDEhJyZMT8rxASLv81gCz+8BAAAAAAAwHc3PrjV/ttXPDvI4NTm3KPS5N08s
Nf2CNmybzTeO1g+nMDZwm/bZyIljNkrHMSKvlV5zrzjPR17S/Hes7Z05x2Pr
fTeTiudV2va1fWSK89sL5xpvldPV45k3zJOHtkE/T537zWuhZYnzXBKDnHtL
iAmVyx+gPYgJze1DTBi+ne1vf6aKCbuJY8KOmDAPUtHXth7rbOrtAwAAAAAA
wJ449YNuXl2O671u/Zyi8/muLhco5ZiKp+T7E813JiO3i93m/Jrz0NKinuvM
ZVMHdtwut85zkAfNf6fOc5HYzYGL13+nBGqCnWlHzwacabZOa+tez21z61I+
N667FwTvF7J/BvT0efH3NdmPc/y8N99j/ejUx+iSdYwJu7bH2JuHmLBQxIRJ
2vzcmJA0xIRdxbSqmJATE66XVPwGwPmcsdMBAAAAAABmQJyxNDWfmOnnsZ/f
kYrxvTQHGcwtOvOkTc8Ear670m1JJ2ibVK5sbGA5s57rjPVedR2YzcPL4ViO
5v23NY+eqsjNd4vXt6c4ffhWrOfeb1P9zlbC4/qZY5A3bLt9PlGX519JoO5T
ytout49Ys5+/8LdHKuqO0Ot5uKSYMOq5QEwgJkzQ7n5MMK9f1rZwY8KD871e
Y4J/novTN0DNMpOWMeHoeaETExLnMxsT/L6tN36cwCjn5uP5F/jcHKd86u0D
AAAAAADAnpvLFWdcLzmu9zrK/+vnNxIYuy2wnkwaakFqvlv5fGqE9onkgseB
lAHruc7cpquoA9N9zSUwLqp+fuv8m+nnD1LWRd0Fvvd0HQfWdzC/NPy+wrm+
q5Zn8/y1NT96DI/W4eeLnfU9L15fv23Wg17OSRsTnp4FO+dj6sw3i5hwyvfP
bB9iwjTbREw4jAmPx0g/92PCrfe9unv4wfzS8PsKYgKq7v06beeftwAAAAAA
AJiGaD97+jqz+bhQfkfzhKFxv9Z1+UBnvlwa6sJqvnsjgb4IR2ynWC5kHEiZ
qJ7rjO29uDowORzPMa3Io5r9/KY952xOXK+jWF+n/jWp04PPauTwmUEiLfrS
lerx/mxNb9zw/cdzLfB55Ofv3dy/OH2DSouaM/R2bvoxYaOvq2JCVrEMYsJC
EBOm1zEm3J8QE5KK9fYdEw6e0VZ8Pz0xJiTEhHnQcyrU/4O9919F/wgAAAAA
AABzJ+XzpZWbt5Hjeq+j3JwzbSPN/cTafH12xrZmuoxJaj5kgeNAygzruc7c
l0XXgcnheI6V55CU/Xs+2GtPP3+q1xJv7Efne1W1W/YaTquu5cB3Vnbd/mfS
/JwglorngOL9nkTKOq/Y+Sy395amdaHXc3RpMWFHTOi0zcSEGekhJmRnxgT7
zLnx2a1+p4+YELpnHPyehJgwX1I/dvRBnAAAAAAAAMB05HCcx6ecmoTrvdJQ
Tl/KMdtq+8N08nkn95spHZ5dDdReN04OdiMzrHOQhdVznbGfi6kDs/lS8cZn
rJk/1X27tzl65/NUXz997q0nr1nuR4V3u1w/4ozR61zracN3Ku8Jbe8tun8f
6jbP7jq7VMSEzusnJszEFccEW6dfFRMqa2WLv18V/rFjTNg69wX7O47aMbl7
jgkPc7zOrol7DgSO0cMcrzkAAAAAAIBr4+RqbJ96O2eayf2nznubvzuqE5Ky
/qNp3LdWdSINy0ikRT+FI7SbrZ+adBxIuaB6rjPbYHZ1YFIznmPD92L9Xi5l
X7Pm37WbExevvlav0YfA8myO/heFVzrug23X1vWasq9JC/btq8u49bYtWHtW
/L1d+NXU59c18WLCumVMSALLWelyiAnjb4uN5xkxgZgwo5iQV0zrEhNyYsL0
xPv/C960tOpYAwAAAAAAYFxyWOO1szk3CddkrHWe0Ph0JufTOCabLrfxuUDD
Muwzg3TitrN52Kd2G3G9F1/PdUb7TFoHJi3Gc2xxfG2uP3Fy/is5fh639r57
UE+m39lq/n3d5hoN7It58WabnK7UjAGo5+jW+6wyV6zH792pr/NrE4gJtv6b
mNBuX6aICSvb3sSEYPtcSkyw253rPp0bE54/Iya83vL6booJO+8zYsICSPVv
f+zz+6v5vQkAAAAAAMBcaS5xq69v5bCWJPfzbKHPnGnbNnk5KcdNPDff36r2
ZKQ2vJeBxoEUanzPbbvR6sCk5XiOLbb5XsoxHzdS9vv84Mz39Lnzmcnp2/Eg
j56JyQl9M2q+/Vkof+/NV5n3lUBNV+gzZ5p9rmj34aS2xEnnX98xobZvWGed
xIT2y7/6Gt8z2m6JMcE+c01dOu3Bme/pc+ezzJnX3k/d8dc7319nEBM6xzH0
S+8/ec203dTbCAAAAAAAgKf838rJvUX6eSzH9V6Vz2OkfG4Vt1hnKhV1Yx22
2/Y/uD1nOT214Y30OA6ktjM1vv0fJ78OLNNc5bnHK5YO4zm2WJ7N9W/sv/r5
Y/5bX5vtvvO+l0hZI2Y+SLzpd/5nDdthzrmPC++1mDeXimd9uh/+tqY1+ePH
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
+0ZajOc40Hpra4N1m57X8/DL+j6znznLSv1zWlo8Ty3+fl74WDr0W67b8vgc
umJ6sC5Xmuu8Nl2vdWnoe36A45XKdcaEG3Ge+YozJrC+t/dVPyaspT4mRNI9
Jpjzr/IZ1gn7Zrc9rZhOTLgychgTRq2/lnYx4atyWkx4vN4a1j9ETDDbvwt8
ngoxYZExoaZN7P208prR9kqm3lYAAAAAAHB9nHzO/QD5HF8+1/yO5p5u9bV9
bnvjTM/93GLd5870Tv3z6fHo+xnwSsq6rVHruTpuZyKMAzl0G9/KCWP8DrQt
odpgcz5+Xcr6oAc9Zw+e7UrFGIlS03+nLuOzwpsd22snZd2W379osJ6r6vPA
tnbO2UvHfoRPWD4x4YGYIMSEqyAnjvE70LZ0iQmRHMaExxrhwDKJCecfF2JC
ffs03fNj6VjXDQAAAAAAcC4n7zd0Psc3+bOnQFs81m05700+J3HeB/M3Uj4X
qNwfXVbWYVsi6bFPXt3Glwufavu/JSPXc3XYVptnNG9GrUO6ZNLjGL8DHndz
DZo+PT9wztN3Cs/rPA/O/CsJ11cdXLfe8s2+/7W0zJOLV78vXg2ofmbO0aPa
TGmu80rabkfF982+9N4/64QxIb+ymHDXMSbYZ0e9HHNiApyYsFtyTLDng1T0
/6DXWlKx/HNjwlG97sQxIR3gOCTEhMY2iiXwv0e8ecz+tO77HwAAAAAA4FSa
98onyOe4enu+2WO7POVBJdB/n1TXe2WhfJ/X3mZ/u/QvuDq1jaS6nutrhe9p
nnB2eX5vHyJhHMi+2jGf4/VWsb1vy74e65eFbxd+o/cLc86a5wAvOPM+5f6d
z1I/xype/aR+L2qxLQf5dDmuQV6FliXt6rzyc46HlM8eG/ej5fKICeF22clp
MSH4DChwjhAT2u9DJMSEq2tHKWPC/1v4TuEXMt+YEIWWJe1iwlN/Aye2U+Pv
Tjouby4xYfbnqLZXXndvrjo3AAAAAAAA+iTlc4MpczquzM/XTdg2B7Uc4tXF
SHW9V5vc3jr03Ybtsd9pzMtLhzEbdT9P6mdwovN15x8LNLbbjUw0nuMZ25zp
efmqnr+xntMv67XwnuyfC9/rvE91YN75sg0sd+u8D9aDed9J/eXo51v7Xal+
9me+m9csO5LAc4oT2mtTt54Oy7H3taljwRxjgjmWmfPe3IfWznvbdmPFhFjb
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
5kvbdmcfbF1i6xytlPlzW4sVi+bS3df6Pir8TrwaMp3v6DloYNtMf7tpw3xf
LvxWyn4ybR3Yv5V9rWabOq+sSxuc2eZH+WQhJvTRrkc1XaFjL8SEWZNlj52e
LHXbnX2Yc0ww373EmJD7+yTEhKHbPGqzbVLzmyEAAAAAAACfk3O4FNmEbZnJ
cb+CmfN+pfMEx2yUMs8ZNazH1m11zv/Ivsagsf/EM9rA9qGYLzU/JQsbG1gW
Pp6jsx+JnNAnrb3OpMz5m/bY6bTH+5u3DvPiucByHlqs53fS8KxMz50751xy
68D+qfArqR8jslVfkD22+0rbxN6Hoh7vx3OQTXhOm+O+cd6ncr0xYbB1jHAc
3Zgw+xpaISbcymFMePwdgnMsH7x1mBd/FFjOQ92xlm4xIXfWT0y40pjQ0O5Z
m21rOx8AAAAAAIBc1m/6rWiitozF6Tev+HtOt8f2D7jT9v67wss1x+Ou5XHL
zzjmQ+f77TomORY97UckMx4bWBY+nqO3L7bGLj7hu7GUNZSZfvbgTH+QsrbS
rONHofVITd/fUtbcmP6f05ptsXnzKDDNbIN5VvBfpH6MyOTUa/uM9k+lfD6R
DXx/JiYMExOenjGdsJ2ZjBcTBqk1Hul4RjLjsYGFmGC/G0v5W4pMP3twpvcR
E+xvM74r9TEhqroHyfxjwlZfZyPdpy8+JjS0uT1Xmsa3jk69NgAAAAAAwPWQ
sqZg6jxM39IJ2/Tnsu+v0/bzZ/rvfEMOc3mxVI/5GOw3umK+nZyY49XtywZu
i40M2LfoiMc0lhmNDSwXMJ6jtz+Ztu9J54mUuf7Hf/Wzp1opnfaCfrbWNksD
y6n6/Ola0+9X9gkqgX4znWnmmL0t5bMHvw7sXl+b/kBfnOA4mG14SYgJfbcr
MeHwGiMm9L89xITj47OV45hg61lzISa0aUfThsSE8c/9xm0T5/k8AAAAAABA
iJT93l2a3YhtaGtIMs2R/Vr2ubq1ToslkNeX+pzgbZu8jrPszjlSKfvkzEY4
x2ZZP3vCvth6JFNfFU20DbY986m2ocd9udH9OKvuUMqxt2Mp65XMcmN9bWp2
f2vPQT2OR/WUUlFjJU6tvbOu0HM6c83vKqY9PcPT8+foGZ3s68m+XfhC13FU
Bzbw8TDb9mnP9+K52I18XidSHRNs3eA1xwTzIhnrmAy4L8SEfvell5igy7Ix
YafvzXJjfW3q792YYNqwS0x4qrWX5pjQ+LsOqY8J3xJiwqJjwgltHjxnAvPu
5ALuowAAAAAAYBiac5o6BzOUwfJjss/JpVLWc+WiYzZKoP82nZ54y6jN8bTN
68gZNQBS9iHXuJ4z28vu66L7o9R9MTnbjR7jtE2Orsc23MrCx3N09ifS/cn6
aENzPLx/M70mzfEy9ZZv+21ZsU333mdH+fvQ9ayfV16zcti/clJ1zeq5lUl1
HVgy5DlX/P20xb11qS4hJjTeQ2VZMSEdcj1jEGJCX/sT6f7c9dGG0hwT/rPf
lhXbNEZMePztUMV8xIQFxoQz29ycT2mL+WL/XAQAAAAAALBmkHsZUm/PGuW4
nmunr9ehvIt4tRz63V1gvsocT5e8jmhNyIn7ZmvRkoHPtZVtt6nP+572J5IR
xgaWCxrP0TsXzP5selzmTsqxd21fqC/rtfE34tVwiT4TCCzH7SPU1metvXlu
/fNYnFx+YJlPdV6h9VStP9Bmt1IzRmRP7fhBz/fhOUl7bCdiwvltSEw4fT2X
GhN6OxckHBNSISZ0bUdiwvjXQyze7w5q5jX3gt7+txQAAAAAALgMml+YOvcy
pPzM9qms52rx3aNaDgnU6EhzvVervI6UudO4ad6a7T2pz9CO67H9i+ZV+7w0
MtA4kHJh4zk6+5XIAM9HxBn/V/8163mmx2XV5nrUz++k7BPULCsLzPN4vTnv
o7rrRwLPAfSYZt5nZpvb9PE7SB2YEBOa2oeY0DMpY8L2nHN3ToSY0HW/Ehkn
Jphzui4mBI+XHMYE8zrUT3RVTAgef1lOTLDPzy9VfmrbjHBd5G2uCSn7l5hl
LTMAAAAAAJiG7PPWU+dehtTqt/NOe3Sq52qxPPP92HmfSjhvaHI8acUybF4n
ank8d6dsq34/kfHy/aZdt232aymkx3EgnWORX2gbxQMs+07bLddr9o3CR/Z6
MNdRaP7AclIp+wmtvJ50mq0JM/NnFfMd1Xnp55G07EO0xb73UgcmxITQsUtk
uJjweMwC85njmFYsI5KWuf6mc7jF9xMZPyZczDMMISZ0aaP1AMv2Y4IZ83dp
MeGg34AO+05MGCAmjHxtmHN313Jec2zzqbcZAAAAAADMh5Tj1V2y2ry3nFHP
1bJ9M+e9zflF3nyx1Nd7tc7r6Paf3A+cbvModVi6rsGfLYxJzhwHUi5sPEdv
3zJx8uMDLD9Vpv1Nzvyxz0pn+kGb2nkrjsFPpOE5te5Pes71q8c60ddRm3tW
y3PwpDowISaYNrjEmJCdsr3ONhMTTt8nYkL1vmVDHm8pY4IRigkH9b4yj5hg
rtdEX0dt7lktz0FiQrVo6muhpv130q4G+Ebn7f13FAAAAAAAYJmkrAu4ZLG3
z73WczW0byTHtRxmXVnFsUgrltM6ryMVY9N13G6zjWPl+xMZYZzJsUnHcSDl
AsdzdPbtRtti0HNKDp/9fibOuI86PXevC9F+QSuWZf7zcsP61lL2Wxs8ZlJR
5+VMT+w26PZnA7RLYx2YlM8Gftvx/rpEceAYJUJMqFtGJuPGBPMiGXpdYxJi
grtvY8eE16Q6JiTO/LHUx4RXGtbnxoS0Zt+bYsLW2f5sgHYhJtTEhDmRbjXA
5pjthrymAAAAAADAcsiVPP+VAeu5WrZx4ryPJFAXIs31Il1zQJXLarkM01bZ
SOeh3feLynE7+7aT6nEFb+QCx3N09i+y59LQ+6bn/Y8KnxT+Tj/LbbtrO6fe
th31/ajzfRo6XoFjZ168VzOPWVbesIx73ZZd0zp7aCNbB2b6Qf1l4XO7D4WX
tf2mvmePFRPc5x+5LDQmVE0PXBvEhBkQYkKk+3439L5pW5t72seFd/SzXOpj
wkNgOWa+j0LHK3DsiAnLM+ua2S7ngdT8bggAAAAAAFyXGeRcxvBbGbCeq0Ub
J6K1HM5nJj9zlNduytt0yevo/h6NNdxhu01OcMx8/8oep6mvi4H2zzxbMjld
k/OOnHPjXi5sPEfvmJr9O7k/8o7re6Hwhexz1rl+ltvcrrb3nfedg753nW3+
btO1ptfI4/pqptf2F6rzmWv1r6Xl7zvOPB6plL+DMefiNwvfkvI56O8nuk+P
adAa3xbHwZyHfky4C51v0n9MyM/YbmJCv/t3zTFhlGNa/H1VjmOCae/Eae82
McG8ICZcrtrjOjVx+glpeUwfLvH+AQAAAAAAuplBzuX/Z+/tWmU5znzP/0dY
30D5BY5Y99OGvJwxulh3LfBNMghfiLlY5hgGQ9MkvjmCvuhF4xn7wm1yBiwM
o2HqNPggPNCdzYg5amM8NUfGyD3qcbKxu/f4TVvWiyVL1pqKVU+siIyKiIzI
l8qqtf4bftpVWZHx+kT+tZ/IJ+IYqNiFemXUvoM31vcGex+gm66RtK8E8vmW
J68Qr0gZr0+o942Ut1mwb9w6P8Xe5x/qg3NGtelN7O1SxRKpswibE6jXEug9
mI9pO7/G3letPt/K9VZQnxvsbcu+T33/npWHnjMbT1oXNZb/H8zemS5tQh6K
b0m9p8zVUJ98T+r3TNha7fWlX/t5/Zg04VvW9wbUhFCdqQkPgzU0QT2fbxHX
hKfOfR38mvA9pGnCbzGfJrQJaXOhJhxSr/3vsYF/qyW9N2ClV8/p0e9/EkII
IYQQQggh5GFwAj6XY/ATrO/3VP61N51rOu7HTdsh7vO7P1sugQbpawMh9PrC
MX22qn1PJ9b7FFHteRv7/vwdjtuvx+R1aVtzpPL0GpGOYaqtv1+HmS/2GoBG
zcvW+tzBjNXHkTJvJK/vBtK9ktEHul4/mKEvbqTNb0ueT6V930q8f+3nNTXh
MG2HYU14O7HcBodrz7lQE+bjsWlCaJ1xCagJpl7KpqgJYeq1/z2W8O81NRZt
Ytqs9WJCCCGEEEIIIYQ8TE7A53IMnsrfyv+l9lssVujnuz0PnWuVz5eD4TMf
c+MAlM9om1NfTx767MjFz8a0ymyOXeaCbfGe54iBcyDPkTXGTcrcymd9buJW
+re05xkO9/as5NmgbfzCSettB6x9d2UML53fa9/8DuSlnktvYWS8jjxfbtDf
w7PKfdZJH6z9vKYmHKYtXdt0fn8smnBz7DIXbAs1Yfkyt+ifpTtWE+zfulA7
ML8m/Dg1vef+uTRB9dXnMz9/T5F67XmSMBb3tpyYXo13t3a9CSGEEEIIIYQQ
sh4w53s9ZD7E3g/2MvY+MOU/6eTa1RH7WvnhKuu79uUc+BIxfOZjjQz/vZQd
zC8xjypU3wX7TJdZHavMBdvQhvx28JwDeW6IPbdia0c7TxWWn1++qzqU1t8F
rHU2fd36rtI8kf6/cvLe+GwPzlqx1OHa+j13PU49j74kz6vB8Zf8r2DWVTr5
PPp5tvvzAh7HOY8nqwlyzWs3GNYE9QyhJpwBoCYsXe4NpmmCWjudQxNqpy+o
CadL0risDfb/799kpJ/8nCeEEEIIIYQQQsj5gsex/qv8eG9g7w+rpN0lDmMj
Fo0Dk/w3zjWvLwcD8V6S5r49CWVfYgY/PRy/6pFsVPtVr49V5kz1LqWvuhTf
Ivb+2xuxx/qYfTxDWwtp6+bItlHhMD6rhfGDX8u1W+t3db128rkNzMPQ/OzN
PSmvde5rE9twHwfqq5vTx9fSx7cw+5dOndOFlPvHHZ/gccR6nYomVK6dRGxO
1S9FE5KekzCaUE5swxqaoPuCmnCiYH1NuLSutdg/o1Vf1nLt1vr9/rp17e4Z
4Mn/OjA/758l8l2Vt7W+1+5cj7RhbU24wOPThMH5eArImKsPRWL6EgO6QQgh
hBBCCCGEkIcLjG/xIfP/iv/jKzDnKJZWHyh/SoWF48Cw96n1/DYxXw6G472y
/DrY+wm7qX4gWHvtHtFO9VpFs/acSahrYdlS9vqE3N/iTGLc1hobBPafhXN2
oVzrdDq5fmOlV/NC+bhf8JRRurYOjx/fmtsXyI/zanR9pLzO6Vu9vqZjAaup
c9iqcy35qrXQT/E4/PzUhL7td1PtCU4M/pHm/6XUvTlWmRPqWoCacIxyczRh
q+c8nHcuMKwJnSf/1rl2DE24xch9nSNl11LXv8fj0oQvrD1vMsaoyZlbuekJ
IYQQQgghhBDycBA/19p+lyX5XHxZr8vfaj+9Wj4rn0jh6ZMSC8WBwR97eHDN
qsdQvFcLay0rofys9JF8tsf2J2HvQ91KG04ulgGB8xwn5KfGv8MJnwOJlfZi
hVlfOFiPg/Hzq7pt5FoL4+tX/drK5wJm/dO7LiPjeeGkPxgPGacr5MV56XWB
wvr+K+x970uuO1Yw657/LfZxXp/K38+w/nN7aU1Q5//+o7YhPCxNUHXL1YRm
hnZQE/z1q0FNOEa5l6Fy0deEVq61iGuC+n/GqZrQSpk1Tl8TrtDXBLX+/Zg0
4WxiZGHeEUp9zyfr/QNCCCGEEEIIIYQ8HLD3ma3te1nar6P+fn/Ht8UHUsHs
eaq+1yE/CmaOA4M/dkRdexZI3yIe76X9QEVi+doPNMl3CON3n7yWPKLcjZSd
1OYj1avCwHmOE/K+xgmeA2nV62jnpUq5BSLrC9Z8VfOqlWs3MHFfhZ5vMPtl
1iFbRn+dQD0zmkA6lceryIvzUnV9E/09PNXa5A+xwJmquk/kOVbJfFLPxt/v
+MOO3+74T1j/ub2GJlzgxDTBVweka0KS/WB+TfDOj6Wwxo2asH6bT1UTrmCd
ASzXYppwg8g5q5LXlXxuIulUf4zRhJ+irwm/3PFW6pzO7LtL+DXhPTweTVDj
ozT3qPvaTBy3BhEd8KSvz6l9hBBCCCGEEEIImQ887Hf7/4R9/ML/I99fgrUv
IZz1kIS+UuknxYFJWVfOtdZXPtLivZRfp80o/2ooz8R8Cqy0HyXMOs3s/tDM
epTIOM9xQjkXOKFzINfqfyS8d2DN6Tv7lGs1+ns+637c2vcE8tNrAdG5CBN/
5s3Hk1bl+5GgniOVtK+Q+s02xvC87yJ1UP79d3d8hv36QiffP8H6z+4lNUG1
T2mCWuNwNaG3HpLQtyWoCbadraUJNzg9TVhsHRTUBLsfou8dIF0TXsH8mvBx
ylyE0QS19noMTTh430Xq8LsdH8Bogvr9oWvCN6Sdb+HI7zROGD/9/xvJNoGM
8+EJIYQQQgghhBDycICJMXiIqPWN98Xv8QPxl3wRe3/hRvtO0N8PtUzstwIj
4sDgiSvR5QfSqzrVkfyy47ew9/ttZrCdy9yyZ7TbCuutNRSYcJ7jxHLbFdt9
IeVvscJ6AxLiC8UmO/l8K3+XsHzwuz8/w97Hrc8EvtBpPfldWW2uB/pGxZa+
FPjtCsbfrp4V39nxoa8fxbYm2xX6Z/yqsgurTeq5qL48wT7G6/vY73n6qaRd
+9m9FO8iTROucDxNuIv1c66pfLpAelWnIVvshsp17lFj3qamH5h/az2fqhXL
LqxxD47NQuW2K7b7XDRBr/veyt8l+prwI3k+5GhCyjxU75ucjCZIXjUONUH1
h3ouqv9nfiK/q9jlx6AJl9K+13AmZ2zLmEXtz5O+xBntc00IIYQQQgghhJB5
wN5nurb/ZQnu1muw92ep72qPU/2e/3NwfJYIrJVk9KPyrQzGgSEQy4FADGmK
zwaRtYJAer0+MMcaU4WV4q5g4taOsgZr2cgtZjjPcUI9Shz5HEix294a2ZHb
3CBxjQHGx39nl9JfOq5LjaHysb/q3PPMN+el3R8NzS+xi6faFuW+a5j3a7by
Xa8vKPtpAnld5cznQB4VPOuX1nxVPn615qHWJ/5rqaO6/m0pf+3n9xJ0ONSE
VxDQBGtcqQl57dbP5TU0QffNGprQxMbkCO3uQE0Ipb2Vv1UfaU3orDEMacKB
DVvztRsoU9nFKWmC950WPHJNsMbmGcwe5qvuI5A4nsqGvWfHRO5RtncWMc6E
EEIIIYQQQgiZDzzMPaCVH+dCPv/bjrdhYhq26O9/d2n1RWFdr0f2p8qjQiAO
DJ5YDux9hd6YXCS855+SxklfIrDmNaK91Vx5jShbx5s1C5ej29iu0c5AnbSv
crNknY7Vx5Hy9Rpa0hqDzHkdl1bqa1ZenTtXYJ3p6FwPxnA5afSz5ReSvx6X
yldv97nj+b3DiHUcRPYvtp5r38Le1/+pfFZ9os4//NSp39rP8CU1QY3TT5Cm
Cfb12jeeCeNSYJwmtIH81BjXA2UOpnHSl5hfE9ZYA15DE05ivQjUhFD6tTTh
b+VZs8VpasINHrkmWO2rpZ+upa9OPk4WgXMCIumLITsjhBBCCCGEEELIwwPm
HLmHwn1sFPZ+exXnpfZ7fQN7/5uild+1v9Q9f7GE8ZlN2t8Yh3Fg/4T9OWuF
lUb7C4vA/UPxXmXo/oFx385kQw3W2wPyQspu5y4fRzrjd2Lb9fytF2h/hRX3
RMSIdSSxg1LmeSXXVB5flr+/CmddTfqu9uSl+vbXvvZL31diH8pv/kTG4UsJ
bYrOO0RiwSJ20MCzRim/baSeL8qzUP3wr9jHvap71DPy205/rP0cn5uYJjTI
04RJ8wHH0YTL0P2Re+oh28zIK2uNbk5wPE04+tkHiW2nJvTvaWE0Qcfj2prw
ZaRrgrr+a3hizDFeE66QFk/cZNpBg7AmNKAm+PZcqMROJp+RcoS5MGg3ATtq
l6gPIYQQQgghhBBCThOY/eweCo3VNuUDV/u3/jPMuWYvwzo3DhF/Jvr7qE5+
Zx4mDuyPMOdQ3sCcBdcE7lPl1wN5B++P3LMdyjcjL1X+LGsHI8q217iKmcZJ
x+od7YzfifVtQ3Y8Mk/vOtgR23SFEbEqML7+Wts29ut8H0iepWunMidbT5+q
D1+3nhWF9Esrv72F/X7CL8nv26H+QsJZjjBxOil7m9YI7FGM/jrYc9j791V9
fyN9odr9Dqw4L6ftD4XGaZutCR3Ga0I509xVeao9aD/AA9QErLcGvJQmzNI/
C7e/ADVB33c3VxHXhM5TVuvp01xNaIf6C+macJsylzBeEyo8Qk2w2ljCnAcw
23Nw4TnRIS8G+CL3HkIIIYQQQgghhJw/4ida2x8zBwfxTtj7uVRs1Tsw8RDP
w9rzD5H9DHF4NvBkXzYkvg+HcWBqXfhrnjZov1Qs3kvHi5UZ9biUcudY29Z+
xYM+PLIdZ/uHPWN9ixXP+J3Q/hIznAM5tR9naIeej9WIe29kDK9hfPRqD/i3
rDS3nvI651pr5fN7ePZ1hhNLg4EYLeT58NtY+xE4z9HTh7oPvol9TNrrMLGu
6n61BvJtz/06hvAhUHj6dk5NKIbGM9FuVV4l1teE2eY+HpYmNLH+PkVATdBz
S42hrQnq3Y/HqAkdhjVBvYvyqDTB6eMby95OLsbfqW/l2mnCPdpOzupZRggh
hBBCCCGEkPHA+InX9slMpfa0Tfk6VGzDVtr4TfHx9PyJ2Pvh7nzVPr8IZjgb
2Mmr57uXa+qc4rfgPyOyHSoXI/bvxIznncGsAd+saMsVRviJrfvubGOt+s/U
BzVGnAMJc0biKjF7UodizPg5bVeUMOf5qfxesdJ07hjL8+NC+Jsdn+x4T9Kq
317w9FVvbQ2eNQNP3ZoMezyYy4ic52ilKWHFru/+fGnHZzv+o1xXeajnoloD
/TSQBzXBaIKaR4Oa4Eszwu59mqDPr1djnqsJ1z47Srinm9Iex47WXgOuMF4T
OjwMTdDPwTGasAE14RUcasKXnPTnqAn/CUYTVJpHqQmOrd3K31eY6Uz0heeH
GvesdWpkng9PCCGEEEIIIYSQ80d8Ymv7ZaagfCBe/6T89ivs4xxeheztBhP/
Wkq6wfUvzHQ2MDyxHLDO88JhHJjar1Dt0/f8QL6dm29iXWZZs8WEOJ0ZbVn7
7Qb3bsaJn+c4oQ+ULTdiO3XInq30BSJrXUes86S1IkiMl4zrL8QOlO9+Y6Vp
7bGWtv/Smmt/kOdE4Usv11Sftp7ygzFyyDxH2s7LGs/oWiOctS65T8V4/ROs
/YClTWof5IM4L6cv136uH0MTGsynCdUE223d+2HtTYvz1YQC56cJejwfmibo
GM46ZM9O+oegCZW0Qc1tWxNaK02LQ014B8fRhGQbw/qaUGH95/oimuAbR6x4
jnmmfR/Y3cA9hfRHsXb9CSGEEEIIIYQQcjxgzjA7R8pIu9Q6hoqhehN7P9hL
cs8ljG/s0krfwBMP4uRZYUJsEMKxHCrPyrlWSPpf7/gYThyYk7ZE4tmhTv7P
fPmNtKPLOfObWIcm0uYNzuQ8x4n90CKy/jLUV0es6+Q4QbH/Vj7fyjy5vybX
b2SO38Ds4al8/cq/31sXsNLX1veDOC/rN5XvwRoTrHc7Mtqi61nr8UHEXyvp
3WeZPvf8Bf1cENtX6xneOC8nzxbrP9uX0IQK+ZoQXMex8uzwMDRB2/hj0wQ9
zvUx63bkfihATbi/Jtdr+DVB/T/CUpqg6tBltuUUNGGD9Z/ts2uCM5bKBux9
FladBwn19dpegi21S9SJEEIIIYQQQgghp4nlR1jbR5NLndiuf8XeX6b8OTXk
vX6Y/QDtvTf1tXIg3xojzga26lQ416uQTwbGj/8C+nFgG6lvIelU+7Jit2Di
o2aJc4BnDWUle95Kf1w4Y3abO2bnDMyZb1v096fU41StXL8GM8TZwMRz6zG+
EG6lraoc5ed+X+ZQKfep+fOab85L37XW9zoyR73zV8qtM9vylR1/QuA8Ryud
jgPb2s8TeS6oOK/n5Ldrqy5qL9NgnJeTNzXB2Eh0DRMTz4uH55kZsinL3lM0
QX1fWxOufO07JohrwqgxO1cQOBvYGqdq5fo1mE8TOhljtedxgXRNeBWnpQlf
xl4T3nDr5KSLaYK6X2tCbdXlUWuCZ8w6mP9/UO0d3DtgxbkStL+EcQzaESGE
EEIIIYQQQh4eMHEfa/tqUmkS26X8espn1opfp4K1TgqPrxGJa2MYGTck99w4
17RPJrRfYIt+3EkBs7/hM2nbd6RvisyxV3lscu4ZyE/3X1Y9ZrbnC5jzC7+K
B3LG74T+qGHOgfw6Vo7Jkzrpdau51pn0s+G/7PgGTAyrmv/Kp/8iDuO5yh1P
fc8TmWO3lj0FfaYw6woXnmtFYv0vrefUk9jzB571LLmubP1z7ONa1TzsrPRq
reOzjP6kJph7KjwuTVD1eeia0OFxa4J+r2EDo5HUhL0m/Nb3PMF5aIL77HrM
mpD9DIP1XIU5F+AknxEY0IjIffd2QAghhBBCCCGEkMcDzueMr2T/IMx5V8p3
9hfY+9Geh+W3w97/2Tr3aT/XYOwUMs8N1Hl7rivfZxMpIxiTBXNG5FPt94IV
BzZQnwup+2xxDpgphmdiHVSfKD+uinv5ylr1OBVknN8R+/jWymNTjfFbRvL7
krTrd9jHvv69lPGWNc/vfO/OfS/A8dE7v3cyX2v3GeFJu0X/LEk1/wb9z/Cc
54h47Oel1KtxrpfSlu/CWZuQfP+IhDgvzzit/bxfWhNUP+VoQpNQhhqLFtM1
oQ6Vh/PThFnX9kbWoZT+oCaYcf4pHqYm6Ge7qwn3MbSIa0IRyLfD+WiCXr/0
acK19EuuJlxh/ef9rJrg6bP7d1UsuzzJ/QEQ0YiB+1o84P3uCSGEEEIIIYQQ
4gen7+/P9ulA4lvF39GKv+TepwMTN9E49xX6ekqZyDgHUvKtPOXF/I6D/hpp
y+93/A36cWDK9x7bv7TEzPFZ0m8H51oewYYL9H2neqyrY9flVBC7aMXuvgAr
9nGFulxhop8fxh+ubVzZvFrfvJYxryVdi77//daey9IfsRhLlf/XkLBfIhw/
LBLW/hA4zxHhfeL1PL12riuftYrlegKzr21r/a7WQJLjvJy8K6z/3J9bExpM
04RNSpk4HU34BagJDagJrl1s0NeEVfoE82qCHueYJlTWfb35ZfVDSBNU/mM1
4WCOB+4Zowm1c11rwm9ATchtn3o2bqzvaiyO/tzKsPugRkTu03aTdR8hhBBC
CCGEEELOHxhf3No+HJckn7unPcrP0Qkval8JrH2PYeKdaudee90sxd+v/Wza
fxeKzfLGgSByNhwG4r2sdBWsvd1g4sC2Vj8exIHpNDPakXcNZUG7Dfa9ZdMn
e5bbgv1SwLNmBXM2sLLv8kh10bE11ch7ry07buX7lyXPN8XWlQ3ovXxrez7Z
bUV/bc5bH6u8NrF+nd3OSNrBvoezJzACa1Zi9+9Ln1zCWTOU+1S8Y1acl6e+
D00T9DroqWhC5bMzrKsJqt7UhAeGNQ4hTVC/lUeqyxKa8CKmacImVB+cnibc
unWV8f1XLKsJ+tmztgbMogme/rtf34eZL1lnqR8LsYvmWPcRQgghhBBCCCHk
/IHZT25tX45mkt9FfDffFt/ajfYRwTrzDhE/pPhJVH8kxadg4BxIBN7Z1z61
SL6tL7/UdPCfEXkfByb9NJh/Rr8fxW+GhDg7ZOzf+lBIaTMC8UYL1KUIza/I
PVdin51VRzXWF5Z9PZN0eg1LzaFWfr9GP/6qkWv3/l046wFO+WovUOUnLxPr
+0z6vPHZPPrnOUb7QerWyecbnbeTRs+v36If32avEag9v/80ky2peq+tBUtp
QmvZReXMn4Oxgnm+UxPy+p2asCIpbUb/vPhiwboUofkVuSdHE9RvuZpwhbgm
qFjptTThfg0ZeZqwwXKaoNfeT4HZniliE90UWz0WGNgnInJfb52bEEIIIYQQ
QgghjwuY/QHX9OfM4pvA3j+4FR/bCzBrPyX6Z31dSrkHZYo/KKs+iJwDiUBc
FyJ7BCI93qvXroF0NzA+vH+Qv784ox2Nju+Z0r8Rm97KPSd5ntuMfVOl9js8
5w3OXBfd701COlVvvRa1FfssA+lVOh2vWQt3NmHbh5W+lvxurDRXCMRySfrb
1P5Af2/QYmr/Yr+f899LPxSe35Ud/wskRtN9Psjc+3zH/zzjODZYXxMG53ri
/JhLE5Lrg3GaoNJ757E75gPljtUEtY8sNeHMgYl5Hux3Z67Xc/cNxmtCh3Ga
YD8jWyt9LfnVOD9NOHivQdrfgZowR9tUH19b33VfznJG9cx1VWNQj7jvGjPu
8UAIIYQQQgghhJDzA2b/5GP7dG5SfWKJ7VB+m1cgvnT0Y+taK10V8vEgY03N
c18HKxZJ92sobSSvNsXPg8y93WDiwN7CPr7lCQbOiMzIW/v7Z/HRYSCWbuBe
/V7Ddk77OiUsO83qb2TEImXmG/Tz43APzw08e9F67ruWemq/dq2fGSof2+6s
e5Rf/00pp/ClcexEr0En9aP0+49xuL7wDJnx1VL+L3f82menkp+K43rPaktv
3HZ/fogZ4rw8ZZd4GJqg2kBNCKcv8Pg0oZhzrpwKmK4Js67XI08TWqRpgp5T
WhOudRkwmqDsxNYENedcTeilcexkjCa8DWuNDdM1wfu+B/qaoJ8pqj/sNcyH
pgmNry9mbFOvr2XsuqXKnFDXImQXCff2bIQQQgghhBBCCCGPE5j1lmP4c4oF
6l/D7ONcig/vGiYO5dppa8jHpv3WWXvNwXMWIQIxSrqOgXwOfFKR8p6F8hm4
t93xGhLOiMzIs8LE2AlfH07Iq5lan1NkjnZhxrOBpT69tXb49/C8Sh1PGF9n
aV1T86KVz7fWdfuzmrsqlrF28rt1yxY7a6WedWK9LiSvakofwuy1/CqsdQmn
bk+Ea7nWi+OB2RPyewvaWoXjaMLG7YOZ6l/DxMuVYqc1jCbUVlpqAjXhLJmj
XZjxbGCcpibcOPmFnrstIvtDe+qlNeFlLKsJah6qdd+YJui6PARNaI8xT+F5
ZwZWjPkpgcT3gDz3lRi5dkwIIYQQQgghhJCHB8y+mXP6crJjIUbUW/u+vqr9
b9rnAbPH56WVvkEgRhR7X+MWI/zN6Mcpta5vSdLUMf9Sqp8H1p6GI+p4HyuE
gTMiM23n2ZhxRsJ5jiPznC0GbU2wQFwzJp4NDLNW9JxjP1v5bdQ46vudayWM
r/9+jQLWud2S5tbtHzj+ePTPB75KnUMyT1Sc5E8xMoYa5rmkffgN+uuQ2mb/
zmrvwbre7s/rOz4/ku1VoCYUmEcT1Lg1njQ15tOE7P0+8fg0oVrK7o4FltWE
Ue9kYDlNUDaQowmlleZcNKGW7w38mvBdnJYmtDgzTQiMn9uPB+8HnQKYsI4r
87BZuw2EEEIIIYQQQgg5HcQvcj3Bx9OJL+doa29Sno4xKWG92w+PX1x8Im0g
L+0DGuVbRX/fwS958r4N+bly/DwY73O8CpWBwzMiN+Lv89bXMwbJfYbM8xwn
tDO7j04FyxY3Y2wxIe8G+ecU/iX2cVU/s2xkdKygle/BPLXqeSuflb2Uns/K
hp7Aib2CE+OL/lmQhc43oZ+Uj/8zmddjngmV9FVlXbuLGZPPpfz+FXtuyvhs
nLzUGY/fP7IdFniAmmCPJYY1oXXvyahLibgmBNdJcZqakDTfcbqacLZ7omLB
c41BTbjPN6GftCaMfSZUONQEZf+dfNbvqfwF+pqg6n9KmqDX+U9eE1LsCzPv
Xz9jXVuMe7YXeIB7HxBCCCGEEEIIIWQ+xB9yJb6SENfiu1plnzHLZ/Oy+El6
Pg84MSQwPtQmkmcDK8ZwRJ3UeaG/gxPDhIGzGpEe71ViWkxAdJ87HMaB6Tie
cqDPojFomHCe4wS7CPb3qXKsuiPhbGCYPTx/hb2v+e+QsYdnYh1uQ3MNxtd/
77vXn2H27lRcOfddw6z5+eKmovMbJibukx3/PSJntUbyuEHA/yrlvwTz7Lr3
O1vjX1jp1R6hR4nzShivU9eEAn5NKOV3dY2aYO4dowkdBmKDQU04u7ojTxOe
4jQ1Qa+RV85919rOEdaEMlKvGkYT/jssown6PSCfJqgPhZWemjCt3gc2jgl7
FyxYz3KMrcm9qu/btdtACCGEEEIIIYQQMgXt64OJ97r3eSC811uHiL/Z8vWV
I+qjfGFPrDwaKVPXxesDQ168Vxurf+Q+3fbkOCj048BU/TZwYoMRWUPBjOc5
jmjrFgvE0C5YZx2nVh25zE5s6kUcrv2rPSjfn7tOKbYov1/COp9RPn9Tz0/7
N8dmt1b61vm98ZXr9MUrVh7JPmGYWDrVd6E1DJW3WkfQcVQb67eDuY19vNk/
rm2f54L04TXm1YRr976M+hxLE7LOK3baPlYTbuGJ+8Rpa0J7rDJnqLPWhKPF
LjvPwRdwXE3YxtqKdTVBxeR2ct27jhtpV4NhTXgf5gxzasKChJ6t1nPtZJ4P
GLm/w9R7CSGEEEIIIYQQQk4Byz9Xwfj4730eMGvD9p6fOp6miuSr7rsd4zvR
vkE48U3ix4v5Ng/8fIF0BSL7SQ/cq/1eY+4tEIgNhvHd2rF1uu/bVF/pzLZx
gZnPS1ywrhVW2H8Qxpf+VGxKrVN9Xca6GJonE8q9wUBsCswZrnc2J9eupK6N
1W8H8YvSloM4L/ntGta6FDxxb2I31+7nBHvbxuwNZg9R9eVrsJ5NMM8y+1n1
DSTsTUp6fZyiCc8wThNGzQc8Hk3oZG5f4fQ1Ibu9R67raHubWO6lPCN9mnCx
VJ2QpwlX1twuMY8m2GuuQ5rQxOatY285mvAyqAlHQcbz4J0ZGfdm7fpZ9bl7
Zo68V78/ctL//0sIIYQQQgghhBASQ/xj2k9Wuj4zePa4hNlTr4zkq9cEsuKq
xI/ZWN9L8SmpfXR/FbmvTPXVYMLeblK/6N6cifmU6McG/8OOj7CPxdG+09XP
U4NZbznJs9COXT+ZH42Mj47BU9ees+qi4pHeWsIPavkki4F0rfg+Sxhfv/LT
f2bN7dJnyzDnDLae3y718wE4PPcSZi1Nf6/c50ckz2h/SZvU8+gH2J+dWcp1
HYdZOen/uOPHa9vouQG/Jtw/W3E6mqDWragJx7cPPe+pCbcnoQnazouBdBv4
NeFP+l4cTxMO8gnkGe0vaZOaGz1NsOpcOenV3hHUhOk2p8f00rmu3xE4mfPC
pzw3MXK/IEIIIYQQQgghhJBTQfx/LfrxXvc+D8uf454TWg35WMWHt0XGPpUI
7Osp5X264yehMlN9NQjEsWT02XZOn5C0+as7/k18au9i4NzgI9uIHuvV1x6c
MVw8Phn9GL1bmLjtkA0qm38fy+3xmTQOMOcH3s0nuabmx62T363n3u9jv+7k
tT/ph/dkXheechun/w7KsH4vkXCGKcweoKrOb+/4tVNm66T/Oqw1B5JlZ6ma
UDn36edETBMKzK8Jb0fm4329B8pInluB+x+rJlRr18UZw8XjkzFOE9T4fTh3
f4XmYiBtDaMJt3KtdZ/Pvuc10jTh90jTBK/uWL+XyNcE9f+Fv3fKbJ301IR5
be+gj+W6fhfoJN4PQcL7BpF7C4zcG4IQQgghhBBCCCHkFLD8h8rP0Ynv7dL2
eSAQXwJzTmTQn4aEPfw897Q+fybM/n46xsZdD9D1TIn3Uj6hbmSfzebfwuF5
jqqNH2B/TqCOA9NxO8XU8ibUU8cAHozLSja7xULnE8Ps67xF4IzOyL3aJ/0l
mL1ay5nqdRB3GUmr6l/L51tt7+48DsxrVedfBGxA5aHWMv4iUG7ntlf642Bd
DYn7xNvPGWtc3oPZE/hgzXH35+Md/7y2rZ4jMJqgY/BKOH5wxDUh+gyW/FtQ
E2L9U4OakNtnWyx0PjEejibcyOchTXCfp6rOUzTBfX9wDk14JuN+Db8mlM49
1IQZgdl3IzSOSc/dI9V1yvueat60a7eBEEIIIYQQQgghZCyQ/TXRj/e6Qf9M
txufD8TybUb9PDD7Iw76xxF4Xx9mXeKLsPYZdNK07rVIOclpPfdep7Q7oZ3a
H3zpXNdr8gX8sUblCnZyKfVqVrTVReqA/h6enXzOigWE2bvVPm+whlnHKWaw
ldT1sitrLqszKFU8cgln7cHzXc0xFae2ta5dwjrPEdbaslOmyr8L9MuN51o0
VtRqt16LvF9jg3lmNa4tYH828MnEH50jCGtC66RpPfc27jwIlKHnW6om+Pal
PTVNSJ6jkXZ2SNeEZ6AmHEMT9DP8Kmd85VnZswnMqwnJa2zo7/usNeEKaZrw
Afya8AxGE3znwaoyu0C/rKEJ/81advoQgeeMZeu3Bp5n9kr1rDE+BlhrzMns
f0MIIYQQQgghhBCSA6zz2WDivbTPo5Q0Or7m4FwvJMagWH7PciCdLrvw/Haj
fXsw61md9s0gL94rOW3g/tbn80wst1dvT5oGnjUU8bfdwPikjxoHZtnBZmy/
TSh7tngz+NfVlX2OWjNEZO9bBM5FzKxrVvwK+r5+ZStb+byx+09sqba+q/q9
qeeFr96w1pY9NlsH6tI5fbEd6ms4MZV6jKw+UWsS73nmiFq//rdj2uZDA3ma
4Bvzjc9GPOmuMV0TlG02lq21mK4JB+Uk9psq+9iaUKJ/bvBj1ITJ543i8WpC
Y/cf0jThFutqQinfczTh2TFt87GAwDsz1nMh+3m4QB172jXi/goj94YghBBC
CCGEEEIIOQXE51mjH+91bfs8AP8el5afp0kop0La/n6Nz28Ea13CybMTP5SO
S6kT292k1Dtwb5YPVtI3SDjbzqpbMH5C8rvGkWODcaSzdz12MykGA/49PFW+
xcS66TWIFN91K7ZaZeTf5vpQLdvU8+Xrcr3GoW9f7wl67yPFfq/M0HmOKt2t
71qoLyXf55G4FzxMTF8l32/cuYD9nqMb59q11IOxOhOBXxPU584Zpzk0YfC9
DgxrQuHk2WE9TUiyPyyjCRWOHBuMdTUhajcDeSylCaVvXgTKb3F6mtBY4+pq
wsbtH6yjCbU7FxDXhH9/DLt8bMA5LyZgc9UJ1PPerkfe36Y8owkhhBBCCCGE
EEJOEfTjMTr04yvs2JADn5tc137CwTgcy48X9F/qNIHfGtcPg/6Zia/DEwMS
yGtqXIBe+xs671LXrUmpl3Vf0hqKVZcbHCk2GGbdYtF9dqeUgxn2dR7Iv+eT
zqhTh4RzIEPzLbGcWynj3m8p9mDv667mfWuV9ROY8xyDc9l+Rsj3a0T2ANj9
+Ycdv0uxZZiY09qqYy8mU9rxG7dvsI//en9Je3ws6H53xxt5mnA/jgNlURPS
8s7VBDWG1ITD8Wlw5pqQajPOvVoT3kS+Jqj9or1n/EraDqepCareHy9pj48d
OOfFOL/psVr1PAYMvI+QcP+la3OEEEIIIYQQQggh54T4FCv047207+bCSeeL
w0r2e0raLSK+bwT2woS1LuH5rZA8P0XieV+YcDaY3L+J+L4qy687xlet/f1j
Yn2usXBsMMz+rbPHW6IfU1ZktLvCTHt4JpQ1OrYFA+dAIhBbmZG/WgtV8Vrq
7MNGrpW2rVtt+ILMmafSf8pW6kjeqs72GuA21A9S5kc73k4c8y368WedU5Ze
n3sBlj9WbPFzzLAXLOmPK4Y1ofU9ozC/JnjtDMtowuizK/G4NaHC49WE5Pfg
InZ3LE3YyLUScU34AOejCfrdC31mwLX011/PPdbkYIyC78xgwjsLM9ezwbQY
4Cb0XCeEEEIIIYQQQgg5dcTHp8+E62DivTa2z8TyD5aePMpU/6Tl1/P6hRCJ
H4n5Fq17le/yCRL80Mjcf9HTjt792qeKyHmOGflnxxN58rjCQnFgmGEfzoht
tEM+Qyy0h2di/ZoZ8mlweMauzn/0Wubuzx92vIJ+PNddDIxTvvrwsdiGLr+K
+TntuYl4XGYl+X8Vzv6ggfQb9NciGrcesN7XgLUnMPbxnZ8M2QvJsiE1fj5N
aJCuCXrN6uA3T9opmtDGnkFYRxPsNaoSj0cTrqbWL2Ib7dAcx8PWhHpC3jma
cIvT1IQbOO9xIK4Jnw3ZC5kOBs7IReSdmCPWscC0GODoOjchhBBCCCGEEELI
qaN9G+jHexVw9m8TX9+9b9DJo3LTD5TZSF6+MyS9vhpY6xKRfFvxOXUYiLVC
wp6dA2WVcv+fIeM8x4z8tb+/nCGvAjPHgVn1a2ZsqzcvsYsrq587zLyHZ0Id
2zna6rS5lbZU8Pi4M/Orsd/3spS8O+u3WyuN6j+11/OH6O/dWcbml50nwuey
3qAfi7WNjZHkc7/u55uTcPy3lq0oe/58zjEh932eqgkV1teEbiBfNcdSNaF0
7S+z3/T9S2vC5OcezlwTJI3WhA7racJs61tYThOu4NEE9Pck/7VQWmnK2PzC
aWqCuvDasWzgsYPI+wmY4f2Fmerotc2M+5Vdjd4bghBCCCGEEEIIIWRNxP/X
yOcOJt6rdn2PiO9xWSOwFhBJf7C+Cc+5jtZvnZve+b2UPJ+T/G8R31u0Heub
Et+WOlPv01gZE8emQsYaSka+s8SBiR92K/ePXTPR/t1rT97u+kQ9d18k1rHn
k15gLJ6KHb04wRZVH76m7Rn9+K6fSxlbmSNvw7MPJwZis2QcnsfhOYw6fm2L
/vqgsjGv3xVmH/ELpw1XTrqNm4eUo/YS/STXZkmSPal5puP67p+5yNeE3hgn
lru0JjzDsCaMWiuA0YTPYmVMHJsKp60Jes2HmjBtLObShPu5g74mbNHXhB/v
eMeTz+1AObcw74YUzm+6j46pCZ/l2iyZZKslIs94zPge44Q6FrE6JuaxdZ9H
hBBCCCGEEEIIIecArPgq9OO9LnC4x7HXH2f9nuUThdkX0C5D+T67QHrl643G
28Ba05U2bRCIw8LIveHQP8/xZ768ZxyfaqrvaiD/AhPiwMQm2pxx97Stku+X
UvYWR9rDM6GO9Zi2ZeSv59T3EDkHciCPRqgt21f/+aKMjVpH+BurPLX3c+PJ
Zxsbd8nrb2DFwiCyfy8C8WPwrGHB2XPeuv/A9nd//jdpX7uWXTxkENAE+a3D
8TXBa0fym7L5XE1o8DA0IauOGfmrPpiqCZuccfe0rZLvp6oJXW7bMvLXc0r/
v0szwh4bHGqCyuvP4GiC9VvjyWdtTXDPAijh14RXxT7eXMsuHiva1iK/L/q8
SqxjO+WZHLI7QgghhBBCCCGEkHMA/fPTOph4ryvXzwkTm1ME8mpdn91A2To+
4Ma6dl8HJ+39ukQkvwM/jVzbwnMOIzL2WITnPEeYsy4Xi0HCgrFGnrJGxYHB
rKnk7Peqzur7inVvhyPv4TlQxwOf9AJl3Pu4ETgHMsEm7+aj1Hcj+TwVu1T5
qPMfa0mvvv/EZ/NybzDGRe79BfprM3djFrmn96yw5ktpXbuGZz0FznmqTp7q
w6jYOJJkl8oOUzXh3gYDeW189hYpO6QJB88FTNOE1pcvPHHOA3n38gE1wa4j
NSG/jKmaoOdPIfVtJZ9fwK8JKk1IE1TZuZqg7LKJ3DNFE7xxmDCa8OW1beSx
gYQzcmHe4Vhl/RQzrN/C844aIYQQQgghhBBCyDlg+QsvcBjv1cJ5bx6RNVOY
2I8ms/yt+BovYO1J7Umr0kT35/TVWa5r320Lcx5diu+qQDxm7Hpp3xYy11Bm
KrNARhwYzP6NsfP91P7Bb1n+2q3cd/Q9PAfaXmL5NZwq4OO+hHUO5EAe97Yu
de5gznP8sjUuem49Q+A8O5l3wbml8sM+buwCxp9aJ9jttdWu+9g+y8YO5l+k
jur6n7A/1zJaNplkm+emCdG8fXWW63oOtjjUhNhzrMCwJhzM7ZnHqPHNkYXt
okCeJlQJfenThBqPVxN88a1TNOEdyfPfdnxVrl/rOSN5vgR/XK4ah5gmvAij
CfqZUQ/Ub4om+Oqorquz4D8cKpssZrf10LNI7LJZsY4tJuzhHLJLQgghhBBC
CCGEkHNAfCOVfO5g4r10bEZhpb1AIDbP+v1Zjq8F/T0Dn5cyD3znlg8m6FdH
5F1/mLUE9aWBWd/oImmf6bQD/Tfq3MjM/mlWtJHBODA4+3daNqTuUz5+dT6f
Wpt8Odafa+LzSS9QxqAvESbWsvWls+1W0v4r9mfilujv+1lKHupaK9duPfmV
iLxjsPvzTZk3FZw9eiP3VDAxyR0O1w0P5g0i72Ts/ryL/TrGK745S2a1UTU2
ep2mg9GEAn5N8MbmWb93od8j9xxTE+6f80jXhCJS5oFtzzw+56IJV6AmpJSh
7bgc6O8OaZqgbH5IE1T6Vq7devIrcR6aoH6jJqwIBp7v1hgO2shC9Sun2gcy
9oYghBBCCCGEEEIIOSUcv2GFfryX8tO657DpdWFvLMxYfyn2PnXlR/qHkC8J
Ce/xY+C8LzhnA0Nijtz+gBUXNlBeEfJPzjhGXn/pSvai2uuNA9vxBexjcXTc
karzd+Vas3bdE/o4692FkeUc+LgjaWs4601WPb8ieT0Tm7217tH796q5+MS2
TxmTS6ecAp41AOt3df8HQuqeroVlH42nXb4Y34PnjVxX9vYZTFyqasNJ7Av7
EIF1FjsejyY0MJrQS4++JpQJ9S4wEPs6wxjpNeDF1pkz6lKAmjClnDZ1HBHW
BNWvX8awJmjb7BDXhAvENUHd8zvMrAk4jH+OaYKK/f09qAmrgoQ9lnGEvfEH
6qhsq5qYRzc1D0IIIYQQQgghhJA1sH1njl/QG3uBgT3fMHK/RMn3I+UrDvx+
vy4xUHbUF2WlUz6hp+LDfAGBcyET6l2llDlxjBaPQxpZL+Vz/kfs/fm34o9V
cTn/eceXcAT/+QxtOEo8XcjHnVC3BmZt6q/RP8/xQtLdwuzP3Fr33zrfW599
I3COq4yh2nP5tzv+KrO9z9znRMgPDM9+A9Zvyp7+GWYN426taW27ecgsoAmj
/P+Sr3q2PA38vpQmfOhoQpVZ76uUMieOETVhuTZQEwLnHYttT9GEnzjXQppQ
DGjCU2rCaYD9ux9D57NUSz8TB8ruJuaRpCOEEEIIIYQQQgghp4b4zlr5XDm+
wWuf3wQDsUeWryfX31+Jz+8vA793Pl+lk0b5M+vE8r6K/bminw/5rwby2Szt
f7T8pOXK9qL38Nyiv/fn82Iv35d6qj79+7Xrm9Ce9ohjNyr+Re7vJI+fuD5x
aUMpbOXahdj2S1a6G9/cgGcNAGat75c7vpbTR9ivT6i9Xb/pXN9Gyvdd17G/
9+sAMOsC9MMuxIAmVAFNaFfUhGogj7Ga8K2xdnZETVg01jijHtSE/D47qibI
9U8dTahHasLLK2rC544mXCCwVkyWByauPGrLYgPtSnUc1ImEPKIaRwghhBBC
CCGEEHKKWD69Qr53tn8WnvMdkXZmXS15ZfnPsd8f8hOfnwXOWkTg/hLD+9Fd
wOyl+B93fCz+w5vc+jp9WC08VlWKn20B+6hgYo466SfvmoOV7ofSr/+KwBmR
ayN1zYq/Gtl/Xh934v2l9LmKufo/4dmL1v6O/r6f7zrplO+88ZRRo7/nrVpb
0DFlF/K9S6zvtYy3ip+01x1ufHMX5mxL3xmtqv4/dusstnTSMYTnDKgJr0l5
txg4A34gP9XWauGxqrCOJlyBmjCl/+bQBNWHOZpQwa8Jvj2Waxxqwk8xXRM6
6/rdOwOe9MH4eal/59YZ1IRVQcIZuZbdH30NNUUnEvIowPcMCCGEEEIIIYQQ
coaIz7ORzz0/CQK+c/HpdTE/6RhfqvhY1FrXW3B87zDrEkNxBm3ItwrPGb/i
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
5NPm+npyfFfWPRWccyCREQeBQ790I3nmrFNs3PEaaQe6LcF+ndHmdCzS5HUK
6e+DuCv5rUDiGZEZ5d3Y/Y3E8xwDdQuukUb6TdtJLddaGF//C9jHcN33q/z+
Coxv/QpmvaAOlKOfCW/77AGRs16lXX9EIAYUJs7rzzFiL0V44lHJvOBQEw76
HJG9MDGvJpR4XJpQgprw2DUh6zxbsZUG6Zqg6mVrQgVqApkIMs/IjdnMAnXT
z+A5YoDVXGvW7m9CCCGEEEIIIYSQVMQPWMlnrw8HkX3PxJ/YJJSj8w7GEsnv
H8BznqPlg/yC/F0H8sj29SAjbs3TphrWOZCuP9hJW8HsF9phuu95cA0lIY8G
GWfuzWh3k8q17KFKTD8pDsyyqwIZ5zkG8lJzLutMOrGzVv6+sfrwWvrip7D2
/rTuqeVzJXVWsVavRmy00/e5dbTsrY70kdqT94XA7zrOS5EdUwjzDEkaMzIO
WJog3zvXzjGsCYP7HmO6JhSgJvjynKoJN6AmpNyv7arAdE3YuM/bhHsqGE1o
rD7UmvAWnDMAENaE/zVio3qdvPbVEfNowiaUx0AfUBNOBETeFY2kn2VdNqGs
dox9efIpMEIXCCGEEEIIIYQQQtZC+wCt77XrB0TEf2753wbPrAv5Z2FifxWv
R+5vLd9m0Mc9xtfja3fGvQWMD/9r2h8Ks6/zFol7eI4o+37NbsR9jdRttvpk
1kH7/8oRdY+uGyWMV3IcmFXeV5FxnmMgr+BcSmhvKbSWzX4LJi7y1rlPze2N
9f35HR9jv572CfrrAr11Iyln6+TnXceyflf3/yP8awQ6zuu/ym2/k0/jy5/M
B+R57NhR66QJ2jGoCfoZozVBa0ANasJQHbQm5J6Bu4YmqD5eRRPkvg5xTbjB
4fqvmss+TVBxwp/Y4w5qAskfiy5nDsrYBe1nxnop2+1mymu0LhBCCCGEEEII
IYSsAdA7M+5+rclJE4xPgTk7dtB/B2t/RvTPc6xg9kD05gNrXcLyTW7d9GN9
PboeE/pRlftz7NfXbsWn2iBzD88R5ebGPem+a5esV2JdqpF1b2asQzQObPfn
+zv+BZnnOc5lY7DW39D39b8Ka+9bOLFncPz10sbGmmfvwcSCbYDePqaqn2+d
vIJxVjD7/l7BEwMEE+fVTBk7betr2uxjQI+l87100mxCYwmjCV57cdKWOI4m
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
Xp3ZF4WUEfXZZuSn/e6hc1cvMOIcSEkbrCesNZS17WugHQ0i/nyY9ZukdiBw
nqMn3aw+ackva3/L3Z8v7Pg19mtTT+CJA7Nt0mqfG79VW2Pe7vix5Fk45d3n
E7NNu+9gxcNJ/h2ccyCxj/NqZc59Euv3GfpZPV+6mfKhJoT7R9lV41zr4NcE
9U5QiiYUmeV3MkeG9njukKYJL2G/JvVKZl8UmPf8SGpCvB0NltGEnv160p2C
JijbUJrwIebXhD+4cxDjNOESeZrw4VxzJ9Bn1IQTQ9vFiPv0vz2qBepUSD8X
M+V38O8kQgghhBBCCCGEHB8sv4dbKp3rUzsVfH4RSAww+uc5lkjYDxPOvrMZ
46R8jMrn6Y0bgNlj9LeWv6wK+XOwP/PxN8h85x8j968byC96niASz4FE/5xj
b7uttDre6SR9ijBrPNH6We0oB/qvRYLvECPeURjIb3BOeO7RPvTfo+9Xv4aJ
Dd5KH9355K177c/38VuS/tvY78v5rUC5t9JXOg7xwNbQjylugd7ZknptSq9L
qPhPtab23I6v7vjsCHYzaQ0Lx4/vCnGya3Hwa0KF8Zpwg2U1Qa/bbBDZ1xl7
Tbiz3cy61Ln1T8gvGseKcZowFGt66pqQVD/ka0I0PhSnqwkFlteE+3czEIhN
Rz+muMXpaUIXs4WE+09JE0a345Rw7SRzHqgPs2sjZtzLQfKrMMO7B4QQQggh
hBBCCMkHZn1jbX+OS7V23wT6q3F8eiru6lPs9/irnLTRuBaM3EdRxuuHsGJw
0N/DU/EqnHWJSH4l9msHW2TuGYmZz2aDdZ5eQp23CJ+3mdUWDMRSrWhvFTLW
vxDe11T1ifbd1kPtxMyxfGNsxWqL8su3gTQXju2ri69Z9+pzIrW9KJ+p3of3
P0TybeWe4HocTAyl+ruL9KOq2+c6jdTjN6ljOqG/Vd2bEfdRE/L6S42vfda0
sjEVQ3hMTVD2qvbDTdGE5xPyU7b/nuRJTTgBO7PqpZ43uZpw8L4P+ppwM9RO
GE3I3q92wFaSbR3jNEE9e4+pCS1MvO9BnyKuCWVqX4zsb2rCiQErTnzEvYu8
p2LN9dnyRWQ/f0IIIYQQQgghhCyD+B1O0adzsr4dy1fznPjwnom/7w1P2kLa
EfTTwsS/JK8FiS/uZ5L3D+Tv+3gXK52qX9K+itKGl5EYH2Xdp2Pc5ooH0n6n
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
34fxn6r21jP1eTD25wjjXcp4/EzaWEkb35J63eJI5zl66lZg4l5/Vl73azMw
Z1U+RcJ5kIH8VD+1mfeosqPrOtLeH8H4+lU9X4fx3deu3ckYbuWznl9X1vfb
QFnvor9G8PGOf5jQv91M4+6LA1N7ln6C9Z/ZS/MTUBNCc6eO/K7s5UOspwl6
PSFYx8z8W1ATYna1pCaMii3E6WtCZX2/DZTlaoIq+x8m9K/37O6R4+7ThI+w
/jN7aY7+jsVSYL+e382Ul/p3wuh4Yiy0VzNmXOd+yKB/tvcS8+ZOj8H9ogkh
hBBCCCHkZDkBn8sx+Kn4Q8oTotnxRuD6NnLfN3a8k1iGarPyK78Y+P0vsPfD
xvJ4Bfs4lf8ho21buW9Mv6j7PoWJQRybj48XpT/WtAU1fn+Qtv1yx2cwcYhr
1UmV/9qM+b2AvY0+kXY+kWtj8lL2mTNer0vZsfJekTRvwNjX32Fvd7qsv4B/
Ht7K343nd2VbLznX1Hir+fPn1jVVzqsj+0P3iVvOHLwk9V37ef1YNUH1vc/m
msB1+75cTQjZz6lqghozasLxWFITPsNxNeE15GnCN+Ta/4TpmuB7Vvs0Qb0T
RE1Yl3rtf4/N/G+7u70sZshn8L2hgfuVHc3yfoInbzU3j76HwzkAs4fGsebP
bO9lEUIIIYQQQgiZlxPwuRwD5btoTwzlZ1S+xTcD17eRe5Wv+O3EclTb3x/I
K1aWQv27/jOpW0qZW8l3bN+oPRjVuP3bhDxCvCN1S23LEqj4rs+ljb9duS5L
9ceb0kbF/zUyD2Xj72am980pl3clbQfzbPgIfZtVNuybNyr//yJ//8iT7088
6e02qHJVfO3TkX3Syr3vTLh/iLWf19QE//UhTUi1CdX2c9OEX2M/br+ekEeI
t0FNsHmImuA+q12maIJKE9ME9//VfJqgrk3VhG7C/UOs/bw+BvXa/x6b+d92
JWbaexlm34Vy5P3KhqqF2qns/sHEbs/UJ3rv/rX+32qUnRBCCCGEEEIIWYYT
8Lkcg7vz5zDDXoYz930Dz/lVGD7zMcuvAznPLfBb7auDk0a9R67WrH6aUWaL
Ef4emBia/wV7v2q0biP7fdJ+dhPKLaTsPwjflL/fG9NXM9TnUubHrGedSr4q
pk7FNL2C8ft8JvuRsN8TdLAcmL2u9X6eN/K3WvPYWum8e3eKXb8embe19V3F
ptyd8Whd03GQo2NWsPfttQvY5rXY59rPa2qC37aCYw5qwtR+pybc3j+7Rz2v
E/L9QGxGa0I5Ip8u9T6YNZAUTbjFoSaofbk7J+2t535l11M0oZU+6YbaNNDW
WeMg8fg0oZ6z/04BzHhGLsz/YxUj7XO0fQ/kXWKhM4bPDXmGncp8XeVcBUII
IYQQQgghh8CcM/eQ+eGO71htVf8+vh7jx5i57wuf3wIJ51pJG5L+fY2ITxeW
73Mgjwb7uKQmscwSGf4eafNWuBCeCO1Q/TL7fbazDTPKq6Wff4C9b//S6le9
L+Y2NuYL1Cu4BjQhz0r69jeQmAy5pj5Umfm0iWm1fQ+OJ/a+/cay0R9J3e7W
wp20B/MC+71EP/bZI5x1WRye8ajKexbKO9OeRt/v1Ff1Ryf9p54p397xR6z/
zD6GJtyAmnCQH9I1QfUfNWF8eTUelyao9hxbEwbzh/W+A9I0oXCuPQZN+Bjr
P7OXJtkWzwUYPSlnyu9OM0fe2y3Vx8jQvocKzDnra88jm3bqM4kQQgghhBBC
yHTwOPZ2e0t8IPWO57H3I27kWocV48Ck/w/2LsNwvFchbSsSy7mWtvp8lKoO
1cD9ujzVl01G26L5Sjrtt2ic68oXqXzGr8rvSW1NrJuODZotz0A5lZSj+uKL
0oelp5/0+pP2uS5dr9F+vAEbU/X/hps3jD++Tsyrc/spYjtJfn43X+zPg/wD
zJrErT0/ZFzcsfplqN+kLp3VF26cV6Pb78s7s6+3uc8sHMZzbcUOSqGV+fYY
fP22JjyH/TxtcBqasIFnniBdE5JiN0FNcMtcSxMO1mewjiYo+1pKE/4Wh7G0
+tmd+s5C5/ZTxC6naILa4zlHE3p7R/jaaPXFkCaMfuakzi1PX1ET9jRLzq+1
wIBujMjv4LmceF+F5WKA9Zyfdd+CcwHmWbr2HPJx9/7W2n1ECCGEEEIIIY8Z
nM5eUUvy4Y6/w96X1cHykWHv41otDgyBmCikxXvVyPDrSPsPfK3Y+2UG/b7S
NzdIj6vxts1JE10XlDqrdjaY2b8jbUnuvxHjuhV7KxFZp4SJc2vk843Yomr3
7H4TmP3yihnz1OPzhZDdIrCmE7DHwXGx+i11/eDKtkfs9wS4dWyttL5vnGeF
qtfTWN1k3FS93DivQn4rLNvz2nxiW+qhfrTa7MZzVVY9CmvsviV/PwZfv1r3
D2nCJR6XJhzYEc5DE3S51IR56raqJsTahXxNOLDpQHpXE9T+27eOrZXW91PW
hOuUdv//7L1NjzTHlS72/IT+B2/+AQu9twjkmuCidyNAm1wMtODCaMHcCBgI
ebXwEHcMuCHIkBaaQW5ECAaBW9CFAJoLTc7Fu+CM5XHhciBTNscqvJficCRS
bPGlRFIfaPfpOtFxMjIiMiI/Kqu6D4GH7MqKjxMnTsTDOidPBPI5gXLTP8P6
e/bS+CDVbk4NmDH3FpaHstvDgnfDYuY496kAxx37NdAYsEKhUCgUCoVCoVCs
CNgzCB8y6N45usuN/FxfZR9E6/ohsPd7VThwbjACvhkM53udcd0k+RA54xJp
9+SV3F/Qb+2p04bKIeEMSNGXmZtRfqcB/fXyrye0WQj7uXT6qRPm5lK00845
3iXGzO2RnFvYOEXwHk04Z7oGyuzctRlpp8mQdSP0W7JubxxbvRCfa9jcLDM/
XwHncwX6oDYo/9nN86qlrJh4hy9ErrHH/rz5XB791TymBvt9kf6mc5EfQ/xX
OaFr16fGCTc4fU6gtVknzI1yQnru71qccBPpg9o4RU74Gh4XJ5gzBR5crErY
9izjgt2Ds969QcYZ7iNkMvtYtba+DzivpxD7NXhw60qhUCgUCoVCoVAoTgXY
+5zW/l24NOi9/k9u8RTWJ1nD+rmKgG5KHCAPDAGfCNLyvajuLnO+e34giHtR
B+rvuE/TTlJ8wPO8TqkvZNs48s/lqx7lxwrMVc1tXRn9IiNOCU8MBTa+so3Z
QYacG0R88ZltFSzXhsd5H6tPqNtw3XPnuXcthOpnynoDe4/oNWzsqBA2WYs6
l8LuaiOXaSci12fo5nmZ/s4deYJx5MQxXbPOLxDJ5/LUq2DjnedCD1SP7m3+
I9bfs5fG+9hzwlt4oJyARF8rpnPCFvNyQnBsjmwb0Z5ywng5GyzLCTcp64Pl
2Ll6D62FQP3kGAPsnbkFROxIyoA+J1TI5wSa+w4n8POOrbMcNxP1v8N0Tijx
+DjhbR7/NxD4f5NTBwLn/0xo7xIZPCPWXNIeP1ImL5c9RMDuWWuvnRy0a+tN
oVAoFAqFQqFQKB4jYH1gDxl0ft3P2KfzGmzchMbewN4DGTt/sMBCeWDwxIfE
d/XQb2bweZgZ/dGYN86zOz9zQt0K1udZISHeByffC5n+NTg+I1ifeDPTGiAd
j773UOihdXXB9hKdP6d8yTbr+sAvMfEeSMzoG/PNwQg7rF27R1rur4m/5fgd
ZSx3I/5uhV3V6Pr6SzOnPCeFW8fTz3/isk8c++jZADyxjsSxFDyeZ9zXFp58
roBttRD5obD73zexj4f+Hg/f13/0nMDte/3kWI4TWudZDidsxd8pMWCSr3L6
3w3VE+V9nED1m5l0X2M5TujpOmHdPjZOKMWznW8dOPWW5IQrUafEw+KEczhn
4KPPCXR/ykPnhCtY+y2R8S7KqUDY7Jzn5Tc+Ox6oU+fWyWyf7LleW98HmM/2
CNbNGDz4uVEoFAqFQqFQKBSKYwRsLtNDxH+5xR+wP+/zKf9mNn5TEwPp+cAS
dFZixjwwBO7zRFq+V4mMu/sQOO+RxzI4fnT97oN+V9h8JZP3lOWn5TZIt1tn
DFuetzl813f+0sw6JcR9jp7vm5FjreCJoWDCPZDgfFPM876Cka8Szy6QmQsi
2rrh/xLaxL6TbF3U27GMnXgHxPmecM7fFDpr0Y0BbNy1I757fotPPX1XnrKb
lPUmZHPzub5/i7cS576BuFOVbWnD9vkVnoOf3uLf+O+fYf29+xCc8Abr4KFx
gollJPWN0+WEnTMG5YT0No0dPRROyD2LdocwJ1RiPltRpxBrW3JC464d8V0u
JyTlscPPCd9GGif03nMRzx4jJ5h939jSGRLOoj81YObYK+yem7xPwu47xUJj
NGt0kfaPAdhz39prZgrKtXWoUCgUCoVCoVAoFI8ND+C3ZAjXwhfwG+xzvuic
twZ+fyU92yGSyxHQX4GJeWCI+CyQlu9FY2oy+ivh+GCQfs5ijW6OD/UdzZXC
3o/4LEdGTxt3cRrxWcawenrLbLtA+tmjhZjrkM/XxJNGxSFYxztffYy4BxIz
nf0HJ04m5mGXY+9OmyZWNRTTMn76XD9/yfL15hjd+xxL1/5h95EzXx2PbuiO
xxu374guvesBCXc2wp7dEDp39AyeM43RjZO9ABs7oPX5KZd9DJzwEYY5wcSw
WpwmJySf6wvLCTIfvxrqR8jTOH0PxYDvOSFWbqBfHyeYvnt6y2y7wLycYOxr
lFxYhhOaMbI47cQ4IUkWT5uGEz6J6R/TOaEXA0efE7ZO3RAn9PgVR8YJQtYU
TngNj4QTHP00Zs5h7XC2c5PXBCb+v9rAWs3htjpk5zPJRO23a+t7obEVOJ07
f0PYra1HhUKhUCgUCoVCoXhsgPUzPzQ0PL4Ge1//O7f4Mfb+D/IPGL9FI3Th
jZlk6rPEiDww7q/2PDc+yjJSd7CMpw6N082pvUmQs3DLIXKfIeuZfIhT7zst
4b+nssEIH7Cn/UtE8pWEbdxA3OfoKVfNJE+DSAwFifdADo0rU57euDCDrw37
syafD9hQlo/RkZvmq4Xjx0XX139n/873X9ziVefZhW+8t/98DJszau6P3PjW
tJw/p90rJN7ZyHW2Pp0g8C6L0GMDu2f8Ddv0p/zfAo+DE+heeMMJJpbS4wRh
J4+VEwZjlvBwB9I44ZOJ+0aJ8N3Fygkjx5Upz9qcUI2UewonfMd5dgqc4H2X
BeLsdPQ54d/xSDjBo8NG6Gdr9DPFpo8BGJmXn9Bm8v6GyLtNM8nTe6/joYDt
cO01MwfqtXWpUCgUCoVCoVAoFI8NON27hGIoeWzG10C+RMr3+ib7Bir+jnw7
5FeT+RwFEu+BHNBrgcQ8MLAvO9AOydAO9EVlsu4s5LHX4nOT8rvcLYfAOXDo
nuVINlZNtNON24foZ5Qv2NN+E2mfxlBE6p9L25tpXUZz+BC5BxLWRz467sBz
28ITd4DNRZga16B18RI8Z8GKPrLnFtYP+C14fJ7on/l84+j1ubtWWac7zxxQ
ntcTCB89IjngsPvSj/m/JgaZbDvo512WCJxbDOujvRTr9TXYvK8PnLZarL+H
H4ITKMcthRNIZw1W4ARfX0jjBJrrOThhMP/NLSdsrHHKVZifExrP8wrzcUJv
D0YeJ8wWi8B8nFBOkEE5oa/TnWcOfJxw41vPYlxzc8I5wpxQos8JDcKcsMH6
e/ginBCwkWrI3k8RWOCOXLa7ZP0g88yiEfJU7po8deBhvYMR/H9jhUKhUCgU
CoVCoVAsA+z9QGv/HpwTrTM+8jW8i/19j/S780UuR+OO+TJLZN4DmaDnKwTy
wBDwhyMxlytXTjjxQUTOJgzUC/pkYXPmstoe6LdAwLcMEd+a0H4nbwAD9zkG
dDLZThx5ejGUQLkrtqnazAucWM5IffdiYeJ7bzw+s48KXX97w32ei/GP6oPb
/mnEZkqn7y3snkB1Xvfpj/TsfP7YtMP6r+Hxb6Kfz/Vr7O9sLEaO7xz2bOsG
gdgknFgYOIbEsrwFu28WN13drL2PH5oTrjHMCcF4ysg5LHGcnFAK+XYZ9VI4
IavtgX5NH6H1vSQnRGO6eLycEJUtoY8Kw5wwqg90OaEM2Izs2+WExqc/DHPC
FaNxyi3FCWdQThhC8N0Y+M/Db9xnpwjY9xRH2Vik3TsbSixbLCGDR556bX3P
OJ7mCNbMnHgwc6NQKBQKhUKhUCgUpwI8rHyv0hmb8TXQfXKv81grdOOTDcJ+
ZCq7Q+Y9kAP6LtDPA3vzFr8KlK8xnO9VIvO9ajhnQSLxfjB44hKw/u6fgP21
Q3VG6C2oB9F/M6H9C7aTHyMxdgB7r1q9wLo8y5CjgL0HkuwqK/cvR5djbC3Q
zs6zXmtu++cT55Js8FloXswYHfsseS/YIHyv407sG7R+7vK8hP08Zfm/jMid
jfz3aJth2/gcfE4q/HfFNujvcyTHS/ycfP0/8+kZygkd3Tn1L6Cc4LOXyrfG
sF8TO1eXvjoj9BbUA8T5thPaN5zwJo9lcM1i4rsrCW0rJ4xre4gTSF8+TriC
5YRe/1JmrMgJ3MYQJ1whzglk54+BE4be3+jsg+LZ9VDdY4ex55nbNP8fnPS+
DRLPG5ogj9mvemvg1ICHlftrsFtbrwqFQqFQKBQKhULx2ICH825/Gxgf+RrI
x/WU/1vD+nKMnzvo20H/buBZz66C9TF+wePYoJsHZny+5UA7LTJ9zrIO9zno
F4LnfDWWkXyrf7rFC4Ex7nJkC8zDzjdH4vstjylrjsQc04f3UupjYj5SolzG
j1Ullqc5/DP2PtyovUTmNtofj3l0Xp3opw1895Tn4eUJOiM/eDTeQX2Iv2ld
f4/HXsDJBRPlWth8wI/RzRf7Gtv/Zxi4sxGBeyMTx2fij3RG53c8359x31ux
h9Rc5wnL9ir2ca2bgHwl1t/PD8EJLSwnVEjkBKFTwwk9HU5cH6T/OTiB6o3h
hEboIIUT7mzSY4e/wGE4oYp8PwcnfJBSH8fNCT8fspdA/WqoPzxMTqD19z3u
t8Dpc0KDMCfQfx81J3jG27hlMcNZM2sDI+6Hz1hjSe3Cc2bEAuOk+Zs1zr3S
fNVHsGaWwEm/R6FQKBQKhUKhUCgUpwg8jPu9vGezwb4/TXG9b5qysP4w4++v
EPFzwjlrdYE5qLHPv6jQvyPyhxjO9zLjLDL6LLifC1E/xc9NcpX89zns/XEv
I/DePebJ96rgubtPfN+LfSW2ec3yfQmJeQzcT3ROZrKLMmbfztjvZEfkHshI
/cH8Fi6zm2FM9/bjPL9CNx+pHtH2D7CPmw3p697WYX3htbDp3jhhz3g2eV7/
Ad18Lvrv/5wg491ayxzXOcT5w/DES+CJdwn7PmdZN9wGxVSaAftee08/KU7A
/O8GUZtv4bCcYOIDF/x3Un2Id3Pg5wRfLnUb0m2GvCb2tRQnvIB0Triznzlt
INBPGbNvZ+x3suP0OeEFTOOEFH3d/78LHicn/BMeKScE1s7WtTfMcNbM2sBC
d+QKuyoSyraubmeWZZE49wpztTuCNbMEmrV1q1AoFAqFQqFQKBSPDeK38tq/
CceiHhhfg/3ZxDRGynPYwvqFW1Fu0LeD7t3As73DLOagcPoi/+fbPE6K2Vwi
4F9Bwrmgnjomp8HoI8XPfck6MPq6Et81EDEUZyy7GfTUJs63N+bgyLOF43cW
Y4rV9Y5xwfVZJcq0EZ/P4LkHcoK+ZvGnIZDn5Y4RI85vZRkp1+1vEu2o5L/p
3sXfSR2R3jx1/vYW/8p9/BEin4vX0Wep+oHnTNzImMz83M8jbGzOfO7tXRBx
IqFf2v9+xs+LhPlee28/BCd8A/NxQjXjun8onGBieKfECRfi+Tnr+hQ5Qdry
Q+CEbWwtBmQcywmfYZgTqNwxc8IOYU4w65z2v0fPCZ7xmr3swqOHTkz91ICJ
94FH2iW7HHwHBjOdGT/Qx2WKLMcKPMyznw2u19avQqFQKBQKhUKhUDxGYO8L
Wvs34Rik+BrM72jKparB5x7Dc14jl6Vnm5hvAt27gZNyChLkbBDwbbK876Cf
Byb91MY/lxWXhs0BIRvYJZSnfn7POq0C4+jNC+bJ9zI+uWKgXAVP7h7Pr9Gh
N67BNuK1K9HuQf1+RiZfvxDxGs93Bew9kK4uzmDPwI2OBzPdGwf/HY9GfveO
ULM+k+Iq2OfPP0+Ug8Zdch90buY7zvckj3tn47v8/P6OR6c96r9O7H8wroaB
M4ZZLxfwnEsp1kkFm+dv8qrfQEIMBcoJsmwuJ5RDMiTaSROaK6Rzwg75nNBg
AU5w9Yf5OIH+6K0Rz/wMcYJ3/SKNE6L9zw3YHFXlhHDb2ZzAf/s4geR8EX1O
+BRhTviHkE15+qc1MhcnlFBOyOKEyHhDdrhBxrkCxwQsGH9F4jsamGHvT5Tl
JM/r5n1m7XWzJMq1daxQKBQKhUKhUCgUjxGwuSGngmSfK/b+ste53pe5LvlA
jH+8FmWTfKCY+W5gWJ+cz2drYrslfy5h86rowV086RavIDOnSujgEoFzGJ3y
NGY6Y/eNSHs9HxDmy/ciXafeS3nN4zJzdZMyV/Cf/VdhICdq4fXZuDYp7CIa
34E9J3XL81AgIabFdZPiKwnyk/5aT9u9OIQzPjPuodw9yr96JVGWK9izOykG
eC30RN9R3tan6OZznbEeQmP4Ropdcp1Ld3145qqNrUWW/amrP2ETl/y55TGR
Hs0emDSXUE6QOm2RzwlT10yBB8AJXGZJTkiKRcLPCUn8zfJfOc8qnC4nlOhy
guHtQ3PCztN2kBOccQ9xwh9u8a0MG6oxDyeYdftyil1ynbU44c2cucTp3Uma
zAmR8Xr3fdbhaut/4tprQvY2sV1ja9VAuTubXniMJVZ4X3Mm2TdYf+0siXpt
HSsUCoVCoVAoFArFYwX7BNb+XZjq00n2ucDme/0d+L1z4xdAwN/IutgN9YMZ
7wZm2WJ5qW2gfxrPhmUgPyX5L5NzvmD9JKSfZsA+SCcvIuJXgfUlu/7y1tXz
CB114h4DZWluKS/tC2TkasP6b0vRTlKfS4LH0DifrzLqkw09x94v/npGn5Ps
mtvZSf0JHQ/aAyJ+VraHT3h9J/n5WA9XXO9vYPeVLT9/w12HsPkY/73zvOE6
tIaS8ozgiXvBuc8xoQ261/LPUidi3TVinPTZ5Hm9HlvfgX4aHHZvX4sTTGxw
iBMG+8GMdwMjsv5wGE64itkMupwQXIOubTrjG7T3AVnHcMJzzMMJs90DMcE+
Ns7n4Hx56l9iXU6oxGej40F7gI3dL8EJ38HhOYHsaed51rp6irSRwgmX6N6p
rJyQZu9eHWG/z96kzM8xAQvekYv0O8qT7HqiLJtc+z4GwL7H9VAx+ewIhUKh
UCgUCoVCoVCMB/s61v5tOLtPB3uf1WvG58F+gQ1/Z/JZSqfOJdL9yiUm3g2M
yDvxSPTXsMyfw97pZvLAioF6V1ynF9eF59xFbreOtNeLoWC+fK87H2bCfJC8
z27xC2Te1wab+/aCO461IOahEfLljKm6xW+xzxGiB3WsPmze0dTcduq39Y0j
s42en5Xt8J3UtnhMlPNE+cJfcH2KB70oytSubd/+87G7/mDzvwr+fJMxnhuu
f4aMWKEoT/qjWIX09ZONu3uaiSFcSVkz56/B+vv+ECeUI8c1lhMG93jMwwnU
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
C/TPpF/S92u+u6lmqKPMKNuObQubWF06H5h8wXRecFZuaDg5teVYuR+0v3Wi
/F37ruRK17tCoVAoFAqFQqE4NsDa3u4aGmec9M75Mjh2BNaG6JarYeMwigny
PMVM8VyZ7VH9L2BEzk4x9h9hhm/gEcmbiI39kezklx69u8yRCzw+Q3FvJetB
IH4lIb8aCTvu9X//do3fcT+oja/C8z09RA5ZWF8C+VCrSB86LlvD2vwb39zA
2hVLfu7NkGy4vBnXg5SOCL04EX0vRH86d76Q8B942qB16OaoJX/IxwjY5ES/
kvk1E22T7D7FJpfrmDhD0pHvp+SXWRfJ9spzjWzxP0YgDkyUXaf6AHsOJNnu
vuaRI9Vd8M/Psf5I30uB5fdv5YTpOkbjmsIJV6znnat3E/qQwwlfoO/XK3L7
jMNwQhWTBQ7HCWu+1iCPE94NyYbLKyf0ZaecoJywM2DPOb3kOQmub8XhAbt/
1UfQl3ZX3UMmr5lx79DOV2BzQ9P54Tn5RCouX/Hv5u+LJ/nfd7lf5vpdw+I6
plAoFAqFQqFQKBQS2NgCl35X2gcuxRjJjkZnx1HcSgMRC+eU6TDyPEfsOZ4r
s32KX/mnEeWpj+f8O/V1sg845/nr/17H5nynxrleI89+0brv0wjnGjNxLFnn
V8Ge7fhhaN4hznjExsZH9uo/XONvI2uq4760cL53d8pWouwl9yfoi+b2v8TG
Nl6JOWgiY6Q+vDZC1s/Ak98Wznf9jj7lnH1Ywol7g7U/fxSSv5BT1vcCqedZ
XklZOH2kH+bKOXoVkU8Lf2xwDZt7OEfWZh18DuFDEddJJ59gmdDPa/HsfeaE
c6dMh9vJCeRbPXZOCPnak2sT0zihzux/if1wgvGjUt/pLOEuULaCnxN6e6co
T+0bTpBz2ETGSH0YwwnPSh3xjKsU124jJ4z9RqDA7eWEL+DnBKqnxwmizJ3n
hB3mroTN8dzEdFaxDOD4Ixfuywo7fncL+zdpkVGW1nU9Q78fcF1fMig++EGi
j7SXrMQc0O+Uk+Ntrmt1BHvAPtAtrWcKhUKhUCgUCoVCIQEbk3QXQfb2gt85
f8xjNe+g5jw/Yz/rkGkbwIHjuTL6kh2/Ao+dE5FYrYy6Unb+EtaWvUbfpmjs
xEG5w/pl3Fys61DbGHmuFjZ289ci990zHguu/w04+T5FmYb79xiXfTdQroX1
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
k7R/wsf7slvMEBdFwfsy/Dxc8jOxmkH+VapvRP5eUSgUCoVCoVAoFAqF4iHB
/EZ2rlUpnwvWuZ/k6325sL+X2Zf3ZOzv8hLfxe1/34D1SUf3GUy08zZGnHMV
aGsrz0tcf5bl/BtxbSt/KdImxdX+1nP9qsSPm+iD7IJyuv5v2D0dyWf1+hz+
Odh3+n1nND6DdV5Z1N7g5MWxzKTTJ56y2f4rT11aN534buz62ZHt0Ty/z238
KMdHhgn5Xlz/OdbNByV2zf3+luHL51r4niF8/V33eeNpvysZE9Y+4maq/Sk2
+tw3J7xk1ug95ITfHTEnXAc4oRn73PO0VWHICRR3/puxzyWn/RgnUN/ECY8T
bbjP6jMoJ4Tq74MT5N7xdP2OE2L9QTnhQQEZe4/fd2D9jscPmIu+v69xIrJf
fuH8ZO17AfsuTDcTV97ZRUafPfS9QIVCoVAoFAqFQqFQPHCEfIXw5Gk4903u
0wvwnOsWqXfJ/T2HGc/9jZSjcXyO9d665nuxT0D4S57E9FLQ3lael9Ap9fEy
tvdEbVN9sl7fgZO7hIjvvFDfMs/ru1jnU5PP6vf87xus1zlygL3xataDyY1N
5fjd6UH4nV6DJ18AE/K9pG5h/dpJv1SgnRb2PMdvYe17N99Tdk5luhHy1zz2
F2H9rFl64Dle8npy9wKmttyzkc3+pUZPVK9JtF8XjqU4x04RtMc5OGGR2Z/k
hA7744S/wsPhBJk3PDcn0AXihH+Bjf0aTjCc8SA4getfYzvWSTJO5YT/isNx
Qu7fdhs+cPtGmhNuoJygsHNn1mgxFxw7eGyX/MyiXPlfIvH+yg7670vWUqCd
xvdM9pQzHJYsm9lvjTyuH/UMVCgUCoVCoVAoFAqF4tTAflU3ftPE/JVwzncT
v8ejfkL2AfbY9kUPrmXInPITVsJ3+j13LHDOgczor+K2LpCRA5fR3iDPS/i7
rhwdP4/EO/YQ8RrX54HI3pmJ8d75TrF9ZuMFy0V7PNJedRSvMLlCn7LOqe4l
170xYyrRFzz7VUPEd1LzL+yqwfaZpGbuak/ZduRcNly/E3O3mcfM+iZGUDnz
+QJsbKqOtOGN1yX6vcJwP9nBtYhuV9yvsdvWGVMjvt/FisX3G1j79tq120bG
eBaldq6I2kbnXLtExBePh8cJZs1JThidZ4TT5wRZdwonVOLaAuM4gcouRbv7
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
X3Hdt+brOydyEIu0/a8T5tCJ30f79XW/g98z+nuIvS1gG848MOx8x8qv/7nW
3f2ft+/xgbS7wIQc3wSZdJ5Tsp8KvV+78fw+ee3EbrdWv6FzK2uMY9HquQb9
+bIqHtoG7vv2Zizfy94Hul8lsxnjqpDwHQYcMRRPm5HvFEZ8UebUIhAngZUn
nTDPveXqnBvg54TCY3fedcE8TriO9R+xlzU4wfsdAnpOuJbfb2J7KDKHDqfJ
Cb+FnxPM58+VE5Q+WqvfOtC+RpwTXsFpcMIW8Xh3C3LCkwESzofI6Cv4jcIK
spcp+2jhMXVN7X3nG1eHthWCIAiCIAiCIAiCIJYHxnleg9+t695v4DHRJy3P
NlP9c7DyvDxtKhi5XPd4C73/eTRXeWZj+2St+48+LWTUJw3J59DlS5hQ/wuB
s1pnyFhgnAf2bex8/eqM0r+7xx+xy/PaYmKO7xSbzZD/Vubw6Od36X+irgtj
7by+OwRiSOhzuVTO3+diVzWM/OCAHE1MJzDiEg5bv5XxH39OnPtAlwG9l9Z1
bePart4I2azoJSnXERlxAcKrv9r3u3X9KXFCHbF1csKOE1TeposTbnFcnKB1
ci3PN8a9gf4n9lsYa7cUJ1zhfDjB/r7C5oTnIZsFOeHoIba6SKxW7OMGGTXg
FxhTvdOSz0tYYLwXsTt/vtrzGrWHthWCIAiCIAiCIAiCIJYHxnleTp+n9uEE
+tF5T3Xm+LO/5Ycnz8szlsqh+T12sYHXQmPCOpPRundl6W2bO3fHWJV17WXs
fOd/P6E/5R9bJN8iYjvKL6zqa94JlG7fxMx8roSxtT89awx5TsUl3rPX3rUG
mfpujN9j+6UNjSX29bHY6U2K3xoJ+V6w4hIOe7sT3eTUE32MoUTmM5JN6w19
TqbSW+vpo07dY0iIexBe3ZXI4ASfvWEeJ7ShvhP6UM+TE4bPqnf1ITjhD9gP
JxQ4AU4I7Jc2NBZOjxOCe9/eL5betlieEzZz9iORD2ONZ+exInL2+EryP+zZ
PevsN/f4wR7H0++I8tD2QhAEQRAEQRAEQRDE8gAG5+1pP6ArJyOUuxLN9/A8
N/tbfiTkeRltK/FjKv/5D0K+JFh18ax72l9yZfzuzN1JnEPlGkv08p7PNxvR
a9YzmfIWGOZ8vS9roHIWVC7wR1gpx8uSIzueIc/8TGS8tO451yFDJwNfNgI5
egjUBcWwnqOS8wtE8rwsm3HatNWmsa7pPfyujBnsI2BzVaDNY26kNa567qsy
X2+OIna+2KScR2TEBYiR7loMOaHD/jihADnB+y7C6XLCx/DUDV5YjimcUBvv
vbU5ofW9w5DOCaou6NKcsLH3Ks6TE/ZWw/Wpw7B/7/pn9FUh4ezxheX32t2K
Y76OHRc92+OYW3vvEwRBEARBEARBEARxHsA4z0v5x1qrjfYBhnL7tvZzCWNr
3+AsfxwS8rwwrPf4HS2rdd2Ob2x9c7Z9uC7faeYcOtuvhb7+3oX5c4ZO6hVs
ZYNxzUblr1K5Uz+UNurnT8R362pfLChTln9Oxr8V23v8ObYWmbZ4bfxehOSz
xzfW+lb24oXoVPneXzOvB2TQY8baPMamRB+dtmH790wbicUEXbZ+LXZyJ7+r
Obae/kfXPWNdpbYlRjpO5YQ60A854WlzgopP/hB9bq3NCXd4GpywNfWOZTnh
dRw/J+jvRHzz1ZxwbV0nJ5ww0HPE7Hg7Ms4eX3gOTa69zxxPvX/+sITOMsYs
Y+8GgiAIgiAIgiAIgiBOFxjmeWn/X2G12YR8Zsj0Q8szFRb4lh+RPC+Zk+k7
9c2xwrAO5AX8tfiupa32k2p/czFxDg9jO64N+tR6Tu1vrj8H43yuGxj5vDJv
de9n2PmizXiRzk+7SulrppzXtv487a4w9q3rWISZnzVajwxZSsdaDuzFuqfG
3xh6u4Ujpwv9GclmDph37yAt32srY5Zw5Dxi4rns8MRQLB2N9ovM6U7GdcZw
kOfrL1P2CzHSW4sxJ9jxsLU4YXauGNbnhMLRp48TJsUrsDwnXGEdTuhg5PNi
yAkfw80JlaevJTlhpD9Pu9K2bzjOaE7tLzCGay2d6wHjuwGQEzqkcULSez6n
LTEPYm/tzD7M71z2HfvVNrmvGsOX8s78dF9jyrhKt3urbUwQBEEQBEEQBEEQ
xP5g+zfE97fxtCk8fVzn+kgMn2a5wByU33OU5yV+I9N3emG09529aD6jzgF9
w9FG57KY/uLrOX4u22/r85Uavtcm0JfOpZl0vib8+VyFR5Y3sIv92nly6t53
4InnpI6TIXfQh4XAOZRwxKrsNZmznnJNzW90JqnI9Rn6OJNzT8DKGUMfz3E+
g7R8L7UGv0LgOwxM9L/KPup848MRPxR51LmHLxp92G0eYnAZciS3JQ7KCfqZ
coE5qD2RwwmjOXqeyeGEyrbdzDkM3iE4Hk64E31d2+tvyPIccU4YvatBTjDl
SuGEQTwUx88JwfeCXnuHPCof0ssJcv0uQ47ktsQ0xNY6sQ/9Pmnn9DNjfDV2
vaexzO8q9pn7e23vOYIgCIIgCIIgCIIgzgcY5nmVtr/G8C86/caI5HR4nmnE
Rzn7W3548rxg5W0Z10dz9PSr/KSfiA+2tu6NfEKY51t/kNX4XfukfTrXfiJf
vMLpH43MVcmQnINlyNiIjptAm6/qtkvK4OjDu7ZIqEEHK4Zir8uENW2ta6O9
hD5vS52N+mpCv6O1RTw/rA70p3SsanN+PWHsDabt9UEMxaFzey99eI/XLZ2V
Vpu7DBnubL0QQX21SOOEyvN8NdFOupxnAn2RE8b3R++NhLkqGfT7uEOkZi+G
nKCeazz9HgsnaDsOxYefKieob3BOjhN8fTrG8H67QswHInXhM/oIviNWnsPk
vT5xPPWeexN7/PeKby8RBEEQBEEQBEEQBHEesH2jcOTKwJOfIve0j6dMHO9C
/Jpe39+EOaj+3jV+L+Gp2yj31fUqUTed3R/c+SlXc/xEpkwI5CM5dD9qB89Z
rZ756TyrO3jyuTzPXumxETjXWNrq+89krG3K2hu67pCRBwZH3AEJ+XG+dqn2
4ulr5Bc3dPcChufPvoz0M41HMsFRH9Kwh1H8w2iv5vt126YDY1cp9mk9o/ZP
7B1ixuNeh+EDhTu+oeQuM8ZPavvUAXJCTDed3Z/Y57FzQjRGh2U44RrrcYIp
Xw4nNDgCTpBnXXFLvec0J9zh9DjhLkcnCNQFh5sT/s68BnLC0QKR74MS+3h8
nxx4DnuxEfTnzb8WeyctPK7a704uJwiCIAiCIAiCIAji9IFhnteDT9a6X8Ff
ny7JJ220L7Qf1dXfRPmV//ghzwtWPUdP+zrDp6n62hi/K118gN05hH/m0OMk
PxWMHANEcrgCa2DmDm1dz2NCPldA3lvxz+nxywQ7a9DXhcyK9Yjs1/LsHQJ5
YHDEOpDg53c8X9nrM2Fta9e493/eEjtSOimMtU/K+0DvG/XtyxbD+FFj7gnD
zh7XIWUdjedLZPhmEYm1yNqastQyh9Z4fiAfMvz3YjfVlDV8asCQE0a2b+z/
c+GEB9tL7Fv1daqc0Hj0X2E5TqhgnVEfsbMG8zjBlD2XE9T4SXEP7JcT1HwK
Y+1vkcYJJY6DE5z7zNE+hRM6rMsJrHe6AvTenvH8NQJnHexpDpvU98MCY+m9
82XsN/dXc8VexiMIgiAIgiAIgiAIYr8w/YUeX1phXzPuXYhvrk4cS/sZFq1p
JX6mf4KjnqNH5iR/psvvKtfeu8d3zbHgyaXJmMODTzbmDw08X8n4lxjn7pWY
mM/lGauB4UdHYm00Q59Xrn4myHGFQG4wjNwgRM6ajNhrZa7RBDkLDPNYr6Qv
VRtTxY3svMomY0+1obYY1oH8Cvq9finXG6t9nWN7vn4SbMDpc4dRk1ts9DXL
Zh7XVH7fZOiqTm37lIHDcEKyzSX2q+yInPD0OMGc1ylywtv3eBduTkiN/bch
3eM4OaHzyYwxJ7wBI4cf5ISjg7EHp777Zr0HFprDJfYUh4XxbUnufltg7OD7
giAIgiAIgiAIgiCI0waGeV6jb91N35t1PcsnjQnnxSb2q/O8fgGrnqOnfZMp
c2td22odYZhXdpPqn/WM0xnyJeWhBXSsdPEaZuZzedZ8i3GOZrK8sHJWDZnn
yqbW4hrD3OBvYhdffXOqL9KQ9xLz8r3Uun4L4/wr7WO065AmjQMrjhBoV8s8
VGzhdXhytFL7c9jFjcwt5fzWQQzFMf6t6KCUPs39MYjVIcN/L/3wjMO4nlqQ
E0Iyt47nfZyQ1K9nnM7ofy4n/DeszwmFXKtz5MW6nFDBzQlbBM6mTpR3SU4w
Y8rHxgkXKf05nrlBIu8ijROuYHECHN+ogJxwUBj7N9leLLtpU+1m5Xm0qXY0
cxy9Vza2Le9prbpD2wxBEARBEARBEARBEOsAwzyvkc8QAT8uAnXbHG2v1/Bp
iPy/we68xKiv2Jhvkdj/jemPhOe83fs/L4ru3k+RwzFOJ36YZqrfC33e02ci
yxuYkc/l6H8U4zP0mZWjIfNsjd+1v7BaQlZjrZQ+PhZ9/Eck1Ij09KXl03lN
WXKK7lRu4L/CqL9o3B/tM3hqlHr636TsRZHjPxv24cuHVOtTT5ijtt+ojsV2
BjEOa+1uZV/dyLUWfUyyRp/DV6XM3Rgzqe1TBRI5wWU7mMYJi57tiXxO0HGn
IrH/HE5QMszlhMl5dDgMJ2h9zuUErddqCVmNPo+NE9Qvrzjsp8Y8Tnh8RybI
kcoJWd+3YcgJUXuAI+7tsIcUTrhKmbu0LVPbEkn61Pu/nPBsgYw64CvP4woT
vw+ZMFZj2HTSvl1oXB1rPtj52gRBEARBEARBEARBrAvLf/b4s/we8sVpn15K
XkcjfpTFznFDn2Ol/bhfyp1vQtsHP5Y1ptNXIj4b5bOq0J+rmDRf45kKeXGI
AuOajSq3Sfn6v7ukD8nw6TXGtQsZM7t2nutZ1xgLyF1Kn/9VdGLmgW1yfJTo
4zAvIyNfAsPzZ1Vtx8rT7kEm43cVp0mtS5mUMyJzuEWfg9y55DHWYkrMSY+R
4u+vfG1lrR7Wy1rLwpwvMvz38uzdUvZ1jsD+OCE7RpiwtqpfzQmpNakHc0wY
w+QEr/8cx8kJk3KIPWOdMieoH46BE9TYIU5QNkNO6O/ZnPD47Qamc8IFyAmL
AP33IPWEZ/VaLlobZsY81D5YPS5q2Ht2re0Fxq5T9wlBEARBEARBEARBEKcH
DPO8riwfhNePgz5vK+gHxArnuEmf2nfaYFc/9d3EZ6tMH63yWTbG7wNfrNW2
Q3/2oC1jTE/q2VdT/KOI1GyU8bbG+jUpc42MqW3DVY+wXcD+zDMuCyyU/2H4
EytYddwQqRsc6LMR+VStzypBb53YjbYNrw3CqqmKPvcySQ+Rvi8M2S+NsV6y
ZbTsPTjHiCy3Kc/LXunseaL3599Z+m+M51pYMbmE8e5S2z41YMgJjz8b63Eq
nPCbxGe9e8bTfp+c8DdYhhM22B8nqLHaBezP5AQt9zlwQin932AaJ1wg4xzm
SN+H4IS7lOfFfjt7vdHH5e4s/euz12v0nHCXIVsyzxJBPW4x4SztHNvY0zzq
Oe+xjHH0O0jXTK/2Ma6MVeS8SwiCIAiCIAiCIAiCOD1gmOfVmb4XePy4CORm
WO0K8Ss2S/nVYOVRoa/xGM39xYRzzsx5+vyRplweHWzhqalnPPtzn2xw53Nt
PG0fc2GMOU/KxXCsd2VdH3wvMKN/5Wezz7icHSMy1tu26ZFvEu66wapt6elb
3X/uWnNjHVqX3uR+F+h7YGciU3IunWu9DTsY6BPGGc8Yxqa0/TjtOkOWEo4Y
kadt41pv6eNP9/iKta6l9fNdpo6c+n/qwH44YXYczxq7w5gTUmxOx5L2zQkN
9ssJZoxTvwsm59ghzgnFzDWt4eaEresdkdGvfl+Y+cX74oQC0zlB2/hUTmht
W8N0TrjyzTFRljJk+1bbxrXe0scfQU44Kuh9m7s/DTs7Cv2jj4sudjaFZxzX
+0jt872cxex6LxAEQRAEQRAEQRAEcT7AMM9L+V9ax73Cekb7kstI3zoOucg5
biJPa/tG5Fpq7u9gjgntlc9V1+MafKPvaKvkqCLy37h8O9j5+T/HMM6i2m/g
yecKjDPy5xhr4ZUv0F8DR1wHE2LpkXGcMWrf+An9ad9245E7Zr9XCOSBGf1/
Yq3bhch8B0eNX8sWvTkyMHJokOlvxzhn81Lm0TjaFlZbLf+tlh+BuESiPN7x
PfbrisWo+qk3xu81MKyVh4zz5aU9690FbAdWDA7LcULUDjJk1etuc0Jq7u+D
7WSMWWHICd53E9I4YSS/3FP2Tk44H07YII0TvLaI5TlhpAu5VyCNEyavM/I4
4XHejj1ivp+uQU44GAwby92XDRJrQ+9xLsrmVj+DWmyuMX6vcvb1zLH1tzrM
eScIgiAIgiAIgiCIM4X4HrQ/79H/afxeWe2TfMbIOPc1QcYCnlwp5OX+Fsg8
5wyG/x6BHFrt90rsU+umFX2qmoG/u8ffITGfK9D3Ffy5aHrtysS+LtDnWo10
JveaBW3RG0tBf65sji5an3ww/MQZNniNcR7YV7CL0fxK2tXo4wJBOzP2mLMd
rFgKMmOwsmcaJORawcj3stajlXFfw8zzCNHHRlqXfTraNdb1N7A7W7U2rnWy
Z7SubjLsuw7p5KkC58MJKbm/BfI5Yav7RpgTtF6ivnWM85f3zQlJ/SGNE7LP
fQ2M5+Usw55yOcEpHySPO9MGUzhBc9cxcYLWq9N2jbb23jo2TlAy/jPICQcH
+m8GqgnrfxNa/wPMpcQe4qLov+Uxc++7HB3OHH9vYxEEQRAEQRAEQRAEsX9g
mOfVYPgN+siPiz7no470q/2d5Uz5LhCplYi83F/VNvl7fhh1V7WfJtB25CtN
nJv6RcUqPkNGPlegT7U+Xn840s9oDfplETjzdOaae/tFRvwInjMjrTbqfvL5
mdazV+jzwD6RtfviHu/k2L297zzj3IotbkJtPfb7ORLq6cHK93LIoOKuf4Cc
tTljffW7xhk/strdYngmotov38KwTl6J/h2m7n+YuqbSfvX8nlMC1ueEWbl1
GHPCyIaQl/u7zbEBDDlBybEGJ3yK5TmhCrSpcLqcoN+P3vlZ63FunFCH2nrW
8Klxwgepayq2lqxPYrA2D98/ZDxzicT87wPMJ/jOXGgM/d4tjGvKdrs9zVHt
jfbQuiYIgiAIgiAIgiAIYj2gz/MqTT+E4Zcwv0l35l84+myQcd5eoJ8KRj6U
p43O80rJ/S3tOSU8U2OYP1l42hVIzCHDuGbj79D7+uuZOkvy56CPxfjOoNS5
Qc61Ru8XLle0S6cfMSaboYcuttZTbMIjz1vY1SG8Q0KNSI8uQzGJjegk2tbx
nIo//DCxfROyQZnX7+CJu2XqbYNIzAlWXqms6wZWfUFtL9i9o74I2YZj/ds1
bPhUoW3A0H0h13XMaSonROOLCbJV6Dmh9LTRnJCS+5u9/3G+nFBF5nMMnOAb
+9g4Qelin5xwlyqv6GFJTngLx8EJ1xhywhbkhL1B1j9Zb0g4k+SAc1E2lXw2
zMQxtB3bZ/632EM+rvGOOZrztgmCIAiCIAiCIAiCWBYY5ki02g/j8+OKP60N
9Kf7CebXJMrVIqG2HPJyf7tcv4o886L87Y0nIJKDA3/NxtfFd/oyArWBE2XN
8ufAkwuFPs4Tmu/Nmn47RGpIylxvRI+2/FWmHrLy/ywZGxj1HO/xK+xyq/4S
gRqRHjsO6Vvn8F0jwT+IYT6VzrGJ2j4icQe5/xF2537e6nnPWGe9Vl7ZZF/c
yTzUz62hs40h1538/d17fJA4/oNu1rLjU4O5/jheTvDaimEXqbm/XWjfBZ5Z
kxPUec8mJ+h5nwInrJZLjzgn6G8RluIE79pFZNxgOU6oI2N1SOQEa32X5gT1
w7FzwoeJ45MTpq9Z6jcI0TU+4Fz0e6ZceYzRv6GxpzOnZaxJ7ziCIAiCIAiC
IAiCIE4H2r8ovpjOur6x2mq/YcgH6PS9ZshTwFPP0dNe53ml5P6qeWZ9z4++
ZqKaU7Ceoe0vwjifS/WjfL9XRht1X/mF37f60r4xtQ5FhrzZcUxY8ZsUv9wU
XU60Bx1z8NncKLYEwy+caXdZeRDw1HMU/X1syVTAXSPStJcSEZ8zdn5p9cPX
Q/qHo55eTJfW801o/8k8agzrQHrtJWOdQ7ElbZdfRe/r1+tWGnap5FGxuT8g
0X+rdLq2LZ8K0Of+VjByJXEknBDrB3m5v9ehfeR5RnOCkmlNTvi51Ze2f7UO
Oe+pbB+/XlfH2FXgmTpXlxPtgZwwHPNcOaEEOeEkYNhgzjcmWXtrz/Npct+Z
E8Zw/p8CkW8+Fhxf76/V48wEQRAEQRAEQRAEca4Qf1tp4Kh8Hcb//5/ByC2C
da6qXLsO+QqQcPZigq5q3UeqTwKJub+Y+D2/+Gj+NuYnET9kC38+V+F4Rvte
f+7ykxo6uZM+VzmzEsb5rSl+OWOt92LPSIuzaLn/HBNzSpB+Rmop++XGZ09y
/zk8/ngMa0TqeIGyofdjshv707kGCNTTQ6JvEfF8rwcdWPPp9B6YuM7Rd4jM
XdWbvDOuVVpW9Pv8L+Xv6Hoa67W6PeP4OUGvu80J1zg8JxSJzykbjOb+Yjon
KFm+E5q7YZc3WI8TmtD40r6MyRnQTS4nZMVXZ9ppE9vbOGJOcK0H1ueEG9de
xPFzQueS25q7zQmPcW30OdLkhPXkT9pf0naLSI3nA8+nDNn5QmPUcJxDH9tj
C8ugxs8694IgCIIgCIIgCIIgnjLE31Sjz3u4i0C1a+DxA+9J5lZkrtHnToz8
uIicm4iE3KCIHJXhJ8zJtVExitTc3ybkQ/Q8cyG6UHk7oTOIlfyqRuPncORz
eZ7TsZG/QTy/p0CfLxY7e3OSP0d0qebwQcgeYZw3uUc7TRrz/s/XxB7+duY4
obVuU2zdsGmnz93R7zX6PLBPEKkRKf2+g3E+ZolA7jzy6pE2vn7kfmfrARPi
dY41uBE9++IMDaxalzByaQzd3yExvocZMYpAn6fICQ2OgxMmxY6Ql/vbIPJd
icc+UzlBzX8KJ7yKPE6oA+3mcoLq/8OQPeJpcILTjnF8nPCPdt+GXTntBOQE
37htSrvMuZQ4MU5I1FPQnlPX8RiA9eualPB/pxHcXwvK8PA916F1TRAEQRAE
QRAEQRDHDvTnOMZ8OCnoxL9X7El27YN4AX0NNe2fqY122vdfevrROWBT6hKW
hh9syvPq2ZTcXz3XLN3K3JTv2xVjM/O5VE7Pv6T2j/4b/woZZyRiWBu4dMg6
yZ9jrPsPsavr6pVH5t3uw0Zz1tCYw3MsE3e6sPrewKjnmNiX6udlZNTElLFU
HP7bCNSIFBtSMYFPjWuVyBice+oaIp7vVbn6QV93+DZHX9bzwRwh7M7x/L71
zOO6Y/du+CJjrkre2fErnDYn6PV+AYZ/Gm5O8MZQMI8TLjHj7Fik5/7qOWTp
Fj0nNNb1EofnhCuHrN1EWzglTvB9g3DsnNAkPqM54XWcBieM/h2CZTihQZgT
fosxJzzuJeRzgmpXL2CnFU6UExJ1dBNbT8w8C2KP85n8zkzsX++fynPvbu21
xR5qGxMEQRAEQRAEQRDEKQPDMymX8Oe40K79f3P0ub/KL7WRawO/mOGzqTx9
aH9e1nl1yKzn6OnjGdJzf9spfjzs/Pe/xC4eon14t7DyueR6Uv/ofdIbWDWX
M+SqYNQGnuPPsf1yCMT7kVErcCWbVbbiO09Z6ULn+szyNZr2Ak89x4x16hDw
+Xme2xjrUcBTI1Ku/w67eEKduhdz7AXxfK9QHLDEvFhe45sTdjGdd801hvGN
gPysYsT/U8pcRX/eeSbos0ZaPtcxc0KDnhO0/e2LE2bFh6QPzQkpub/tlPXG
upzQYBlOuMR8Tugw5ARnPB89JxRr2mZAVmUrT4ETapwHJ8z9vmPjmxPinKDG
JicsBPTvnOAeMNplr/ee57NqXBTGv/099xvsIT6+r3EIgiAIgiAIgiAI4hSB
9eO+Lv9OscI8tE/sRfQ10h79ZNJG507UjucvRLbod/+O57QOmzlzQ3rur/I9
dRP6/2vsYgk/lbVQvtZrW2b03+yn5v885v1gog/U0qX6RZ35+MaEPrTv/tq6
rv11l9Z4zhjAPgHH2Xzo84LM/KxCrm1zbFSeVX7iT7Gru6j6KGfI24k+vTEU
xzPapgrHPbVmG/R5YArK3/8OMmJuqfsC8XyvGhFfIvqYR5urS3h8x9LXS7b9
wohXYneW+feQUMNT9Bps43lOx4L2yQmL14c01jnGCaP9Z9xrkckJhg0txQkp
ub/aHnPl/F9lDd7F8XOCeh9M4QS95uSEYX+Xotc1OCG63sjnhD/guDnhCstz
glrXl237xZATVJ3g5yAnzAIiZ0A4dHHQd0TinJSdZNUDyOz/4Z3kuXfh298L
y1DigN/rEARBEARBEARBEMSxQnwdN3v059ioF55PK/6vG/HPaD9uJfcf85Ec
zxaY4EPFjBiQo69nSMj9RaSeq2NeFfp8rj/d4xexZ2HkaiaM0YjuLjAxLu3o
88/u8Xvs6lEmn1+LSE6G4be7kN+3qfNcE+j9jvps2hqeWA4mxKTQ13NU50T+
aAF5H9cZjhhKxFbqSBuVg/iB8Z54zANLlO0mxWZCsiDxzELM+PYDju8U0Neo
HcRQYMQo7/GKrKOOaXr1AjlHN9MOz4kTGow5oXPotfHYwBROmBwDcvSlOSFW
D/apcIL6YWlO0PdNTlgtXpIh9yAWhdPiBP1uOyZOCI4RkwV59YRrTOOEEomc
YM4L5IQl9pv3OyCHjXQptn1oGDaTbIOZ/VeY+c3EQnK0+7ITgiAIgiAIgiAI
gjgVoM+nOTRulvCjGH4zlSfRybWBH1d+bx3Pah9Jkzleixl5TY4+VX8pub+1
ax6WbBv0Pjudz/XNe/wx5gtCHzcPtpO2ehztO19EH+hj+SU8tYEdzzRI8Dmj
j018DRPy5daCrFGHPtcnZR7BdhjXc3yGhc4CxDCOVqXYjN6ngfva16zmpnJc
lU/7JQzzwLawakS6xoitK+L5XkqGOlEXhbEedapNYXxOea3HlHncof8m4FJ+
/9Y93kLv+28jY9wlylLj8HywJCfo9Q1xglozV13PKZygnmmxPCek5P4G7QDL
cUJKPO+YOGGTIjfICWtyQkxmtZ65nPAXOBwn5NS81+tRp9oUxueUq2drYx77
5IRrHJ4PFuOEyFyD332gjw8nf2NxaGDFuKhhe6E65UmcMVMOte+7Q+uaIAiC
IAiCIAiCII4F8n/y7RH4c0zM9j2Kn+MV3RfGOT2Ny2+DSG6QY5wCM+s5evpV
PtiU3N9CdFZY1yp4ajZKG6WTz+/xVoIsyufXJrTTurs0fu8W0IXOn7twjNUC
o3NJtU3f2PcCY7yJ3VmSs+xuaaCPzyT5zBA4hxCeeo5yPTn/J7L+nfG7c495
5lg5ruuYW23Y7MemLSJQI9LqS8nSJMyhgT/fS8uTk/tZIjMGiN6vrJ57yZqv
vcdq7M7pfY5hXMhrx6In7xzQxykOzQM2J8w6W1PmZHLCFdbhhElxnoR+NSfE
cn8LWO8M5HHCDxNkqXB6nKDXt0gc43U8bU5YYp0G6w3rW4DAc61rv6F/B28M
mz01Tsj+LgTrc8JtaF/gTDkhMN86ZKcYfoNwKrHfCit9y4I+tuvlJiR8h7Cg
HF5bJwiCIAiCIAiCIIinBMOndGg/jg/VxHmV4gNQuUwt+hyOUu5XcPjskFnD
CwvVc/T0reROyf1VPs4N/PlcI7nQnw36zyk6RsI5onCc74gF8rwMWUf9YFgH
ciO/m37SHJ/s2/f4EEdw9rMhk/IxKt/256k2Kc9p+67k91J0eAOPX0zuJ5+h
GrGVyvhd7Y1gbBmOmJBcG70DsKtr+EufrBjXiNxKX1+y7dPzfOF6Nxj32yk2
jd732sZkMGxbya78+G9Z92oM8ylvxHZLkV3FONtA323ADs6VE/S6voIwJxTW
c8fGCSm5v/vihGA7kBMWB3ac8BH2wwnq3mqcEFoL7JcTnPM3ni+wDifobxja
mAyGbYc4oQM5YYk9pnXmy2MdfINwCkBGPYCJ/Sv7aSLjrx6XhVEDmyAIgiAI
giAIgiCeOk7ApzPZtyO+iI08X+jf5V7l8u0g8axgaZvlt5sg/zNEcn9lXsqn
p2rifgRHPlfgWTXX7yNwxqI910gb7Q+rjGtV7LlEXdQxf47oQvlFP7nHb0N+
qMAYN+h9ZPXSazph3o/5FLDyFBOf17HjD+y18bQvc8fw9DNYdwTqqVrPdcCg
rqVzL4o+vp+yVzHOA1O6eD+2ZxHO95ps1xjXBo7qGrscxH+154phPdVC5qfW
sMXuuxevr1X0MbIHnDcnKH2dAyeE8qvUvOZwwltIOxP31DjhX0BO0GtycE6Q
a1M5oXS005xwF9urOH5OKBKeISesFANGH+t39gfPNwjHDqyYe4uEnH4knhex
wNrdpewhgiAIgiAIgiAIgjh3nJBPRyMnz6UU/81z8XnU6H1i2iddWrpoY/4L
aXuJhes5esZRY4xyfzHO5/rsHq/l+DvQ+42VP7BJlCUWcxj5y5bQkdF3avzl
U+zy1zokxmBg1SyDI26xb8ARM0WkFp3jeR3rUv7tN2K2bYwxO6fFXntjPt6+
ZZ+q8RsEavuh9/GpOFfWmdViIyr+8SsEakQinu+VbF+BOTQwzraOtL/z7LFW
24jR5gX52ZsHA6N+pHX9lDgheX8a6/lc9HIta2hygnkO8rFywij3F25O+N9t
m07YF+fICUo358wJDfbDCVGbSOhnsPau+TieqdFzQudbc+nrGDhhcm4lMuuI
IMwJW6ON+g6EnJC3x5z/TkFi7fBjA1aMi6LnjmDfc/dHoiyty4YJgiAIgiAI
giAI4ikCx1fHK4Zkn4v4ABp55svy/CXc+UiF+HuUzy+lHmaSb27m2jyD5P4i
ULMRE2q2os8f0j6buWfhOn24WC7PK8n3jPHZlvp3ZQtFRB9Kp9fWde3/Lw+0
P5XcW+uaU1bHs9cw6jkiL5ZV6P0yU/7R+rv2n3X/mYz9ToKcW23/yPT3oc/T
fAGBGpEI53upd0C7wDqX6GOHXt+oyPcSrPp65v6Tv5/LfGr5efCti2Ujtn01
OPx7fi1OaHAenHANckJj9+1pV4GcoNvN5YTZMS/X+iOea6ns/o/I54Ssb5gM
25/DCeq5doF1LpHwPYnI+xcIc4LqJ5UTKod9NTj8e34VTvDotHGtIYa1w08q
9ivyt7l7IrFfzZ+x2jDKtrqV56j/XXcStZgJgiAIgiAIgiAIYk2In+rQfpop
SPFVluKPeE98Dg/xIfQ+sdpoq30XTaTPWrfDHs4VEzlvEajZiIm1tLQfSOsm
oX0T0g88+TtYJs9Lr2VszRu4z269gFUH0vGsut56+q1c/e5h/RufrRs6Gdkh
IvUcfXpytKt9Osmcx8gG4PEXynUl97ux/Sjtta+vmLEPakefG/Q1It/Ersbm
C47n9f4brcNEXVUI1AaW6yUc7yxDlp/c40X5WceKG9daSl+t8fupcoLSWWr8
yscJG6PtMXPCF1iPExqcFydsQE7Q9zqcBie4rmtOeC2h73PmBNfatYhzgtKd
5oKX5e/vuNYSY06ocPj3+yqcEND36N2CibXDjwVY6Ax3j70P/k8VaKvWpFpx
jhdrj0EQBEEQBEEQBEEQpwL0vrFD+2imIvgNu/hoWvR5G63hp2iMdtrXUwX6
0v5E1Ue58pooeZRP/2OZ5/+GcD5gg4Q4mfXMtfaNyZy8c5f2FyJLEZBh5JPG
cnlequ/QGaNmToZTRkO/W4zzZK4Q8deiz5vai98POz97FxpP7PrG+L2Q9Qza
szUfrz2j96XNOqvPZwewYijo/dc1IrmFVj9KxtK06wzZiohtF9LvL6Sdfp+U
RpvsPRiRScemdFzxwrjXos9BG/mjRYdfiJ2X0sdfYRfzHK231rP5Mw7/bl+L
E5Quv2us4Q3cnKDfB949hP1xgpKvEtk1J/wHxDkh6Sxg4xmTEx5iyglyed+Z
OH1OKEPzM3R2bJyg2szlhJBtrc0Jeu/ZnLDB8XHCezgcJxTGvVavB5bjhDvj
57PlBIeeL+U5+3uRS7GjxdZ038BKcVEk1iNBQq34BWRRe6Q9tK4JgiAIgiAI
giAI4hgg/qFD+2bmovTMrcSu1pmC9mkWEH+w0S7o78Qe6jliXLNxK3K9BUeN
R4d8WXkmxjOX6P2csRyq2uffMWR35SPN1pvoogvcz87JEJ3fiHw6TzLqz0Yg
92phm6hg+MAjbZU8r6Cv51hn6EGP410j9LlHs+bsswVDhr8S+SvjnlrTYBzK
sMFGft4i/3uIjc++LZtRcr6EYR7YVmT/eGm7gKM2sIxdG210vO4xzoVdXtcX
ssc36L+FeYBjnDtD34d+p6/FCUqXKZyg7fGQnKDGqLF/TiiRxwkjWzJsdE1O
UGvUBe6TE9blBP3tw9qc8HUsxwm530NsfPZttClwOpzQiC7JCX7d6m9a7PPe
r1zXTwlYKS6KjO8rkPCt6QJ7I+kdSRAEQRAEQRAEQRDnDpzueW42nGdUos/7
fU18E2q+DQw/LQLnHWLFeo4I1Gw02jyD1HiM9KXmWWeOf4Peb6jm1iQ8o2Qs
PXbk06G6183UlfbHjcaW+7NyMkTG39/jQyTGS2Td2jX2pfRfim2n1jP9a2n/
/dQ5OHT4kF+1pJ3l2IPYpKrt+GXrelK+CIy8MMNmkvPTYnbm0wP6PLCtrMEH
sPLAFrSJVmz9O661MN5Xl6K3n6Cvcav0+w308c/Selbd/19w+Pf5EvDZWCPz
fEP0eI3j4QTVd2X034GcMGmv4jw54RL5nKBsZS4neHU4xc5y7AG7bx0UJ7xo
XS9TbAj744QGp8sJ6r7ig49t+fAEOMFj0411rUJC7vwxw9gLa9hg6jcpuu1q
38nInlu8tjFBEARBEARBEARBnCLEZ3Ron8xSqKy5KT/DJ9j5td4Un4D24Sg/
yAX6+LArP6nGwvUc0edc2Plczv5FvlieV4X8cw3V3Mxcty7mE4LHRwvrnEaP
jVWpsnn6UDrz5R1rf9LknAz0Zzi+IuuyiekTjvNiF9yX2u8e1RuG9Ry/kWsL
Vl8Fen+wa09ouZz2mjHOyCZkTHX97+H4ngOJZ43CyC0xbDNnb1y77Nxjc77a
m7/EOA+smroujjFUX7/CLjbli6/dij236N85Xxb7/nv5vXXo7pc4/Lt8LU4o
EOcEnS+3T06oQU7I1dvanKDmRk7oOWHr2RN74wR7/FQ7gpsTkuX12blDT1M4
YZbeLBlzOKEWWZ40Jzj0pLnSrLXQ4AzySbHwWeSW3Uf3oWFP9YpzLH37kCAI
giAIgiAIgiCeGnA+ub8anTU/5WfosMuJUP6Al9HnQBTw+DSxYD1HJORzBZ59
hkieFybU4DP8I4U534TnWtvHg4hPGsvkeemcp8LT/6ycDFg5EfDUgYzov15w
X14kjl3AUc9Rrk3OfUD8uwhly1lnaIbsAn3M5AZ9jtYohiLPtIl9m3GsTcpz
Vh83CfpvfesOIy6BcR6Y6rvGTF8ydmfTdnDUBpb7al8/1Ik11k2Nrfz/b2MX
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
izAn1CAnLDUvckKG7Xls0cUJN+i/h2hS7dFYj6B+0ef5voQ+x5eccCacsE/E
9ktiH9dIOFNiX/J4+t3Ye5UgCIIgCIIgCIIgiGnALufo0P6YJbBW7ddnmFEH
0upnUOMRfR7Y63Lv55AakZ4+svw20ncLj08amblX8OQdSP+NjOHz014hI6cs
UZ4SC507h4R6jo5nFsuhCMzvzqdTj33cYmJtYFi1F7HOuax1aK+ijxeVqfbn
6ceZy2XMsRL9JvVn6Ne5/9Dnc7Uy7odw1GyEu+ajapcavyvhqOeIBF+/tLtL
aENOCOvnIJzgsbspnHADPyfk5kCq/px7COSENWzvEofhhEZ+3yy9rxA4N1/u
1zhtTtjKuL9GHick2RHICTlIXttjBGb+mwyJtasz7X+yPJ4+9X4sDq1vgiAI
giAIgiAIgjgX4Dzqe5Ur62hWHUiEazxuxa+jczZ0HthW/CuFIOs7e+mnkrFd
ZyyqsZqM/jpYuRNIOKfR9+zM9dB5B7PquCGxnqPjuSY254XmWSHDX4eJtYGN
cez1VXOsF55T0BYQPi822Y7gyWNEH0MpkXDmuvVsiz4+foVxPpeS/QXfmsGo
+eiw5SIwbiH937rWAwl1HA39Re0c5IQUW1ibExqE6wYXyOeEFufPCbP6BDnB
Hsde37U4wXteNfbDCQ//nsA0Tmjk51PkhJsUOwc54aDAzLPy0fNF0l5J7LNb
WqdY4UwIgiAIgiAIgiAIgnjqMPwCh/bNTEXyWZUL6Cq7DiQceV7GvRKOHCgM
a0Sq+7+7x1tIr/Go1/Q1eHzSyIgdwJFng53PVPl/msizNZbPEVDxkcnnwyGj
nqPjWZ1Ttaqf39JflzMeMmoDG/MZ2QIy880SZXPavGPcx1zkkB0m9OGy/Uru
fStmv5ZOv3aP34tObuDI5zLWrPX0o9altq41LjkwrOfY+HSGhDqOxtijdfbM
lZyQZheH5IR34MkNDqzp2pwwyivO2R8z1oGcEJ9fizxOGP17A6fNCYVvHPSc
8NepdgRywilhb5ywBlw2kvl89L2c2Z/aL0ufBfCwl0PvAYIgCIIgCIIgCIIg
pgE7f9+h/TNTsHq+jUdfyheTVAcS4TwvJX/Q14ydr++n8OQGe57ZoM9h8vk6
k303sHJs0Ptr68hzBRauD4beT5u97sis5xgYezHfd+K4zRRbR6QOJCL1FQ37
W3SfwcijDbR5jCVhmBs1sMWEcZz7S/bPx2ILPh+6K5/rb+Co2eiwM/WMK36i
9445p8JxrYJRzzFBV7eJdpQao6xw+Pf7FHRL2mqmTR+SE1oclhN0fK6OPKdt
vVxQ95W9fzKeJSeM+w3OR+xsaU5Q/6Y5NCeotVybE0ZyYh1OeHg+0Y7qRN1V
OPz7/WQ4YcG9cTVnDrLGS8dqk/dcYn/efzMRBEEQBEEQBEEQBLEMxEdwaD9N
Dvbuc7X09QyROpAI53ldx3wy6H3ql8Y1Ow9M+Uw2GNZ++/wen/j0AzkbOnGe
aqzO+v0u5Xl4clhm6LzAxNgBJtRzdKzF3ZSxF5q7kntSfhusOpBiQy0SffhI
iNdOWMe72DrAcZasbY+R569CbY099DVDrmv0NRud+VzyXHAtEPDZwp3v1crY
JRz1HBPmepfQprbHjbRvcPj3/FPjhKBtw5F/CXICOSH/2WPlhFhc8xg4YWPL
Kc+1KWO79As/J9QgJ5wsJyywL7zfDSQ+X2H5OuvJ+y2jzzq2fwiCIAiCIAiC
IAiCmA/0uUSngKP4ThyBOpDw5Hmhr+9WBvrVfp9YLtglhnlg/4/8/Wee9mWO
78b0PWHn90zypyHhTMcJulb6zPI5Y2I9R4eOb6f64Baau/Z7NzOe34htfIDd
ObCptSCLmL1OkCfZ3wcrTxl5+V5d6F0h++WPGNdsTMnliu1NZa+1xybt3K6/
wC4+F82h9Ix1F1tPmVdWvAjkhCm2fWyc8A7inBDNFbT2VCU/1yAnHMrOluaE
N1LXBufNCf/1Hn9Czwkq9lshXI93DU74CuZxwm1IZmmj5nXOnJBkE8eKnD3h
eHaV71PEhhfTK2bWNiYIgiAIgiAIgiAIIh3o/YmH9tmcnE8HVh1IhPO8NjGf
m7RpM2X4MnaxrH+CPw9M+TLrxP4q6UPZRSO2kZRLIW2Txknsr0bGmZOYUc/R
sSe6JecyU5bJ8xF/oDrf8n1kxi6wcB6JMZekmB2MOBPy8r2uzX2EcT7X27JP
20z5S0T86+hjRKM26HO7Loy5KV//yxP1qforE2TOnSc5YbqNnwonNMjkBOO5
HE5oU8dJ7K8GOWEpTvgA+ZxwheU5oUM+J5TI44QKaZzwf2bKXyJ+draOyRWO
ey3ICWfNCZl6LmL2FFmjbs57LmAv3cJ9Kjs96frMBEEQBEEQBEEQBHFKOAHf
TnVoHUX0p3wZynf4cN6m4743JmS0yfaryroNatfJWBtjPd+Uv19I7FP5j16G
dd5iwnPVkj4iOM48jeihlvabHB0G9kJzaLty2E+V+VxlPodIHUhPH8o/Pum8
0SXsBMY5s0jM95I1/Owe38Y4n0vvk29i52evM+VXdhY7w90Z1xP9q3fEe/LO
0HHtdqIu29g6atuZ0Dc5YZ6dq7WJcYL6oQj0oTnB28azbi5OqEFOmDouOWHY
x7lxQiFtFCf8Gvm55Q97K9LmmDihADnhKIGEmtiRtW9WkEn1Wy/YX4mFz4Qg
CIIgCIIgCIIgCCIO9Pmeh/bhmLiN+bKOBfd//gdDbuUveWbcC/pPkJkXaTyj
/fGNp43y8ylf/3vw5IFZ7at7/DzUZ0T+RdbKmJtXZ5bMt5hYz9HRn/K/tYe2
J4dcJRJjH9L+2rcmsOpAJq5tteBcsvyJ6GMdSt7O06bAMJ/rQ+zOwB3N32iv
4r8f5c4tZpuu/YC+nuNv7/EdR9sp+T6bxD1yN3GdyAnz7PwYOUG1UZzwLk6I
E6RPcsJQrhLTOGG01sjnBGU31YJzCe4HR3vNCcqWO0+bAqfDCVtHW3JCOicc
RR2AmXugxMS4KPpvPheNqc6RKdDnou8OgiAIgiAIgiAIgiDygD5n5tBQvozi
0PrI0Jvy46kzPwd1ILHL4epC/hPs/JPNhPG2CNQztP2I4ssxc4PV89fo81+U
n1/lotSZsqg+2wV1Ge0PC9RzdPTZrOFDW1AvFRL8wjKPYDsM60DWEfvUPsBi
oXlk94edv1+tzSfoc9euZA4drHwu9PXlQvNSe+jr0i7ZhtDHHkL6vdbvMGM9
ajj8qTKHZoIe65S9OnftZC6H5gPNCdkxkUMB8zkht0Zni54TfPFcmxMuMcwN
XooTVJ/tgrokJ7jlq2LvImMex8wJl7n9YcgJL8u1pTgh99sLLb/X7mRfdRhz
wosYc4K63kzQY52yV2HUUZ64XuSEhYGJZzejPydicT0go05Ahn22h9Y1QRAE
QRAEQRAEQTx1GH61Q/l06kPrIFNfz2DVeERfB/JP93gt8Kz2Ceac+9zI+ryE
wLmJCJwjiJ0PUt3foq85p278TebcC3muWEiXJQJ+YCxUz9GzDovmOaxka7XP
XrDz37fIr4/ZIpLji+Vj/MqGm8xnXsAujvYn9L5fJVfpab8NvUvE/m+QGENx
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
4cnON6Gu1IQrIWWMGene9vJXLJ8aM83EPAbjkhBCCCGEEEIIIeRIYOjnpX1J
XHHogvZmjLB9i83wI7GxPFj3lN2oTchjYP807ik7szr7U50B+qtmXQzbafb5
luj3FBe1aaGPzbdZ3DEk+oGhPyf1X2JFf67EOmgb5NL2/ug88Tx3Y7Sf+vcH
cs28XvvGQWgOWP1jz7FbefYPRs7d4N6Gb57A8qmB4e8Fx76EkS7JnwcJewLE
23ZqXbQ1wdWHeh0Nnfv8mLKGO8YVNcH/nibW7iuMkRLUhNT3ROeJ5zm99j+j
14QCx9CEMpBmCU2I9iGoCbOBxH1R9N8EBNNtVb6EfJrcOUAIIYQQQgghhBCy
F+D28xrYDJG2zzPKJo1TrLpnl50y0X6pbLhdwnu+iJO9/yN53w+RcS6jlVex
hk3LsE8XW48Vq+6qXKYf2P/2wn+R35v4cyWWXe9XLL0/09o29YxntU+XGqcf
wvALThgrXULeLru7spV+Q/ruY5nl1WM0tDY4vwux5zfO/b0aVxvCOOM0Uq7F
93UukR1pwk8PqgmzxMqN1O0omvAXB9CE+kCa8LMr0QTnuQPwxHLN0ISOmjAP
MpeD+6JY6Sx8z7vVvG4n5lHuba0lhBBCCCGEEEIIyQFDP6+BzQQJcU1x8tvI
9nt6+e8DnPYafsFxr4zZLiWdsi9VCelUPX5N3qcu/Cd44kAmttsoW27GO6I2
1I3Hzp3YAP8/adP/Ku36NYyMEblSuRssbO/HxO8DpG3/Rtrz26n5pMwFGbuD
NDI/1Lu+lzvm0J8f7fNDu3GVDcMYj2+/jTa09yVU+VPOnG3Htv81k6kJdSCf
sZpwL+vJLzruURP2rQmlaMJ/oiYM3jGnJvzlATQhOP/h2RukJuwf9N/+FAnt
3WxUxm5qX8MT84AQQgghhBBCCCHkCMDy8zJsa7dWOmXPbQP5jLJJi831b1/4
c8/91rYNet7dJbyrEnuQsvEqX69/AU8cyIS87lewFWufnEV9yTLLVGAYs/E3
X/iRtvFhQozIlevytLRd0hhzyeMEVjxH9Puqc/p7edPgtMfwwwnz2Tsv4PGl
kbHyYPx+s7m61gBpkzqhPK/ny2491o4E/JpQWum20oTHWN+nzAEzHebThKy5
PqJv9qoJ5np/ZE1osY4mZH0TAbcmfA/zasKdL42s25eiCY39LMkHCfuiWMmv
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
987la7O5r4RRBt++yTucx4F8t1VZF24HNXY6bBTPMbOsai7N5osCK3Zf4jPe
+YPzGJH//MIfw/IDk3RqXFWufhhZjwr9GZ2hvUe9llXGtVr6Xp138B30vl5q
z/MjWRPt9eZtDxLXrQm6DfasCR8hURNCZXc8o99bzjQX96AJJagJuh06HEgT
csZuJD81T7Lit2I5TXidYyProed0G+pD+DVBPUtNcLfZ274o+rMCZjsXZ4E5
osubtbZi5HnRhBBCCCGEEEIIOSZiE9raNjOFgY3cqJuy6yrfnm/j5Kfxag+D
5Y+Ek+1f2XoeA3kpe1+HxHiOgfZW76msa8oe84DzmI3an0ud0/fXkTxvkOAr
6ClLPdM40vsG1Rz5jSxDlVqGl/8+/sJfyfj4ylZlXqANCuwknmNGmbWttZkx
v2y/HRjnPgbSfOaFv8fQD6yEZ79gzNy06lKj318MrU9ne1ySXsWw/KGUU6+B
T3D4kem1DdejCZ/X7YBjacKXQU1ILUOVWgZQE3YF9qMJdSTN1ppQeNKFNEGX
09aEeyuPFheuCVbbPBp/t1vPgUh569wywoptTAghhBBCCCGEkMsGfeyoo+P8
Rl9sVx+JveN3cLLPnfk3wXNWsJHHLUbEcwzk9d669gmpg7bJnflzwbE34Mh3
jB1IPTOLzyX6c/Imtc/EMjxgnC+EauvDx4HETuM5ZpZ/Nn8b9LbvHN/HMuUZ
GLZ7nPuBqWf/ASebemGNsSzfM8c71Rxr5B21J81gLUPv13gr/35B2lmV80Pr
eZX2l3DMMz5tGk8bqTr6NOHO146Odm6xnSa0sfeCmqDKQE24DE1oZspPa0KR
8UyJdE2ojPfYmvA5LKwJrjK61jK4NeHbcGuCWns+gwvWBKudCsx8/v2Cc+Pt
/8dkPDfb9z2EEEIIIYQQQgjZP2I72tomMxeFVbd3OPnxKL+ML4qt5Odg2KQR
8A3ChHiOkfb+DZz7cyn+Ag5fECScHYt+D7/IKEeJTDtoIK9ZbbQj399IGUbX
BweOA4mdx3PMqMes/oIw4rpmPNPExjIc5/XKdTUX1VmafyNzUvuB6f28yX2D
SGxgYz628rfin3DyGa3l3ocvfAuWP5xxf+u1fA1N+Bz2oQkP0jfqvXNrQvK+
J3pNmHxOM6gJm4PL0YTCNx9H5rekJnSe8n8F62nCoJ1ATfBqglHPVuqq98Q3
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
9xzdzl9hoXiOE8qkYwMr/y/GgYy31yS/RhnHdUK6R9+8guXvJWX6rKwRz+j9
uf5obDkT61IisJdITZi9vefQhOh+KTVh1T7dsyYwNnBae1ET+vdSE3YC0mO8
16E+I4QQQgghhBBCCFGg91+5FEb5Ps3Ulq/xGY3f1Qt/jmGMyG+/8MuePJSt
MOqTIvk0I8s5+tnE/PVewtNWfTFTPUqsEM9xQvneoY8NrPr03dZl2jPo7f3Z
fZn6LAJ7dTIv/hqnvb8OfcxGNee/ZKRT68Zi/qqI2/rrHazjl6wJ30W+JjQJ
70pK53lWlWHgkzxjO1AT1imfqQmMDRxvL72uj/lmgppwbHa3DiHiL26NKfVH
sXWZCSGEEEIIIYQQsm8MO8Kl0GzYlspmd2/8VnbiyvitbH3KD+wjDGNE3mTY
fu4xMuYXev+rRWxfONlEuy37YaY5sXo8xwnlNWMDf3Hr8uwZ9H572f6HqfMO
hl8OhjEbP5Q8bo30eg0ujGuLnY8ra81z4L4uz6XQbDje1HpbG7/VOKisvqAm
7BwcWxMYGzjcVtXY9TZ13uH4mqDPFth6LT+8JkT6Qa3FdUK6NiUdIYQQQggh
hBBCiAJ9XNOjs6Wf141pr4MnhhcM+z+GMSJ/gtMZjl4bH6b5MOp3LWXnL6Vs
9dZjekIf1tIXm8VznFB+ZVNW50aqWJC736PYsJ2qsWsFIr7zMoY+hdN+3t+i
9+eq9PvgjvnY4HyfUP0eFZsysR7Pkft6Hhwd1f7FRuNsDk1Q4yimCQWmaUK3
1FoHasLW5deawNjA4Xaqxq4VWE8THkLvmaENniP39Tw4OptpQqR99Toe+5bg
LiUdIYQQQgghhBBCiAaX821/vWEbKjvro/G7scuDcIxHFfPtQ/QxIjsYfmBG
uqSYc478KyzrP1JJH1Rbj+cJ5d9VPMcJdWFs4HgbNRjxLYSxVt4Z12x/LpXv
b+F0zu8gf1gxH+WaWhveW3kO9gpnrH8XWgtATZijjefQhL9FmiZkfysAakJq
+6h5XWxdnol1YWzgeBs1mE8TCsykCej3iKkJB9eEhPHXJPZTtXV5CSGEEEII
IYQQcizEVrW1XWYK3cbtp2wyd/J3IWUqrDSty25j2NVK45rtB6aeVTHi/nxE
2UrJYyk7/wMW3EdYuN9K7Die44R6vQNjA8faSJ3n2o54Tvly/cMLX8J5zMYK
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
AOyITACgJhMAAAAAxmvAtR01HYAdkwkA1GQCAAAAwHhVx8MB1HGaztV0AMqQ
CQDUYnj7AcsEAAAAgBuqjtP8XvrSNZ2zylHp8QA4ZDIBgJpMAAAAABivVE/J
dZUS9ZxUUzotPQYALMkEAGoDyIRp6TEAAAAAGLPqmMRybbVd1XTSWqPeyw8w
QDIBgJpMAAAAABi39D77yqLH9/Gnes5x6esE4HoyAYCaTAAAAAAYt+o4yTWY
Lt7rn9aNm5a+JgC2k+rxXWdC6O0CGCWZAAAAADB+ucYzzXWe9J7/J1e8b3+R
6zizyqT03x2AbskEAGqNTJjJBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhuB/
34eRjQ==
    "], {{0, 1080}, {1920, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{563.9999999999991, Automatic},
  ImageSizeRaw->{1920, 1080},
  PlotRange->{{0, 1920}, {0, 1080}}]], "Input",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
eJzs3WecrllRNvpmd9zdvffMAAPDkAZJo6CAr4o5Z8wJARUxYxYxZzHnHDHn
nBVzzjmix4QBRcwJs336X6uuda/uGTjfzqfXn8Pu53nue4UKV9WqVavW6z/p
qe/yju/xpKc++e2fdNtrPeVJ7/0uT377973tNd/rKedf7d5lZ2fvkTs7V55w
246/z3Z28j9n5/9/+X9ewv944P/+9H9/+v/pp3fwz5W7/O///u8z7+Sv7fFb
x+NPrH/27/Nnf/Znb/ZN3/RNn/j+7//+3/s6r/M6v/nwhz9858r/8+AHP3hn
/5df/MVf/Nve6I3e6MM++qM/+jW///u//+Rf/uVfdn55vHe3v/mbv3mD7/iO
73jah37oh37n67/+6//aIx7xiLznb9/57XW/53u+5+5//dd/nfdO//mf//m1
v+/7vu9DPuZjPuYb3/zN3/xXHvWoR+U9fRvDJ73f+73fG33bt33brc9+9rOX
Gd88Bv7W9c/uo37lV37l85785Cf/6X3ve9+d41LFXQ18+Ed91Efd+8///M93
fn4895Df+73f+5T3fd/3rS76ud9/0IMeZMIP/IM/+IM8hxAf9eEf/uG/9bCH
PSzP/fFtt932Oe/2bu/2or/xG7+xDORuYyBPGC9e/8d//MdP+IAP+IB/Pj09
3bk+XnzW/e9//3f5/M///Cv/8z//s/PT47nDf//3f/+AT/iET/jru9/97nnu
r+5xj3u83yd90icd/Md//Eee8867fu7nfm5NrJ/7x+vXr+vjhn/4h39YBnLT
GMjjx4sv9fM///NYVq/cNF781jd+4ze+11/8xV/UEz8xnrv9mc985o+/4iu+
4vrcj7zKq7wKSq3P3fKXf/mX2L8+90v/5/z/fumXfqme2AZywxjI48aLr/AT
P/ETf3nLLbfUK3cbL/7cox/96MHP8yd+bDz3sN/6rd/6vYc85CHrc8+8/fbb
H/q7v/u763NY8wsv+ZIvuT735/e+971f+md/9mcvDeT6GMhbjhcf/XM/93PP
uec971mv3Dxe/NmXfumXJrz1xI+M5x78/5z/37l8rM8ZyAP+6I/+aH3uHn/1
V381B9LP/cW97nUv/VwayLUxkMdupPzdhz70ofXKGM4u0pZ8eOKHxnO042de
5mVeZn3up1/2ZV/26vOe97z1Oe9N1vRzJmCAlwZyemEgX/E2b/M2ZzFdg0G7
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
xkUoMPvNvVnEgVcMLoYbXLj4YHACb88aBMRkDAUsVEJ3EMS1M/QEBKw1I29U
kTWQ5uAuK5zsK4uRxHfC9GzD6tXovVHFCsRQcqDHQd/3mMBjMDsw8iZROTX0
fYueP8sGhQNTTJZSGwZvJLSklTagcIKSWcVfDShv4X9koYOXJkOI96OD8VFp
/Ymi1KP2cda/vUaWtmFi/gkm/f44BkSBOYmznPEedW8RXyoZNKNmy38pcleM
hSNy8Ap2Cs6IuVYlujISNOyjBJqxadauXvfLzPqYmJnnkIShjlDFubRtVCRE
wJSeIChwLXy0icUpvLRMq6AEsvh/1MeQGx/O3d5c0TUdgder+TBZnwjHuZ+P
hIyW8L/HGdAA19vdfFmL2ZJW6UMcQa9MbqhHWTDFxMY2p9Mxz+Ayir0+0B+2
xfpvkm+ZUO4SiY1avd/nNBTRQs/jv3DdzPKJJGdx5mDDUDePxBaOZP1oc3aa
8zoLe72oou28lxxgzSARqQhpRKcdTc9AAnD0kQeWFGeGiHaMQuB1zJKBrmBD
T0DwJ/GkBNQ42ekZkdpckLN2jYzJs+enWHJGb+dytd7ggZxu0ET8mIC+tlrF
Av44YxBnGHidDcKkGqEcTasoWPM0IiDxkb17m+qfsfC6bqQvobgBSHI5YwI7
AHlGDWATe+mjAJIQpFVJrfUL44Vw99nU5e9VA8v98Z35dg7QnOc/IvJzROSD
AaDN3MOUYkM4PqO1emjjj4dqUAgb/lKu13V2liciTrUyaIlWsS/xgRKZ5i5Q
2fJyGn8GGe49s47Xex0FTacbWBz9jl0VBAlPXAKvhEWPREgujcpyxwxYTWIb
e7rJIWcEYGocqPiMTGV5JHtZNzQLRkKcqYO8s71ujhe+T5773fWdWQu8ViBu
lRB9QMqpaJcFQL8kw65sYZM1ke8soCZr78mSsH/ZPVKTiibrRMKHE1ltyQae
Rdbrz4s/OXLJemqKEWURIMeipTgaeSdihCrIUxBs5PHrSoXc2qxjsEwkUorD
Ywyf5idoHgI3BFzkVkstT+sSq87ckXssycMnSzBJTecm2dI1ahLeJv3I/wEZ
+Dk76+fPOuOtc/efluJHRlmiom2eyIT/Y4sfjRYT18TLWnp7MjuiMqmKgqNQ
Mxyi8aSqlDFtlYRVk8Us+KHdKlf4+rcWl/noGRwJoGufqOQ4ZPsxG9qMR/LN
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
n4hzEIsnZRMYvCGuj+cuVMjmmRJ108VUJUi7em21ILLF7H+0mgzEJjHCTxcV
gLq4UigDuZbw12Fhd6lJlTARujeuZdP7LBHiAMUch8Y/2EJuwTOj4FiO2Rrs
R76CpordptoOKFYw63UQEZFZTCsVmttK1ckE2R5W1U3a89FrY5k6mVJv57Em
upQMdITllVnV4A1TNNE6HhUuWPOnZ9RhuplajdbNKhr/siYzdBV3aY7xGNlF
HxB//MisiOtxrLweIzdcOxyt1Boty9g0QsB0kXBRAZTzC/n6eg4GVrsq9tZa
BXv4oRKZO2ZqIFJXGA3FdULZZpMjZ/8ePQHnPiz89Vu845mn5tGVSW7tNqgX
rO8MjObK1A7O/J0VpuAsS7+VvfiyJuvuqx2xjTNKT8k11buy33p0qw7oNgK1
6N04Q2W21NjTl2U5WmOwgcnco4qNrEfk6JVRqOJJczJj9Q3mjMSS4mPwKqre
g65LlhU0B/wBJKX6faYyJOp3eFvE8YHlJkX2gk+RLCkth6PU7/Qb57zfhhUS
6YB86XlaFsPI7BBeNiY2xPz5bpfykzdw+XG44cZ+OBrEcnq1nSXlf/Y4s1Ae
XYrYEMtWflBi9cmdl2CcQaxc64YYAYQeU3aQsGjZOHPAXG9PP/vV9JlCoq9A
DK2ht7IP6/jEynVyndd45KrveuWrvXzXsRJK9o5qal83NkInVsPq0c/req3X
8orINXXrhRmAnieviSTaidcClGDfYFqtvD0vbW0sct0yKRd/uO5hpWy/q6s/
rXskxuzcu2VM7pIVmkx5TdjH4nQypCZBK1KGlbGWUetB77fQ4xkDXDHPsehl
xsbuAwcRWE62j5IC9jolJuTkR3noG0e0vMWl259SOzkzuqw5GgWcYI6Iff2G
csQkOPuDGu9oDb4wwNwUWBVErPygNbK154DSoS/ET7uY7uzwaS+IhU4WWPwL
9iJ1Y8HaMnU27xtYXUyG5rvVikQ86K0pTyers+o8Dss1qVmT3W0M4FgByPkA
F2O9xMtq5b6Dt3SPA0+2yCUJghqZfEVDRc5Zq4T+4thWMDY3sEklJEZQgsmE
nSEOV7cW3HrHPB7S2JFpIw7ik6fEsRoHvdcmzhQ/SBd5+bsa/lg5y44xr2O3
LdGbHZiVd3ZQDpH0iS4LtBmLBhss04ccDo5GtcjbyJ/AcWWCkFrHy6/0kAab
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
YDzWSabp2WgqqKNgijKTuYJ4vZFQriZH63dz964oUjRPz0YgREIGTK6V3GZH
0Ec+4jfbB8WI2tUEgltTbZT0zM/rnuH7Vgg4uL7v2jR9WS0rG2UjYWwqimfe
Km/lTnZD1V+oz2XtbbDPSKYm6JNAvapnLW3RkEiP38GK13Ad7dGAgVqtw2vv
2u47jydIst7Z9bcmXZ7xRA6GGsRRHJavEKYJm0BAR4PXqj1vYEMGZ39lGmIv
0Hk68QIK3saKPABcdnHdA/ze1ssAW0Hesvcx62MB0DvBb/72Imufo14zQl9k
CALpT8MaMRpxwz6r5KtW6cVtL/CZACXlGJRky08Kfl9y8RZS8YykfVvVmGDz
VcKmHsTae/GTxPy8XjtU/e+W7+aPRfStLevOM+h6VM/xtFuacAr1L4fz1gDp
mA/GtyyEJeDZslyPy+4N7Hd8y9m7i6SZKk1M9ildZqRVffVoC/bYY4gYidm2
xuIolnjXFbB30Gr3S9GNgLsVcpAvNDtCjHd04nkETGWMr+2kvFtVexfcXe71
u3xIXY2x22pjZdDBAfgOkEp2tSVlT3/1QgDzIFK45yRnrXW75UZOjULQKMeB
JGzRtPjQs6jhqOCczm6+25RDv+tzICpzgT7HsS8r+paM7d1ICbQxpXBEQCml
wVv4HjLjJOmqO7VgzuzpOGDEk9c+3Dpi98bqW2zQrxEbA+V8xGPTxSKhMr9r
t36ykblRgphaMM/oDQEKCy1EdlU5R03EYujN+1AHSICCd7RUjnquG24DP2Rn
uviWSrugOjaY37U43LwYlCiVSsHAe5VTI5zW3h6tDd+Jmcwf1/m+Q3ltdcxY
OVdZDPLx3knf5bvmXVpljQJTu6o9xuaZvCaCpuo5kBX4GUMhg3bNkcFPkXbg
1y2l5tuZTds92O1sxWjbix0HF992Fd19HszB1P2OQ6H/Xh2KAtMW1VDsNIp2
qy4Q4c5QodfgcUOFwNaR+5wp8Sq7ZmRKm3HVRFVrl/AexfeSB2+fmo51QOXB
DHxetRMjI0Gjyw1ieIGjnVrU9OvpzgfOabe31mKyGeUE5QiKQObNm/pZMijh
vB+vyumTvP/90pn472rf8rL6lrhkZ9Y1WQLBqZiz/R2ywhReYKAWNgQFENGM
dTv1UsFs4ecz0FREmjjSljw+7tydzUkR0Bx5yzrY7xCwd3gtJ7ev+J1uDvhU
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
03ZGsEoyNWdTUpmQtX+it3fQItdV9bJ2yz1rR3ibiHeO89Nada7aWM/3fp+I
78gTNiE9pXR9rhyuHiMeIbNSa2+9uAJjuM94yuOPEjLCmjjqCV3NDKW5V22f
ZwbrhcmcKhwoJ4A4kp/u9YKXwp9KGUlLVDI7Tmmcm50z9bQygEaNnsrONKGb
RZNca8mhslxfH+MHjaDilR3q5TRaMh/nXV/MHVHyOKat9lrs5YReOEHGOVzO
P+5ehToXeKGCrv+v6/WqY1wzHeUfxWclT8M3gq/MbHbVZOsEfU4qCQD2GzAI
dQcwThlOizXLrFUn6nixZ/G3KBgQnognnqX8N0iTFcqMz2WpH8hOwEcV9DUx
WSR8hy6wJgylmJPPtWA4OIC+l2PWSUsgbbKkFsSs1hQ3tKFFhMJh6M7PrRRU
fxcCaKowvnNTJ8Ri6BSYNgK28UD+OZKvtjsly8PlGnCK5N6R5C4p9LSSPLGp
tgdZKQNFRjyaRpb5mbbX7S0K/ZBONnSgFhvMKUaU4lYj92atp7WVqeJYq69U
g5TtjtKvFA1DMDk0wTUpZNpvp42JQgVZSSymdSc1+m12xsGnQcCSGDVVdIgo
6wl+b1EwV4wLUIJPIysZ0BkzroEpV+oHehtSK1b5U6uxUMFuFxmuY7lv4J2i
Aq6OlE1/c7wWnl9tSuj4BZ7eVrmHRSetsNdCX29O0a7tIbYHDKGbyJt4GUPP
SwEs70cMNUZLYV9VbPHVO5NXakc5Es9KYtdcldINXa/Rb/LFI0lYZmxNLdMU
oix3pbOLsAUdJm3YHYlPdXBoOYhHTb5m3lxHGY2UwfS3mQqnxAQ6h31jZMMU
BU3RCJ8TLqqwf68ZJqHDNYaDXvHrfGYqEQinyJCnXGzbw8rqoKYim8l+cl+S
5bLNJflG5Zyu934tZjHLq6aWQebNCFc/QVDbcLtdTkyJMWKVcDt5cYkqiDSW
pz37uKqvbrKJG7FR/Jp7rfF4xNz6ra22oHEtkv+RmuOIcj3qo1drtqbSsbC2
bierK2nyxEXDqatmY4D2hUXHIMTPqbUNNUlKeX1wvsvbjkKlWczwxpwvSYh8
m2pRgw2AdZYrxjms7MUWFAG9CIt/DbyJpgFHjkoxM2FVTBMIF11YkjUICQVw
bHRFO5CUdlcRiS72k13z2UhA4NbftB/AhO0BFrV6f85eW6r8LkUieJKpPeNy
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
enuq+2xvq56U+QGEycELrs/qpFrU7sOP7dyJJ23nGBfbxrumBwIOKkB0P4Kk
ro6118Xb1khmxVnO3tG5m3KUi5ZSd5VB69/rtExjaOL5h+P8dp+ZNcmqJdn5
m15ypjGKKtg6Qrq+iqCuOxmRpXBj7FrU/ckI0/fJq/LerX+hhcBZxoQA6cY5
NVJwjAc2BOeoQGBep5N79umRO20t+wwwyOnlVqPXEw3l4Pjcvd9Vaq1+B5JS
kRb24Rd2tfb9iZr2lSrNcCLvXTLWYsme0to68dlqjp8LXbkypy3n0X3sk7C1
L/Z9Sv0vX6IEK9uoKMc4ekog5a8DA9VtAWk5TZKrUixGBVyn/LG6vDEclHO2
J6sObtNnT0pAst/ScVKOyXNYbBdjoeaWFyeVDayVN1ogpq7aAGsfKG6xSBKy
JSVzLpuu5CHtT9L/gbqsOxab84TAvkDyHQ1yj0QgSyqKz32X2JiZEVEIAOVa
Xe88XpMNvyNNMbtPMT+7hTK46oTrGb12QXB7X27UMGzyac0LrbKua80/W4Wm
Yk0xfTJKCG23yW0aEZnslrijuF7i07vomD2DSZoatfo9Hs+yK661R5lD11P9
QJMSwag/2VgcB5t0aCXf6k/H6nLsrX4DZ5IVv7T66TUDI9D0pevRIIcdDfdo
EMhVw5i73N5sZxklro8/4R+qEJqqcjBI6iZWOQKAS92RUMaIAXR0Y6rGtzan
a1O4Vc8+HOJmYdJOFQq/HeDvwwh3P0A8rXp5x6wCQzypXS3uG5f1Xu8BSuTs
CylG3yq/XWtZn63s14e/duAnW1Fv/3KNAf96Tin2m/UGY806WfgmUOZVuIpc
nRjZ8Ea7seSa6yfxAI1aLrJKZmRM5pBbm8kn2QMLEsu+6oXU6BFu4ZaCes8P
SeP48f7KPAn/cofPSLTuC8pGwyyhSYUra6pVQr63sEe/GTAoq+zXpEV8Nk9G
+1sesFYqT4fisvzq2fycEVqdoDq+HaJIwXBwGUTyjlyLxbPdY8abgNQeqBic
t0uIQfKC0eyr5gp51mwX2zO5laAytd+1k93ISmXT7OtgPtlCCiGlIxqXmloF
iOCaIKUK+kcPVWRZK+pu4AnVxoYkY200bOyICo34szVKtl7IgJGP+llT5vQr
yBsLeK8bQ7gDEIZNY3IoPTIaYdt1EG4cA9tX3n9zNEgqo3680sReUxFZv8Zv
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
+QrYu7L3qk+Bvi6iMk62hg+ydU3ZWfvKF66vfPkJ96sn/Y6PbXdVZyTuFz6Z
rIyPrAtH4riTKscpq1B+yIbLuI3rzFgfUChfEfCcM1jle57oW9MeCBoLKPlF
oHKLBQ8oh7tTbmO2rEEdaZ7h0y+cvHOB+uO68GZRbsotDbHKzzblWkSnmPSK
rtmPqa9MFTK2RpAu+v7OB4IueBNtCu4Z2uyaSZIWG48rIZOHGdZWtyb4zcjS
67nW3tYHw3MOL828vPgZHiTFjMBZkgZjmRFoV0Z5hueHrDL0YU9qO+v2mK+2
FbNjf46NFOuKu02z1o2cg2HZiWXl9OYoB9tFxCt31/fOPuCbDXvWhnSKLHnC
afR91qmlnLYclaGZMB3/TUjU175KuaZ4W1fAz/Aw2s5qbQrM8ERFrphrJ1Jb
JTTPfc9epTmPS1pWZ4wZnnlIiQ1jOcNbIcm24gzPKAkc+8LrRbYmfk7c2fj3
RVuAUk9zMonfJO4lTTzP3j66AUk2uriQfN46eHJZ1zLc/fpxjVM5PS+zpqdV
qza3j/mMXaSUnNwOz6/To91WNL93JiG7xC3h9sLNnsQ9h9o+vc0T5E3pjVib
2R/qYehqXDzjczsIfG7envExD3SI3g0641spuqA3Om0aNlzmjDCYsRqOAnGy
FOqWlstpc9PHQO4TDAp+Ec2cSRKJMtmjri/XbORKGNuDcgW0CRB92xMgn2iY
c0E54WkClMtmBV2fCdBNamJ/IgcwmGz6zQLMBKDFqkX6uDmVwgD43m3GHgwA
nAyYNCFKeAXx6+uAF/la1y8ag+9RHj0kytCCgJBnmoe0E0MbGlCVNswlIMhG
RE3J33uP7h72eSMpEbSjMrORpmnzxlz5UFmgeSPTAP9yJG9P+h86J30HKigY
HcYRrposUzUQv9xWOxFg3k/qclTR3/um2TsyzFnkE1N5e2jQp6DhahvilTya
Gx+kQk1VsppB3tP9h19NV4LFlhSYhogknpSUET12y9fZg2nwLAOUmkmZof+k
X8fQeZ3AIMaQqJw9pEnS2lGb1xEZYo5ivcuV6f4jPd3f3Ia7buMBvFPFizO2
kUmuTE02gWon7+gNSrfrBHd/70qIhMuVKOj25xWIs1IVcjUpH6G3Ndl1490h
bXWrnRwBKfGe2hqe9QjAjUdPV1Pc+s8/2uv56716f6Mj2AQ3wbJ0oXydtYAx
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\
\>"],ExpressionUUID->"c054d1db-e0e9-446d-a437-157dd94f6f52"],

Cell[TextData[{
 "The code and description below imports data from a spreadsheet file and \
creates a deep neural network as a demonstration of the process.  A target \
variable exists making this a ",
 StyleBox["supervised learning",
  FontSlant->"Italic"],
 " problem.  Since the target variable is binary, representing a class, this \
is further classified as a ",
 StyleBox["classification",
  FontSlant->"Italic"],
 " problem."
}], "Text",
 CellChangeTimes->{{3.74488797695303*^9, 3.744888009618184*^9}, {
  3.744888239058258*^9, 
  3.7448883056661654`*^9}},ExpressionUUID->"5c6a4fe9-cdab-4f24-8621-\
655c9c1ef7f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data import", "Section",
 CellChangeTimes->{{3.744779014495957*^9, 3.7447790167516227`*^9}, 
   3.744886169659551*^9},ExpressionUUID->"c8e223b3-3b28-4025-ba72-\
5783f041e2bc"],

Cell["\<\
The current notebook directory can be set as the default directory.  This \
makes importing files from this directory or its subdirectories easier.\
\>", "Text",
 CellChangeTimes->{{3.744779225576084*^9, 
  3.7447792625039425`*^9}},ExpressionUUID->"86b91a34-0476-4ed6-b1a8-\
b0b74189099c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.744779266578302*^9, 3.7447792815282593`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3806cdfb-eb50-4c5c-87d4-a3ed1f8382d4"],

Cell[TextData[{
 "Importing a simulated dataset with ",
 Cell[BoxData[
  FormBox["29963", TraditionalForm]],ExpressionUUID->
  "76958a71-ce8a-4a06-8112-b400b8489fcb"],
 " samples, ",
 Cell[BoxData[
  FormBox["13", TraditionalForm]],ExpressionUUID->
  "bec817aa-37cb-40fc-bb0b-264c1cf077b4"],
 " feature variables, and a binary target variable encoded as ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],ExpressionUUID->
  "2a540433-f625-4d2f-8c7e-97ed32720fce"],
 " and ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "b461a8af-a668-4bf7-8dc4-0cfeda62ef2c"],
 ".   There are no column names in the original spreadsheet file.  The \
dataset contains much overlapping between the target classes making for a \
very difficult learning."
}], "Text",
 CellChangeTimes->{{3.744779115727483*^9, 3.7447791818136206`*^9}, {
  3.7447794866792927`*^9, 3.7447794989593697`*^9}, {3.7447801207675877`*^9, 
  3.744780121104535*^9}, {3.7448884169307365`*^9, 
  3.744888480786051*^9}},ExpressionUUID->"a6eaf394-5b30-48ec-bdda-\
69a75556c6eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataImport", "=", 
   RowBox[{"Import", "[", "\"\<DCDNNData.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744024842272665*^9, 3.7440248678079343`*^9}, 
   3.744779292609521*^9, 3.744809666127235*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"2c63f65e-63e4-4534-a74d-f439e9cd85ea"],

Cell["\<\
The Dimension[] function can be used to verify the number of rows and columns.\
\>", "Text",
 CellChangeTimes->{{3.7447791978317823`*^9, 3.7447792093999686`*^9}, {
  3.744779469615967*^9, 
  3.7447794752071285`*^9}},ExpressionUUID->"815c9a2b-7fa4-4cc7-a4b6-\
6111d8d76521"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "dataImport", "]"}]], "Input",
 CellChangeTimes->{{3.7440257732366657`*^9, 3.7440257818513203`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a8d93945-b7c6-47aa-b94b-74128acb7af8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"29963", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{3.7448884114405985`*^9, 3.744959548242814*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f5c8c36e-97df-4545-ad27-4e9bfca255cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"dataImport", "\[LeftDoubleBracket]", 
     RowBox[{";;", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744783901026268*^9, 3.744783991580472*^9}, {
  3.7448104639044437`*^9, 3.744810480222888*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"873861f0-a53c-47b9-9e23-82062ca09410"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.5599999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{60., 0}, {65., 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{54.804183346677284`, 71.25191486522547}, {
            73.81700696944593, 74.88394626695725}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{65., 0}, {70., 14.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{70.30191486522548, 86.74964638377365}, {
            73.52465872566766, 74.88394626695724}}],
          StatusArea[#, 14]& ,
          TagBoxNote->"14"],
         StyleBox["14", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[14, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{70., 0}, {75., 82.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{85.79964638377365, 102.24737790232182`}, {
            71.53669066797549, 74.88394626695724}}],
          StatusArea[#, 82]& ,
          TagBoxNote->"82"],
         StyleBox["82", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[82, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{75., 0}, {80., 286.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{101.29737790232181`, 117.74510942086998`}, {
            65.57278649489893, 74.88394626695724}}],
          StatusArea[#, 286]& ,
          TagBoxNote->"286"],
         StyleBox["286", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[286, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{80., 0}, {85., 852.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{116.79510942086998`, 133.24284093941816`}, {
            49.02587589704931, 74.88394626695725}}],
          StatusArea[#, 852]& ,
          TagBoxNote->"852"],
         StyleBox["852", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[852, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{85., 0}, {90., 2078.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{132.29284093941817`, 148.74057245796632`}, {
            13.183981209834371`, 74.88394626695724}}],
          StatusArea[#, 2078]& ,
          TagBoxNote->"2078"],
         StyleBox["2078", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2078, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{90., 0}, {95., 3608.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{147.79057245796633`, 
            164.2383039765145}, {-31.545300088239728`, 74.88394626695725}}],
          StatusArea[#, 3608]& ,
          TagBoxNote->"3608"],
         StyleBox["3608", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3608, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{95., 0}, {100., 5085.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{163.2883039765145, 
            179.73603549506265`}, {-74.72513569428902, 74.88394626695724}}],
          StatusArea[#, 5085]& ,
          TagBoxNote->"5085"],
         StyleBox["5085", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5085, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{100., 0}, {105., 5713.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{178.78603549506266`, 
            195.23376701361082`}, {-93.08460540356388, 74.88394626695724}}],
          StatusArea[#, 5713]& ,
          TagBoxNote->"5713"],
         StyleBox["5713", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5713, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{105., 0}, {110., 5246.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{194.28376701361083`, 
            210.73149853215898`}, {-79.43194241911904, 74.88394626695724}}],
          StatusArea[#, 5246]& ,
          TagBoxNote->"5246"],
         StyleBox["5246", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5246, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{110., 0}, {115., 3619.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{209.781498532159, 
            226.22923005070714`}, {-31.866883156395815`, 74.88394626695725}}],
          StatusArea[#, 3619]& ,
          TagBoxNote->"3619"],
         StyleBox["3619", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3619, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{115., 0}, {120., 2039.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{225.27923005070716`, 241.7269615692553}, {
            14.324139360569589`, 74.88394626695724}}],
          StatusArea[#, 2039]& ,
          TagBoxNote->"2039"],
         StyleBox["2039", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2039, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{120., 0}, {125., 889.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{240.7769615692553, 257.22469308780353`}, {
            47.94418739506971, 74.88394626695727}}],
          StatusArea[#, 889]& ,
          TagBoxNote->"889"],
         StyleBox["889", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[889, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{125., 0}, {130., 316.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{256.2746930878035, 272.7224246063517}, {
            64.69574176356413, 74.88394626695727}}],
          StatusArea[#, 316]& ,
          TagBoxNote->"316"],
         StyleBox["316", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[316, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{130., 0}, {135., 92.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{271.7724246063517, 288.2201561248998}, {
            71.2443424241972, 74.88394626695727}}],
          StatusArea[#, 92]& ,
          TagBoxNote->"92"],
         StyleBox["92", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[92, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{135., 0}, {140., 35.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{287.2701561248998, 303.717887643448}, {
            72.91072741373328, 74.88394626695727}}],
          StatusArea[#, 35]& ,
          TagBoxNote->"35"],
         StyleBox["35", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[35, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{140., 0}, {145., 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{302.76788764344803`, 319.21561916199613`}, {
            73.8170069694459, 74.88394626695727}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{145., 0}, {150., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{318.26561916199614`, 334.71335068054435`}, {
            73.90471144257938, 74.88394626695727}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{58.2, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{60., 150.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.581], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.581], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0}, {20., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{54.613235294117636`, 73.52401960784312}, {
            70.80567583869973, 71.77683856852082}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{20., 0}, {40., 8.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{72.57401960784313, 91.48480392156863}, {
            70.65753672995228, 71.7768385685208}}],
          StatusArea[#, 8]& ,
          TagBoxNote->"8"],
         StyleBox["8", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[8, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{40., 0}, {60., 70.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{90.53480392156862, 109.44558823529412`}, {
            69.34544748104624, 71.7768385685208}}],
          StatusArea[#, 70]& ,
          TagBoxNote->"70"],
         StyleBox["70", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[70, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{60., 0}, {80., 464.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{108.49558823529412`, 127.40637254901962`}, {
            61.007331931546595`, 71.77683856852082}}],
          StatusArea[#, 464]& ,
          TagBoxNote->"464"],
         StyleBox["464", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[464, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{80., 0}, {100., 1603.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{126.45637254901959`, 145.36715686274508`}, {
            36.90298266535345, 71.77683856852082}}],
          StatusArea[#, 1603]& ,
          TagBoxNote->"1603"],
         StyleBox["1603", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1603, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{100., 0}, {120., 3970.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{144.4171568627451, 
            163.32794117647057`}, {-13.189198821107667`, 71.77683856852082}}],
          StatusArea[#, 3970]& ,
          TagBoxNote->"3970"],
         StyleBox["3970", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3970, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{120., 0}, {140., 6867.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{162.37794117647059`, 
            181.28872549019607`}, {-74.49762711273324, 71.7768385685208}}],
          StatusArea[#, 6867]& ,
          TagBoxNote->"6867"],
         StyleBox["6867", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[6867, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{140., 0}, {160., 7622.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{180.33872549019608`, 
            199.24950980392154`}, {-90.4754881276374, 71.7768385685208}}],
          StatusArea[#, 7622]& ,
          TagBoxNote->"7622"],
         StyleBox["7622", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[7622, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{160., 0}, {180., 5522.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{198.29950980392155`, 
            217.2102941176471}, {-46.033755503400684`, 71.77683856852082}}],
          StatusArea[#, 5522]& ,
          TagBoxNote->"5522"],
         StyleBox["5522", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5522, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{180., 0}, {200., 2725.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{216.26029411764708`, 235.17107843137254`}, {
            13.158399806118396`, 71.7768385685208}}],
          StatusArea[#, 2725]& ,
          TagBoxNote->"2725"],
         StyleBox["2725", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2725, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{200., 0}, {220., 874.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{234.22107843137255`, 253.13186274509803`}, {
            52.3306127049099, 71.77683856852082}}],
          StatusArea[#, 874]& ,
          TagBoxNote->"874"],
         StyleBox["874", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[874, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{220., 0}, {240., 207.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{252.181862745098, 271.09264705882356`}, {
            66.4461534955603, 71.77683856852083}}],
          StatusArea[#, 207]& ,
          TagBoxNote->"207"],
         StyleBox["207", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[207, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{240., 0}, {260., 26.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{270.1426470588235, 289.05343137254897`}, {
            70.27660759317308, 71.77683856852083}}],
          StatusArea[#, 26]& ,
          TagBoxNote->"26"],
         StyleBox["26", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[26, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{260., 0}, {280., 3.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{288.103431372549, 307.0142156862745}, {
            70.76335037905757, 71.77683856852083}}],
          StatusArea[#, 3]& ,
          TagBoxNote->"3"],
         StyleBox["3", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{280., 0}, {300., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{306.0642156862745, 324.97499999999997`}, {
            70.8056758386997, 71.77683856852083}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-6., 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{0., 300.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.6719999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.6719999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-0.5, 0}, {0.5, 19488.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{68.3975490196078, 
            198.66127450980386`}, {-89.4068085311835, 66.38872925064523}}],
          StatusArea[#, 19488]& ,
          TagBoxNote->"19488"],
         StyleBox["19488", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[19488, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0}, {1.5, 10475.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{197.71127450980384`, 
            327.9749999999999}, {-17.792336444380254`, 66.38872925064524}}],
          StatusArea[#, 10475]& ,
          TagBoxNote->"10475"],
         StyleBox["10475", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[10475, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.54, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{-0.5, 1.5}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.6719999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.6719999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-0.5, 0}, {0.5, 19485.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{68.39754901960782, 
            198.6612745098039}, {-89.38234144430882, 66.4131963375199}}],
          StatusArea[#, 19485]& ,
          TagBoxNote->"19485"],
         StyleBox["19485", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[19485, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0}, {1.5, 10478.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{197.71127450980387`, 
            327.975}, {-17.804524723706777`, 66.41319633751993}}],
          StatusArea[#, 10478]& ,
          TagBoxNote->"10478"],
         StyleBox["10478", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[10478, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.54, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{-0.5, 1.5}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.6719999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.6719999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-0.5, 0}, {0.5, 13493.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{68.39754901960782, 
            198.6612745098039}, {-64.21119355351311, 63.59556669483026}}],
          StatusArea[#, 13493]& ,
          TagBoxNote->"13493"],
         StyleBox["13493", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[13493, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0}, {1.5, 16470.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{197.71127450980387`, 
            327.975}, {-92.19997108699849, 63.595566694830296`}}],
          StatusArea[#, 16470]& ,
          TagBoxNote->"16470"],
         StyleBox["16470", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[16470, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.54, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{-0.5, 1.5}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.574], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.574], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0}, {1., 1723.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{54.80418334667734, 73.18913130504404}, {
            12.32792535537876, 72.58809941315039}}],
          StatusArea[#, 1723]& ,
          TagBoxNote->"1723"],
         StyleBox["1723", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1723, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1., 0}, {2., 4270.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{72.23913130504404, 
            90.62407926341074}, {-75.34648748568004, 72.58809941315037}}],
          StatusArea[#, 4270]& ,
          TagBoxNote->"4270"],
         StyleBox["4270", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4270, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2., 0}, {3., 4852.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{89.67407926341073, 
            108.05902722177744`}, {-95.38045225737075, 72.58809941315037}}],
          StatusArea[#, 4852]& ,
          TagBoxNote->"4852"],
         StyleBox["4852", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4852, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3., 0}, {4., 4681.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{107.10902722177744`, 
            125.49397518014413`}, {-89.494184257441, 72.58809941315037}}],
          StatusArea[#, 4681]& ,
          TagBoxNote->"4681"],
         StyleBox["4681", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4681, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4., 0}, {5., 3806.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{124.54397518014412`, 
            142.9289231385108}, {-59.37439186013967, 72.58809941315042}}],
          StatusArea[#, 3806]& ,
          TagBoxNote->"3806"],
         StyleBox["3806", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3806, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{5., 0}, {6., 2965.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{141.97892313851082`, 
            160.36387109687752`}, {-30.424968538847807`, 72.58809941315039}}],
          StatusArea[#, 2965]& ,
          TagBoxNote->"2965"],
         StyleBox["2965", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2965, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{6., 0}, {7., 2206.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{159.41387109687753`, 
            177.7988190552442}, {-4.298200047931573, 72.58809941315039}}],
          StatusArea[#, 2206]& ,
          TagBoxNote->"2206"],
         StyleBox["2206", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2206, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{7., 0}, {8., 1657.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{176.8488190552442, 195.2337670136109}, {
            14.599818267632344`, 72.58809941315039}}],
          StatusArea[#, 1657]& ,
          TagBoxNote->"1657"],
         StyleBox["1657", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1657, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{8., 0}, {9., 1222.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{194.2837670136109, 212.66871497197764`}, {
            29.57365791657643, 72.58809941315039}}],
          StatusArea[#, 1222]& ,
          TagBoxNote->"1222"],
         StyleBox["1222", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1222, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{9., 0}, {10., 821.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{211.71871497197762`, 230.10366293034429`}, {
            43.37712848951109, 72.58809941315039}}],
          StatusArea[#, 821]& ,
          TagBoxNote->"821"],
         StyleBox["821", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[821, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{10., 0}, {11., 554.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{229.1536629303443, 247.538610888711}, {
            52.56796799817332, 72.58809941315039}}],
          StatusArea[#, 554]& ,
          TagBoxNote->"554"],
         StyleBox["554", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[554, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{11., 0}, {12., 408.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{246.58861088871097`, 264.9735588470777}, {
            57.59367050103729, 72.5880994131504}}],
          StatusArea[#, 408]& ,
          TagBoxNote->"408"],
         StyleBox["408", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[408, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{12., 0}, {13., 274.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{264.02355884707765`, 282.40850680544435`}, {
            62.20630156530971, 72.5880994131504}}],
          StatusArea[#, 274]& ,
          TagBoxNote->"274"],
         StyleBox["274", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[274, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{13., 0}, {14., 195.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{281.45850680544436`, 299.84345476381105`}, {
            64.92568853603748, 72.5880994131504}}],
          StatusArea[#, 195]& ,
          TagBoxNote->"195"],
         StyleBox["195", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[195, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{14., 0}, {15., 109.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{298.89345476381106`, 317.27840272217776`}, {
            67.88603384594366, 72.5880994131504}}],
          StatusArea[#, 109]& ,
          TagBoxNote->"109"],
         StyleBox["109", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[109, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{15., 0}, {16., 84.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{316.32840272217777`, 334.71335068054447`}, {
            68.74659934300942, 72.5880994131504}}],
          StatusArea[#, 84]& ,
          TagBoxNote->"84"],
         StyleBox["84", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[84, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{16., 0}, {17., 54.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{333.7633506805445, 352.14829863891117`}, {
            69.77927793948832, 72.5880994131504}}],
          StatusArea[#, 54]& ,
          TagBoxNote->"54"],
         StyleBox["54", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[54, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{17., 0}, {18., 24.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{351.1982986389112, 369.5832465972779}, {
            70.81195653596723, 72.5880994131504}}],
          StatusArea[#, 24]& ,
          TagBoxNote->"24"],
         StyleBox["24", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[24, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{18., 0}, {19., 26.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{368.6332465972779, 387.01819455564447`}, {
            70.74311129620196, 72.5880994131504}}],
          StatusArea[#, 26]& ,
          TagBoxNote->"26"],
         StyleBox["26", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[26, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{19., 0}, {20., 8.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{386.0681945556445, 404.4531425140112}, {
            71.3627184540893, 72.5880994131504}}],
          StatusArea[#, 8]& ,
          TagBoxNote->"8"],
         StyleBox["8", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[8, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{20., 0}, {21., 11.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{403.5031425140112, 421.8880904723779}, {
            71.25945059444142, 72.5880994131504}}],
          StatusArea[#, 11]& ,
          TagBoxNote->"11"],
         StyleBox["11", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[11, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{21., 0}, {22., 7.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{420.9380904723779, 439.3230384307446}, {
            71.39714107397194, 72.5880994131504}}],
          StatusArea[#, 7]& ,
          TagBoxNote->"7"],
         StyleBox["7", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[7, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{22., 0}, {23., 2.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{438.3730384307446, 456.7579863891113}, {
            71.56925417338508, 72.5880994131504}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{24., 0}, {25., 2.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{473.242934347478, 491.6278823058447}, {
            71.56925417338508, 72.5880994131504}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{26., 0}, {27., 2.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{508.1128302642114, 526.4977782225782}, {
            71.56925417338508, 72.5880994131504}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.32, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{0, 16}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.581], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.581], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0}, {5., 7339.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{54.804183346677334`, 
            74.35146116893515}, {-98.54550797470313, 69.42304369581797}}],
          StatusArea[#, 7339]& ,
          TagBoxNote->"7339"],
         StyleBox["7339", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[7339, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{5., 0}, {10., 5438.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{73.40146116893513, 
            92.94873899119295}, {-55.28317431539524, 69.423043695818}}],
          StatusArea[#, 5438]& ,
          TagBoxNote->"5438"],
         StyleBox["5438", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5438, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{10., 0}, {15., 4272.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{91.99873899119294, 
            111.54601681345075`}, {-28.747729261869196`, 69.423043695818}}],
          StatusArea[#, 4272]& ,
          TagBoxNote->"4272"],
         StyleBox["4272", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4272, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{15., 0}, {20., 3156.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{110.59601681345075`, 
            130.14329463570854`}, {-3.3501677869677877`, 69.42304369581798}}],
          StatusArea[#, 3156]& ,
          TagBoxNote->"3156"],
         StyleBox["3156", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3156, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{20., 0}, {25., 2358.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{129.19329463570855`, 148.74057245796635`}, {
            14.810454127881087`, 69.42304369581798}}],
          StatusArea[#, 2358]& ,
          TagBoxNote->"2358"],
         StyleBox["2358", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2358, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{25., 0}, {30., 1800.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{147.79057245796636`, 167.3378502802242}, {
            27.509234865331784`, 69.42304369581797}}],
          StatusArea[#, 1800]& ,
          TagBoxNote->"1800"],
         StyleBox["1800", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1800, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{30., 0}, {35., 1368.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{166.38785028022417`, 185.935128102482}, {
            37.34054898464847, 69.42304369581797}}],
          StatusArea[#, 1368]& ,
          TagBoxNote->"1368"],
         StyleBox["1368", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1368, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{35., 0}, {40., 1056.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{184.98512810248198`, 204.5324059247398}, {
            44.440942515266066`, 69.42304369581797}}],
          StatusArea[#, 1056]& ,
          TagBoxNote->"1056"],
         StyleBox["1056", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1056, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{40., 0}, {45., 754.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{203.5824059247398, 223.1296837469976}, {
            51.31375933015875, 69.42304369581797}}],
          StatusArea[#, 754]& ,
          TagBoxNote->"754"],
         StyleBox["754", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[754, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{45., 0}, {50., 577.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{222.1796837469976, 241.72696156925542`}, {
            55.34186719848989, 69.42304369581797}}],
          StatusArea[#, 577]& ,
          TagBoxNote->"577"],
         StyleBox["577", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[577, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{50., 0}, {55., 448.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{240.77696156925538`, 260.32423939151323`}, {
            58.27760683134138, 69.423043695818}}],
          StatusArea[#, 448]& ,
          TagBoxNote->"448"],
         StyleBox["448", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[448, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{55., 0}, {60., 323.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{259.3742393915132, 278.9215172137709}, {
            61.122315777902934`, 69.423043695818}}],
          StatusArea[#, 323]& ,
          TagBoxNote->"323"],
         StyleBox["323", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[323, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{60., 0}, {65., 268.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{277.97151721377094`, 297.51879503602873`}, {
            62.373987714390005`, 69.423043695818}}],
          StatusArea[#, 268]& ,
          TagBoxNote->"268"],
         StyleBox["268", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[268, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{65., 0}, {70., 179.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{296.56879503602875`, 316.11607285828654`}, {
            64.3994204843418, 69.423043695818}}],
          StatusArea[#, 179]& ,
          TagBoxNote->"179"],
         StyleBox["179", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[179, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{70., 0}, {75., 145.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{315.16607285828655`, 334.71335068054435`}, {
            65.17318131780655, 69.423043695818}}],
          StatusArea[#, 145]& ,
          TagBoxNote->"145"],
         StyleBox["145", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[145, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{75., 0}, {80., 113.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{333.76335068054436`, 353.31062850280216`}, {
            65.9014268081263, 69.423043695818}}],
          StatusArea[#, 113]& ,
          TagBoxNote->"113"],
         StyleBox["113", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[113, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{80., 0}, {85., 93.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{352.3606285028022, 371.90790632505997`}, {
            66.35658023957615, 69.423043695818}}],
          StatusArea[#, 93]& ,
          TagBoxNote->"93"],
         StyleBox["93", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[93, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{85., 0}, {90., 72.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{370.95790632506, 390.5051841473178}, {
            66.83449134259848, 69.423043695818}}],
          StatusArea[#, 72]& ,
          TagBoxNote->"72"],
         StyleBox["72", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[72, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{90., 0}, {95., 44.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{389.5551841473178, 409.1024619695756}, {
            67.47170614662828, 69.423043695818}}],
          StatusArea[#, 44]& ,
          TagBoxNote->"44"],
         StyleBox["44", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[44, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{95., 0}, {100., 45.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{408.1524619695756, 427.6997397918334}, {
            67.44894847505579, 69.423043695818}}],
          StatusArea[#, 45]& ,
          TagBoxNote->"45"],
         StyleBox["45", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[45, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{100., 0}, {105., 23.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{426.7497397918334, 446.2970176140912}, {
            67.94961724965061, 69.423043695818}}],
          StatusArea[#, 23]& ,
          TagBoxNote->"23"],
         StyleBox["23", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[23, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{105., 0}, {110., 19.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{445.3470176140912, 464.894295436349}, {
            68.04064793594058, 69.423043695818}}],
          StatusArea[#, 19]& ,
          TagBoxNote->"19"],
         StyleBox["19", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[19, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{110., 0}, {115., 15.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{463.944295436349, 483.4915732586068}, {
            68.13167862223055, 69.423043695818}}],
          StatusArea[#, 15]& ,
          TagBoxNote->"15"],
         StyleBox["15", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[15, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{115., 0}, {120., 11.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{482.54157325860683`, 502.0888510808646}, {
            68.22270930852052, 69.423043695818}}],
          StatusArea[#, 11]& ,
          TagBoxNote->"11"],
         StyleBox["11", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[11, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{120., 0}, {125., 11.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{501.1388510808646, 520.6861289031225}, {
            68.22270930852052, 69.423043695818}}],
          StatusArea[#, 11]& ,
          TagBoxNote->"11"],
         StyleBox["11", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[11, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{125., 0}, {130., 10.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{519.7361289031224, 539.2834067253802}, {
            68.24546698009301, 69.423043695818}}],
          StatusArea[#, 10]& ,
          TagBoxNote->"10"],
         StyleBox["10", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[10, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{130., 0}, {135., 4.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{538.3334067253802, 557.8806845476381}, {
            68.38201300952797, 69.423043695818}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{135., 0}, {140., 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{556.9306845476381, 576.4779623698959}, {
            68.38201300952797, 69.423043695818}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{140., 0}, {145., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{575.5279623698958, 595.0752401921537}, {
            68.45028602424544, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{145., 0}, {150., 7.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{594.1252401921537, 613.6725180144115}, {
            68.31373999481049, 69.423043695818}}],
          StatusArea[#, 7]& ,
          TagBoxNote->"7"],
         StyleBox["7", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[7, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{150., 0}, {155., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{612.7225180144114, 632.2697958366693}, {
            68.45028602424544, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{155., 0}, {160., 2.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{631.3197958366693, 650.8670736589271}, {
            68.42752835267295, 69.423043695818}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{160., 0}, {165., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{649.917073658927, 669.4643514811848}, {
            68.45028602424544, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{165., 0}, {170., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{668.5143514811848, 688.0616293034427}, {
            68.45028602424544, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{170., 0}, {175., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{687.1116293034427, 706.6589071257005}, {
            68.45028602424544, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{180., 0}, {185., 2.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{724.3061849479583, 743.8534627702161}, {
            68.42752835267295, 69.423043695818}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{190., 0}, {195., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{761.5007405924739, 781.0480184147317}, {
            68.45028602424544, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{220., 0}, {225., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{873.0844075260208, 892.6316853482786}, {
            68.45028602424544, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-1.5, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{0, 75}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.595], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.595], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.9500000000000002`, 0}, {2.0500000000000003`, 
             1384.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{54.80418334667731, 
            77.21258083389787}, {-15.247954316496916`, 69.42304369581794}}],
          StatusArea[#, 1384]& ,
          TagBoxNote->"1384"],
         StyleBox["1384", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1384, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.0500000000000003`, 0}, {2.1500000000000004`, 
             1425.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{76.26258083389789, 
            98.67097832111847}, {-17.72812839056114, 69.42304369581794}}],
          StatusArea[#, 1425]& ,
          TagBoxNote->"1425"],
         StyleBox["1425", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1425, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.1500000000000004`, 0}, {2.25, 2672.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{97.72097832111845, 
            120.12937580833896`}, {-93.16171547246617, 69.42304369581794}}],
          StatusArea[#, 2672]& ,
          TagBoxNote->"2672"],
         StyleBox["2672", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2672, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.25, 0}, {2.35, 2670.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{119.17937580833896`, 
            141.58777329555951`}, {-93.04073137129231, 69.42304369581794}}],
          StatusArea[#, 2670]& ,
          TagBoxNote->"2670"],
         StyleBox["2670", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2670, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.35, 0}, {2.45, 2724.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{140.63777329555953`, 
            163.04617078278008`}, {-96.30730210298668, 69.42304369581794}}],
          StatusArea[#, 2724]& ,
          TagBoxNote->"2724"],
         StyleBox["2724", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2724, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.45, 0}, {2.5500000000000003`, 2714.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{162.0961707827801, 
            184.5045682700006}, {-95.70238159711735, 69.42304369581794}}],
          StatusArea[#, 2714]& ,
          TagBoxNote->"2714"],
         StyleBox["2714", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2714, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5500000000000003`, 0}, {2.6500000000000004`, 
             2756.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{183.5545682700006, 
            205.9629657572212}, {-98.24304772176853, 69.42304369581794}}],
          StatusArea[#, 2756]& ,
          TagBoxNote->"2756"],
         StyleBox["2756", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2756, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.6500000000000004`, 0}, {2.75, 2601.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{205.01296575722122`, 
            227.42136324444172`}, {-88.86677988079396, 69.42304369581794}}],
          StatusArea[#, 2601]& ,
          TagBoxNote->"2601"],
         StyleBox["2601", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2601, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.75, 0}, {2.85, 2728.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{226.47136324444173`, 
            248.87976073166223`}, {-96.5492703053344, 69.42304369581794}}],
          StatusArea[#, 2728]& ,
          TagBoxNote->"2728"],
         StyleBox["2728", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2728, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.85, 0}, {2.95, 2760.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{247.9297607316622, 
            270.3381582188829}, {-98.48501592411628, 69.42304369581797}}],
          StatusArea[#, 2760]& ,
          TagBoxNote->"2760"],
         StyleBox["2760", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2760, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.95, 0}, {3.0500000000000003`, 2761.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{269.38815821888284`, 
            291.79655570610333`}, {-98.54550797470321, 69.42304369581797}}],
          StatusArea[#, 2761]& ,
          TagBoxNote->"2761"],
         StyleBox["2761", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2761, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.0500000000000003`, 0}, {3.1500000000000004`, 
             1357.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{290.84655570610335`, 
            313.25495319332396`}, {-13.614668950649744`, 69.42304369581797}}],
          StatusArea[#, 1357]& ,
          TagBoxNote->"1357"],
         StyleBox["1357", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1357, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.1500000000000004`, 0}, {3.25, 1411.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{312.30495319332397`, 
            334.71335068054435`}, {-16.881239682344102`, 69.42304369581797}}],
          StatusArea[#, 1411]& ,
          TagBoxNote->"1411"],
         StyleBox["1411", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1411, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.9240000000000002`, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{1.9500000000000002`, 3.25}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.6719999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.6719999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{-0.5, 0}, {0.5, 19468.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{68.39754901960781, 
            198.6612745098039}, {-89.24355218307312, 66.5519855987556}}],
          StatusArea[#, 19468]& ,
          TagBoxNote->"19468"],
         StyleBox["19468", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[19468, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0}, {1.5, 10495.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{197.71127450980384`, 
            327.9749999999999}, {-17.873662594191444`, 66.55198559875564}}],
          StatusArea[#, 10495]& ,
          TagBoxNote->"10495"],
         StyleBox["10495", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[10495, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.54, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{-0.5, 1.5}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.5529999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0}, {2., 4285.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{54.80418334667735, 
            70.43624478530194}, {-98.54550797470318, 69.42304369581797}}],
          StatusArea[#, 4285]& ,
          TagBoxNote->"4285"],
         StyleBox["4285", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4285, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2., 0}, {4., 4156.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{69.48624478530193, 
            85.11830622392652}, {-93.51741155335029, 69.42304369581797}}],
          StatusArea[#, 4156]& ,
          TagBoxNote->"4156"],
         StyleBox["4156", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4156, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4., 0}, {6., 3799.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{84.16830622392652, 
            99.80036766255111}, {-79.60244703844339, 69.42304369581797}}],
          StatusArea[#, 3799]& ,
          TagBoxNote->"3799"],
         StyleBox["3799", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3799, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{6., 0}, {8., 3380.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{98.8503676625511, 
            114.4824291011757}, {-63.270878041956024`, 69.423043695818}}],
          StatusArea[#, 3380]& ,
          TagBoxNote->"3380"],
         StyleBox["3380", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3380, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{8., 0}, {10., 2849.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{113.5324291011757, 
            129.16449053980028`}, {-42.573829981968444`, 69.423043695818}}],
          StatusArea[#, 2849]& ,
          TagBoxNote->"2849"],
         StyleBox["2849", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2849, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{10., 0}, {12., 2487.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{128.21449053980027`, 
            143.84655197842488`}, {-28.463978008869574`, 69.423043695818}}],
          StatusArea[#, 2487]& ,
          TagBoxNote->"2487"],
         StyleBox["2487", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2487, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{12., 0}, {14., 1917.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{142.89655197842487`, 
            158.52861341704943`}, {-6.246807774984632, 69.42304369581798}}],
          StatusArea[#, 1917]& ,
          TagBoxNote->"1917"],
         StyleBox["1917", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1917, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{14., 0}, {16., 1574.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{157.57861341704944`, 173.21067485567403`}, {
            7.122471856984745, 69.42304369581797}}],
          StatusArea[#, 1574]& ,
          TagBoxNote->"1574"],
         StyleBox["1574", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1574, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{16., 0}, {18., 1156.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{172.26067485567404`, 187.89273629429863`}, {
            23.415063361833717`, 69.42304369581797}}],
          StatusArea[#, 1156]& ,
          TagBoxNote->"1156"],
         StyleBox["1156", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1156, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{18., 0}, {20., 951.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.9427362942986, 202.57479773292317`}, {
            31.405449147704623`, 69.42304369581797}}],
          StatusArea[#, 951]& ,
          TagBoxNote->"951"],
         StyleBox["951", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[951, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{20., 0}, {22., 658.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{201.62479773292318`, 217.25685917154777`}, {
            42.82585419775426, 69.42304369581797}}],
          StatusArea[#, 658]& ,
          TagBoxNote->"658"],
         StyleBox["658", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[658, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{22., 0}, {24., 581.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{216.30685917154779`, 231.93892061017237`}, {
            45.82712105391065, 69.42304369581797}}],
          StatusArea[#, 581]& ,
          TagBoxNote->"581"],
         StyleBox["581", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[581, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{24., 0}, {26., 461.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{230.98892061017236`, 246.62098204879698`}, {
            50.504420050518014`, 69.42304369581797}}],
          StatusArea[#, 461]& ,
          TagBoxNote->"461"],
         StyleBox["461", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[461, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{26., 0}, {28., 356.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{245.67098204879693`, 261.3030434874216}, {
            54.597056672549435`, 69.423043695818}}],
          StatusArea[#, 356]& ,
          TagBoxNote->"356"],
         StyleBox["356", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[356, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{28., 0}, {30., 279.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{260.35304348742153`, 275.9851049260461}, {
            57.598323528705826`, 69.423043695818}}],
          StatusArea[#, 279]& ,
          TagBoxNote->"279"],
         StyleBox["279", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[279, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{30., 0}, {32., 185.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{275.03510492604613`, 290.66716636467066`}, {
            61.26220774271493, 69.423043695818}}],
          StatusArea[#, 185]& ,
          TagBoxNote->"185"],
         StyleBox["185", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[185, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{32., 0}, {34., 184.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{289.7171663646707, 305.34922780329526`}, {
            61.30118523435332, 69.423043695818}}],
          StatusArea[#, 184]& ,
          TagBoxNote->"184"],
         StyleBox["184", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[184, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{34., 0}, {36., 123.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{304.3992278032953, 320.03128924191986`}, {
            63.678812224295385`, 69.423043695818}}],
          StatusArea[#, 123]& ,
          TagBoxNote->"123"],
         StyleBox["123", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[123, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{36., 0}, {38., 105.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{319.0812892419199, 334.71335068054447`}, {
            64.3804070737865, 69.423043695818}}],
          StatusArea[#, 105]& ,
          TagBoxNote->"105"],
         StyleBox["105", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[105, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{38., 0}, {40., 88.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{333.7633506805445, 349.395412119169}, {
            65.04302443163921, 69.423043695818}}],
          StatusArea[#, 88]& ,
          TagBoxNote->"88"],
         StyleBox["88", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[88, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{40., 0}, {42., 83.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{348.445412119169, 364.0774735577936}, {
            65.23791188983118, 69.423043695818}}],
          StatusArea[#, 83]& ,
          TagBoxNote->"83"],
         StyleBox["83", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[83, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{42., 0}, {44., 56.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{363.1274735577936, 378.7595349964182}, {
            66.29030416406783, 69.423043695818}}],
          StatusArea[#, 56]& ,
          TagBoxNote->"56"],
         StyleBox["56", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[56, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{44., 0}, {46., 49.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{377.8095349964182, 393.4415964350428}, {
            66.5631466055366, 69.423043695818}}],
          StatusArea[#, 49]& ,
          TagBoxNote->"49"],
         StyleBox["49", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[49, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{46., 0}, {48., 30.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{392.4915964350428, 408.12365787366736`}, {
            67.3037189466661, 69.423043695818}}],
          StatusArea[#, 30]& ,
          TagBoxNote->"30"],
         StyleBox["30", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[30, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{48., 0}, {50., 26.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{407.17365787366737`, 422.80571931229196`}, {
            67.45962891321967, 69.423043695818}}],
          StatusArea[#, 26]& ,
          TagBoxNote->"26"],
         StyleBox["26", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[26, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{50., 0}, {52., 28.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{421.85571931229197`, 437.48778075091656`}, {
            67.38167392994289, 69.423043695818}}],
          StatusArea[#, 28]& ,
          TagBoxNote->"28"],
         StyleBox["28", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[28, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{52., 0}, {54., 12.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{436.53778075091657`, 452.1698421895411}, {
            68.0053137961572, 69.423043695818}}],
          StatusArea[#, 12]& ,
          TagBoxNote->"12"],
         StyleBox["12", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[12, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{54., 0}, {56., 18.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{451.2198421895411, 466.8519036281657}, {
            67.77144884632683, 69.423043695818}}],
          StatusArea[#, 18]& ,
          TagBoxNote->"18"],
         StyleBox["18", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[18, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{56., 0}, {58., 12.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{465.9019036281657, 481.5339650667903}, {
            68.0053137961572, 69.423043695818}}],
          StatusArea[#, 12]& ,
          TagBoxNote->"12"],
         StyleBox["12", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[12, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{58., 0}, {60., 8.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{480.5839650667903, 496.2160265054149}, {
            68.16122376271078, 69.423043695818}}],
          StatusArea[#, 8]& ,
          TagBoxNote->"8"],
         StyleBox["8", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[8, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{60., 0}, {62., 5.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{495.2660265054149, 510.89808794403945`}, {
            68.27815623762596, 69.423043695818}}],
          StatusArea[#, 5]& ,
          TagBoxNote->"5"],
         StyleBox["5", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{62., 0}, {64., 9.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{509.94808794403946`, 525.5801493826641}, {
            68.12224627107238, 69.423043695818}}],
          StatusArea[#, 9]& ,
          TagBoxNote->"9"],
         StyleBox["9", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[9, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{64., 0}, {66., 6.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{524.6301493826641, 540.2622108212887}, {
            68.23917874598757, 69.423043695818}}],
          StatusArea[#, 6]& ,
          TagBoxNote->"6"],
         StyleBox["6", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[6, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{66., 0}, {68., 7.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{539.3122108212887, 554.9442722599132}, {
            68.20020125434917, 69.423043695818}}],
          StatusArea[#, 7]& ,
          TagBoxNote->"7"],
         StyleBox["7", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[7, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{68., 0}, {70., 6.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{553.9942722599131, 569.6263336985378}, {
            68.23917874598757, 69.423043695818}}],
          StatusArea[#, 6]& ,
          TagBoxNote->"6"],
         StyleBox["6", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[6, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{70., 0}, {72., 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{568.6763336985377, 584.3083951371624}, {
            68.31713372926436, 69.423043695818}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{72., 0}, {74., 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{583.3583951371623, 598.990456575787}, {
            68.31713372926436, 69.423043695818}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{74., 0}, {76., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{598.040456575787, 613.6725180144116}, {
            68.43406620417954, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{76., 0}, {78., 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{612.7225180144115, 628.3545794530362}, {
            68.31713372926436, 69.423043695818}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{78., 0}, {80., 5.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{627.4045794530361, 643.0366408916607}, {
            68.27815623762596, 69.423043695818}}],
          StatusArea[#, 5]& ,
          TagBoxNote->"5"],
         StyleBox["5", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{80., 0}, {82., 3.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{642.0866408916606, 657.7187023302853}, {
            68.35611122090275, 69.423043695818}}],
          StatusArea[#, 3]& ,
          TagBoxNote->"3"],
         StyleBox["3", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{82., 0}, {84., 4.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{656.7687023302852, 672.4007637689099}, {
            68.31713372926436, 69.423043695818}}],
          StatusArea[#, 4]& ,
          TagBoxNote->"4"],
         StyleBox["4", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{84., 0}, {86., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{671.4507637689098, 687.0828252075345}, {
            68.43406620417954, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{86., 0}, {88., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{686.1328252075344, 701.7648866461591}, {
            68.43406620417954, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{88., 0}, {90., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{700.814886646159, 716.4469480847837}, {
            68.43406620417954, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{90., 0}, {92., 2.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{715.4969480847836, 731.1290095234083}, {
            68.39508871254115, 69.423043695818}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{92., 0}, {94., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{730.1790095234082, 745.8110709620328}, {
            68.43406620417954, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{94., 0}, {96., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{744.8610709620327, 760.4931324006574}, {
            68.43406620417954, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{120., 0}, {122., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{935.7278696641524, 951.359931102777}, {
            68.43406620417954, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{124., 0}, {126., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{965.0919925414015, 980.7240539800262}, {
            68.43406620417954, 69.423043695818}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.76, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{0, 38}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.5599999999999999], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{100., 0}, {200., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{54.80418334667734, 71.25191486522553}, {
            68.4432455599267, 69.42304369581797}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{200., 0}, {300., 6.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{70.30191486522553, 86.74964638377371}, {
            68.29425488047038, 69.42304369581795}}],
          StatusArea[#, 6]& ,
          TagBoxNote->"6"],
         StyleBox["6", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[6, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{300., 0}, {400., 33.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{85.7996463837737, 102.24737790232187`}, {
            67.48970521140632, 69.42304369581795}}],
          StatusArea[#, 33]& ,
          TagBoxNote->"33"],
         StyleBox["33", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[33, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{400., 0}, {500., 146.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{101.29737790232187`, 117.74510942087007`}, {
            64.12251585569376, 69.42304369581795}}],
          StatusArea[#, 146]& ,
          TagBoxNote->"146"],
         StyleBox["146", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[146, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{500., 0}, {600., 506.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{116.79510942087006`, 133.24284093941822`}, {
            53.39518693483961, 69.42304369581797}}],
          StatusArea[#, 506]& ,
          TagBoxNote->"506"],
         StyleBox["506", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[506, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{600., 0}, {700., 1248.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{132.29284093941823`, 148.74057245796638`}, {
            31.284970103523506`, 69.42304369581797}}],
          StatusArea[#, 1248]& ,
          TagBoxNote->"1248"],
         StyleBox["1248", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1248, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{700., 0}, {800., 2648.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{147.7905724579664, 
            164.23830397651457`}, {-10.432420144242712`, 69.42304369581797}}],
          StatusArea[#, 2648]& ,
          TagBoxNote->"2648"],
         StyleBox["2648", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2648, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{800., 0}, {900., 4273.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{163.28830397651458`, 
            179.73603549506277`}, {-58.85439096754274, 69.423043695818}}],
          StatusArea[#, 4273]& ,
          TagBoxNote->"4273"],
         StyleBox["4273", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4273, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{900., 0}, {1000., 5601.}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{178.78603549506275`, 
            195.23376701361093`}, {-98.42631543113815, 69.42304369581795}}],
          StatusArea[#, 5601]& ,
          TagBoxNote->"5601"],
         StyleBox["5601", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5601, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1000., 0}, {1100., 5605.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{194.28376701361094`, 
            210.7314985321591}, {-98.54550797470317, 69.42304369581795}}],
          StatusArea[#, 5605]& ,
          TagBoxNote->"5605"],
         StyleBox["5605", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[5605, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1100., 0}, {1200., 4556.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{209.7814985321591, 
            226.22923005070726`}, {-67.28726342476979, 69.42304369581795}}],
          StatusArea[#, 4556]& ,
          TagBoxNote->"4556"],
         StyleBox["4556", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[4556, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1200., 0}, {1300., 2966.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{225.27923005070727`, 
            241.72696156925548`}, {-19.908227357663876`, 69.42304369581797}}],
          StatusArea[#, 2966]& ,
          TagBoxNote->"2966"],
         StyleBox["2966", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2966, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1300., 0}, {1400., 1466.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{240.77696156925543`, 257.22469308780364`}, {
            24.788976479228452`, 69.42304369581798}}],
          StatusArea[#, 1466]& ,
          TagBoxNote->"1466"],
         StyleBox["1466", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1466, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1400., 0}, {1500., 626.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{256.2746930878036, 272.72242460635175`}, {
            49.81941062788818, 69.42304369581798}}],
          StatusArea[#, 626]& ,
          TagBoxNote->"626"],
         StyleBox["626", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[626, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1500., 0}, {1600., 217.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{271.77242460635176`, 288.2201561248999}, {
            62.006848207414166`, 69.42304369581798}}],
          StatusArea[#, 217]& ,
          TagBoxNote->"217"],
         StyleBox["217", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[217, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1600., 0}, {1700., 52.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{287.2701561248999, 303.7178876434481}, {
            66.92354062947231, 69.42304369581798}}],
          StatusArea[#, 52]& ,
          TagBoxNote->"52"],
         StyleBox["52", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[52, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1700., 0}, {1800., 12.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{302.7678876434481, 319.21561916199624`}, {
            68.11546606512279, 69.42304369581798}}],
          StatusArea[#, 12]& ,
          TagBoxNote->"12"],
         StyleBox["12", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[12, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1800., 0}, {1900., 1.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{318.26561916199626`, 334.7133506805444}, {
            68.44324555992667, 69.42304369581798}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{64., 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{100., 1900.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.511], Thickness[Small]}], {}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.511], Thickness[Small]}], RectangleBox[{80., 0}, {85., 610.},
        RoundingRadius->0], RectangleBox[{85., 0}, {90., 623.},
        RoundingRadius->0], RectangleBox[{90., 0}, {95., 606.},
        RoundingRadius->0], RectangleBox[{95., 0}, {100., 604.},
        RoundingRadius->0], RectangleBox[{100., 0}, {105., 1313.},
        RoundingRadius->0], RectangleBox[{105., 0}, {110., 1363.},
        RoundingRadius->0], RectangleBox[{110., 0}, {115., 1375.},
        RoundingRadius->0], RectangleBox[{115., 0}, {120., 1396.},
        RoundingRadius->0], RectangleBox[{120., 0}, {125., 1389.},
        RoundingRadius->0], RectangleBox[{125., 0}, {130., 1401.},
        RoundingRadius->0], RectangleBox[{130., 0}, {135., 1355.},
        RoundingRadius->0], RectangleBox[{135., 0}, {140., 1369.},
        RoundingRadius->0], RectangleBox[{140., 0}, {145., 1341.},
        RoundingRadius->0], RectangleBox[{145., 0}, {150., 1322.},
        RoundingRadius->0], RectangleBox[{150., 0}, {155., 1378.},
        RoundingRadius->0], RectangleBox[{155., 0}, {160., 1348.},
        RoundingRadius->0], RectangleBox[{160., 0}, {165., 1406.},
        RoundingRadius->0], RectangleBox[{165., 0}, {170., 1362.},
        RoundingRadius->0], RectangleBox[{170., 0}, {175., 1433.},
        RoundingRadius->0], RectangleBox[{175., 0}, {180., 1413.},
        RoundingRadius->0], RectangleBox[{180., 0}, {185., 1382.},
        RoundingRadius->0], RectangleBox[{185., 0}, {190., 1376.},
        RoundingRadius->0], RectangleBox[{190., 0}, {195., 1380.},
        RoundingRadius->0], RectangleBox[{195., 0}, {200., 1391.},
        RoundingRadius->0], RectangleBox[{200., 0}, {205., 27.},
        RoundingRadius->
         0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{77.5, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotRange->{{80., 205.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.7449595699312296`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"88e9aeba-a29a-4ff5-929e-eef007447f62"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting the data into training and test sets", "Section",
 CellChangeTimes->{{3.7447796225916696`*^9, 
  3.744779656975056*^9}},ExpressionUUID->"c9369298-9c07-4a97-8124-\
6efd99b62ead"],

Cell["Setting the number of rows.", "Text",
 CellChangeTimes->{{3.744779505407359*^9, 
  3.744779515504429*^9}},ExpressionUUID->"2eb16dd6-1738-4eff-8f65-\
40c57b3c8ef9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", 
  RowBox[{"Length", "[", "dataImport", "]"}]}]], "Input",
 CellChangeTimes->{{3.7440253285015063`*^9, 3.744025363179109*^9}, {
  3.744025521867112*^9, 3.7440255486269326`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f79877e1-c48e-4156-992b-b92208b86bce"],

Cell[BoxData["29963"], "Output",
 CellChangeTimes->{3.7449596238228683`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"bc2a081c-1e16-4ecb-a4af-f6b804300280"]
}, Open  ]],

Cell[TextData[{
 "Creating a variable to hold ",
 Cell[BoxData[
  FormBox["90", TraditionalForm]],ExpressionUUID->
  "d9349b18-c15e-4d23-82c6-d6647703bde5"],
 "% of the data."
}], "Text",
 CellChangeTimes->{{3.744779523311203*^9, 
  3.7447795433750596`*^9}},ExpressionUUID->"abe80adf-a969-4060-b25e-\
2fecb144e221"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainN", "=", 
  RowBox[{"Floor", "[", 
   RowBox[{"0.9", "*", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.744025558708358*^9, 3.7440255802272825`*^9}, {
  3.7447781945085316`*^9, 3.744778213620549*^9}, {3.744810537758834*^9, 
  3.744810541934099*^9}, {3.744862960440179*^9, 3.7448629629405394`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"48e843d0-b08c-4826-8f57-87118c381341"],

Cell[BoxData["26966"], "Output",
 CellChangeTimes->{3.744959648203829*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"35508279-f389-4281-9ff1-98151df647cc"]
}, Open  ]],

Cell[TextData[{
 "Given a list (first argument), the TakeDrop[] function selects the first ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "e73a760d-38a2-487f-906f-885db51d7287"],
 " elements (second argument) and returns it as the first sublist in a list \
object.  The remainder is placed in a second sublist.  These two sublists can \
be individually named as separate objects.  By adding the RandomSample[] \
function, a random selection of rows of similar size, ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "68fba498-1ab3-4f08-a602-dd555553f6b7"],
 ", is taken as first sublist and the complement is stored in the second \
sublist."
}], "Text",
 CellChangeTimes->{{3.744779552087245*^9, 3.744779610911501*^9}, {
  3.744870608258504*^9, 
  3.744870908872628*^9}},ExpressionUUID->"bd9c958c-ac9e-46e7-b938-\
73e692478372"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RandomSeed", "[", "123", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataTrain", ",", "dataTest"}], "}"}], "=", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{
     RowBox[{"RandomSample", "@", "dataImport"}], ",", "trainN"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "dataTrain", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "dataTest", "]"}]}], "Input",
 CellChangeTimes->{{3.744025584140664*^9, 3.7440256655465455`*^9}, {
   3.744027963013113*^9, 3.744027965075901*^9}, {3.7440280055848975`*^9, 
   3.7440280418062296`*^9}, {3.744029558052643*^9, 3.744029558740431*^9}, {
   3.74403136464966*^9, 3.7440313704784613`*^9}, {3.7447781042879796`*^9, 
   3.7447781483658967`*^9}, 3.744778179413773*^9, 3.7447795488497515`*^9, {
   3.744870561072074*^9, 3.7448705777725325`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f58d1f0e-0ed8-4369-ba50-6277a3df5bb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"26966", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{3.7449597348724923`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"6887c643-757a-4c00-bfe5-494d97acc759"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2997", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{3.7449597348774805`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"a4eb1000-9e45-4445-a00b-f35623176f0d"]
}, Open  ]],

Cell["\<\
Create variables to separately hold the feature variables and the target \
variable for each of the training and test sets.\
\>", "Text",
 CellChangeTimes->{{3.744779699391358*^9, 
  3.74477973564075*^9}},ExpressionUUID->"2212b41b-0f15-43fb-9b12-\
d17dbcc57fe7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xTrain", "=", 
   RowBox[{"dataTrain", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"1", ";;", "12"}]}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yTrain", "=", 
   RowBox[{"dataTrain", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "13"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xTest", "=", 
   RowBox[{"dataTest", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"1", ";;", "12"}]}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yTest", "=", 
   RowBox[{"dataTest", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "13"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7440256725414753`*^9, 3.744025760850604*^9}, {
  3.7440258535727844`*^9, 3.7440258542986717`*^9}, {3.744028127025066*^9, 
  3.7440281851649995`*^9}, {3.7440295778767023`*^9, 3.7440295780954447`*^9}, {
  3.744777938503632*^9, 3.7447779414733906`*^9}, {3.7447782361636515`*^9, 
  3.744778265944773*^9}, {3.7448105583015547`*^9, 3.7448105845414443`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b889757d-9d7c-43df-aef2-2a510c82c8b9"],

Cell["\<\
Using a histogram to verify the distribution of the target classes.\
\>", "Text",
 CellChangeTimes->{{3.7447797481828403`*^9, 
  3.744779759686702*^9}},ExpressionUUID->"6613cfd0-5d1a-4bf6-8b21-\
a315f44412ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"yTrain", ",", "yTest"}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Train data\>\"", ",", "\"\<Test data\>\""}], "}"}]}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "Above"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7447772604822893`*^9, 3.744777292572014*^9}, {
  3.744777365228453*^9, 3.7447774151631904`*^9}, {3.744777472066249*^9, 
  3.744777493528284*^9}, {3.7447777374172153`*^9, 3.744777759047538*^9}, {
  3.7447778474409733`*^9, 3.744777880643638*^9}, {3.7447785255302505`*^9, 
  3.7447785778260584`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"3a8e6020-c21a-4922-bec7-39a30a765702"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.6719999999999999]]], 
       RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6719999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{-0.5, 0.}, {0.5, 13538}, "RoundingRadius" -> 
                0]}]}}, {{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5, 0.}, {1.5, 13428}, "RoundingRadius" -> 
                0]}]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6719999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{-0.5, 0.}, {0.5, 1530}, "RoundingRadius" -> 
                0]}]}}, {{
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5, 0.}, {1.5, 1467}, "RoundingRadius" -> 
                0]}]}}}}, {}, {}}}}}, {{{{{{}, 
          InsetBox[
           FormBox[
            StyleBox["13538", {}, StripOnInput -> False], TraditionalForm], 
           Offset[{0, 4}, {0., 13538}], 
           ImageScaled[{0.5, 0}]]}, {{}, 
          InsetBox[
           FormBox[
            StyleBox["13428", {}, StripOnInput -> False], TraditionalForm], 
           Offset[{0, 4}, {1., 13428}], 
           ImageScaled[{0.5, 0}]]}}, {}}}, {{{{{}, 
          InsetBox[
           FormBox[
            StyleBox["1530", {}, StripOnInput -> False], TraditionalForm], 
           Offset[{0, 4}, {0., 1530}], 
           ImageScaled[{0.5, 0}]]}, {{}, 
          InsetBox[
           FormBox[
            StyleBox["1467", {}, StripOnInput -> False], TraditionalForm], 
           Offset[{0, 4}, {1., 1467}], 
           ImageScaled[{0.5, 0}]]}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.54, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-0.5, 1.5}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Train data\"", "\"Test data\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6719999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.97858`", ",", "0.678934`", ",", "0.157834`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6719999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6719999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6719999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7449597863459263`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"9d23813a-6bfa-45cd-913f-c7ce9a6bbb3e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulating the data", "Section",
 CellChangeTimes->{{3.7448106577655096`*^9, 
  3.7448106615495033`*^9}},ExpressionUUID->"424c2ace-fa59-4e22-999f-\
99e28abdaaff"],

Cell["\<\
Data manipulation starts with transforming the scale of each of the feature \
variables.  One such method is standardization, shown in equation (1) for the \
mean and standard deviation for each specific variable (column).\
\>", "Text",
 CellChangeTimes->{{3.7448630594712973`*^9, 3.744863126848507*^9}, {
  3.7448634265525236`*^9, 
  3.7448634475611334`*^9}},ExpressionUUID->"c275542f-d642-4c6d-a006-\
0528bbcddeb9"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["x", "i"], "=", 
  FractionBox[
   RowBox[{
    SubscriptBox["x", "i"], "-", 
    OverscriptBox["x", "_"]}], "\[Sigma]"]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.74486314069058*^9, 3.744863165838417*^9}, {
  3.744863277914406*^9, 3.744863301642688*^9}, {3.7448633838281465`*^9, 
  3.7448634096141267`*^9}, {3.7448638843849635`*^9, 
  3.7448639193461156`*^9}},ExpressionUUID->"b851ed0b-cced-4849-8404-\
7531f1c48a6d"],

Cell["The mean of each column is shown below", "Text",
 CellChangeTimes->{{3.744863450835617*^9, 
  3.7448634599451933`*^9}},ExpressionUUID->"81ca0149-4fda-4c14-b8dd-\
1d0e0054508d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Mean", "[", "xTrain", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.744810753208805*^9, 3.744810762325397*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"169cff71-7deb-4232-aea5-c4abbc9451b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "102.54821627234296`", ",", "145.1293517763109`", ",", 
   "0.3501446265667878`", ",", "0.35073796632796855`", ",", 
   "0.5500630423496254`", ",", "4.492690795816954`", ",", 
   "17.91890825483943`", ",", "2.60162797596974`", ",", 
   "0.34992212415634505`", ",", "9.894607654082918`", ",", 
   "1010.8339724097012`", ",", "145.33908625676779`"}], "}"}]], "Output",
 CellChangeTimes->{3.7449598321576376`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"d13e1b6c-c105-479f-a7a5-47bab840e411"]
}, Open  ]],

Cell["The standard deviation for each column is also shown.", "Text",
 CellChangeTimes->{{3.7448634638036075`*^9, 
  3.7448634726731973`*^9}},ExpressionUUID->"e17c7225-e5ce-4a4a-bf22-\
7b57ef0c4f90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StandardDeviation", "[", "xTrain", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7448107696552277`*^9, 3.7448107896771035`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"da4d2381-956c-406c-a987-cf005bc7ce08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10.273617960785746`", ",", "30.782015007411772`", ",", 
   "0.4770239045625116`", ",", "0.4772099017798787`", ",", 
   "0.4974966031256547`", ",", "3.029379531068107`", ",", 
   "18.081742911109767`", ",", "0.3331245207056669`", ",", 
   "0.4769539466009491`", ",", "9.075617732065345`", ",", 
   "205.71202338036548`", ",", "32.28477063720301`"}], "}"}]], "Output",
 CellChangeTimes->{3.744959844431102*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"75efb73e-046c-48a1-a681-5237b380fed7"]
}, Open  ]],

Cell[TextData[{
 "The Map[] function maps a function to a list object.  The latter must be \
transposed (as the function maps over rows and not columns) and the result \
transposed again to recreate the original data dimensions.  The code below \
shows a mean of ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],ExpressionUUID->
  "49abc6fe-ae8a-4c1b-a22b-782516a37ef2"],
 " and a standard deviation of ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "1a3baf26-94b8-47a9-9e63-c544759f3838"],
 " for each of the variables."
}], "Text",
 CellChangeTimes->{{3.7448634826906304`*^9, 
  3.7448636064890327`*^9}},ExpressionUUID->"d8a5799a-9e4a-42a6-b724-\
47b5397749b4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xTrainStandardized", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Map", "[", 
     RowBox[{"Standardize", ",", 
      RowBox[{"Transpose", "[", "xTrain", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "xTrainStandardized", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "xTrainStandardized", "]"}]}], "Input",
 CellChangeTimes->{{3.744810897709386*^9, 3.7448109567024374`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b8aad849-3a25-4320-86f7-328bba9ec043"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "4.800893215734268`*^-16"}], ",", "3.924769728230621`*^-16", 
   ",", "0", ",", "0", ",", "0", ",", "1.6073242928638327`*^-16", ",", 
   RowBox[{"-", "1.2384301928622973`*^-16"}], ",", 
   RowBox[{"-", "4.4372690314470395`*^-16"}], ",", "0", ",", 
   "1.1620164150048365`*^-16", ",", 
   RowBox[{"-", "6.180293653954295`*^-16"}], ",", 
   RowBox[{"-", "1.2753196028624507`*^-16"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7449598935122943`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"0e726c6e-92d8-4017-9526-4509ffbf06c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.9999999999999998`", ",", "1", ",", "1", ",", "1", ",", "1.`",
    ",", "0.9999999999999999`", ",", "0.9999999999999998`", ",", "1", ",", 
   "0.9999999999999999`", ",", "1.`", ",", "0.9999999999999999`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.744959895755299*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"8eaddc1f-68fa-4882-982c-ac5f28f21cfa"]
}, Open  ]],

Cell["\<\
The same transformation must occur for the test data.  However, it is \
important that the mean and standard deviation of the training data variables \
be used for the transformation.\
\>", "Text",
 CellChangeTimes->{{3.744863612163144*^9, 
  3.7448636551080046`*^9}},ExpressionUUID->"8f8f6fea-ae93-4e7c-8ccc-\
c977399d3c9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xTestStandardized", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xTest", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "i"}], "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{"Mean", "[", "xTrain", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{
        RowBox[{"StandardDeviation", "[", "xTrain", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "12"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7448119800385857`*^9, 3.7448120412138443`*^9}, {
  3.744812273341584*^9, 3.7448122779878764`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"4e64ec88-9e2c-4ce7-a7fd-1e77cdbffc6e"],

Cell[TextData[{
 "The mean and standard deviation of the test data variables will not quite \
be ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],ExpressionUUID->
  "2a31202e-78c1-48e3-ab87-1080538ca368"],
 " and ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "1846aae5-9612-453d-9724-ea8df20a1308"],
 "."
}], "Text",
 CellChangeTimes->{{3.7448636905444546`*^9, 
  3.7448637094247913`*^9}},ExpressionUUID->"1c15ebec-0dd0-4ba2-87a8-\
bdc863f28217"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Mean", "[", "xTestStandardized", "]"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandardDeviation", "[", "xTestStandardized", "]"}], "//", 
  "N"}]}], "Input",
 CellChangeTimes->{{3.7448123995191116`*^9, 3.7448124233076954`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"9701b2e7-2236-4ac1-ba0c-fe95a7b45aa5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.009080996046781002`"}], ",", "0.0064510445976072705`", ",", 
   RowBox[{"-", "0.011459834968067937`"}], ",", 
   RowBox[{"-", "0.02178837016760871`"}], ",", 
   RowBox[{"-", "0.00773907355190548`"}], ",", 
   RowBox[{"-", "0.00561670136302772`"}], ",", 
   RowBox[{"-", "0.012121352986665414`"}], ",", 
   RowBox[{"-", "0.014502622510972783`"}], ",", "0.007194047185186839`", ",", 
   "0.019251031396916765`", ",", 
   RowBox[{"-", "0.02270557242977312`"}], ",", 
   RowBox[{"-", "0.014015886167076127`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.744959959064273*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"d3cbcc27-6ba1-43bb-a08b-c715f5059eed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9700517416901197`", ",", "0.9980524657056473`", ",", 
   "0.9964751748356585`", ",", "0.9930696245603072`", ",", 
   "1.0008970244546607`", ",", "0.992126116421725`", ",", 
   "0.998254618206618`", ",", "1.0089491330819278`", ",", 
   "1.0023840411278466`", ",", "1.0271351299852265`", ",", 
   "0.9969449010825118`", ",", "0.9948188476811991`"}], "}"}]], "Output",
 CellChangeTimes->{3.744959959724513*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5d3d63d2-6433-4eed-8f64-871aef52ab0c"]
}, Open  ]],

Cell["\<\
A variable called train is created to hold a list of the feature variables \
and each individual sample target class using the Table[] function to iterate \
over each sample.\
\>", "Text",
 CellChangeTimes->{{3.7447799057984447`*^9, 3.7447799547824197`*^9}, {
  3.744863745848733*^9, 
  3.744863753736498*^9}},ExpressionUUID->"bb2b3dc3-5dce-43ce-b380-\
69f09704323c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"train", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"xTrainStandardized", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "\[Rule]", 
      RowBox[{
      "yTrain", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "trainN"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "train", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"train", "\[LeftDoubleBracket]", 
   RowBox[{";;", "1"}], "\[RightDoubleBracket]"}], " ", "//", "N", " ", 
  RowBox[{"(*", 
   RowBox[{"Show", " ", "first", " ", "sample"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.74402586286034*^9, 3.744025935067106*^9}, {
  3.744029648440018*^9, 3.744029664472827*^9}, {3.744779969255729*^9, 
  3.744779973281119*^9}, {3.744812053398918*^9, 3.744812054976694*^9}, {
  3.74481236242163*^9, 3.744812367748089*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"fe5f2ff8-9634-499d-86ff-e11250ed9eac"],

Cell[BoxData[
 RowBox[{"{", "26966", "}"}]], "Output",
 CellChangeTimes->{3.7449600289396*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ce5d024c-676d-40ad-8b2c-8493ffe4a26e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.747020021656543`"}], ",", 
     RowBox[{"-", "0.37779696272354985`"}], ",", 
     RowBox[{"-", "0.7340190359808334`"}], ",", 
     RowBox[{"-", "0.7349762966355055`"}], ",", 
     RowBox[{"-", "1.105661905817463`"}], ",", "2.4781672706212876`", ",", 
     RowBox[{"-", "0.5706810624156865`"}], ",", 
     RowBox[{"-", "0.6052630876364964`"}], ",", 
     RowBox[{"-", "0.7336601922472671`"}], ",", 
     RowBox[{"-", "0.5833881296450353`"}], ",", 
     RowBox[{"-", "0.6491306157773501`"}], ",", "0.7297841452242517`"}], 
    "}"}], "\[Rule]", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7449600289445887`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"0aa74bdf-870f-419d-90c0-54d72b28f044"]
}, Open  ]],

Cell["The same is done for the test set.", "Text",
 CellChangeTimes->{{3.744779984318371*^9, 3.744779989054631*^9}, {
  3.744863779592949*^9, 
  3.744863782880431*^9}},ExpressionUUID->"359f2b62-0153-48a7-962d-\
dd1bdb1fad94"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"xTestStandardized", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "\[Rule]", 
      RowBox[{
      "yTest", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "yTest", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "test", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", "\[LeftDoubleBracket]", 
   RowBox[{";;", "1"}], "\[RightDoubleBracket]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.7440259535012074`*^9, 3.744026006274985*^9}, {
  3.744029627547614*^9, 3.744029642330058*^9}, {3.744810622774746*^9, 
  3.7448106228487177`*^9}, {3.744812082789605*^9, 3.744812083831462*^9}, {
  3.7448123711265593`*^9, 3.7448123715874863`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"177f0e35-d6d6-4528-ae5f-872eecdc9296"],

Cell[BoxData[
 RowBox[{"{", "2997", "}"}]], "Output",
 CellChangeTimes->{3.7449600528084335`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"53468600-ed11-4bfd-875e-dc928f4f1ce4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.026728491618566`"}], ",", 
     RowBox[{"-", "0.21536445144070865`"}], ",", 
     RowBox[{"-", "0.7340190359808334`"}], ",", 
     RowBox[{"-", "0.7349762966355055`"}], ",", 
     RowBox[{"-", "1.105661905817463`"}], ",", 
     RowBox[{"-", "0.3606978870130843`"}], ",", "3.6988188624265614`", ",", 
     RowBox[{"-", "1.205639185968538`"}], ",", 
     RowBox[{"-", "0.7336601922472671`"}], ",", 
     RowBox[{"-", "0.10959117973521944`"}], ",", "2.372083165445513`", ",", 
     "0.6058867186341851`"}], "}"}], "\[Rule]", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7449600528124156`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"77229595-2e35-4ade-9acf-63b50f89b2c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating the neural network", "Section",
 CellChangeTimes->{{3.7447800077906933`*^9, 
  3.7447800133428235`*^9}},ExpressionUUID->"70009688-7119-47c5-81ac-\
a8e1711f0cae"],

Cell["\<\
A decoder is created to specify the two classes in the target variable.\
\>", "Text",
 CellChangeTimes->{{3.7447800307264843`*^9, 3.7447800532468686`*^9}, {
  3.744863796720931*^9, 
  3.7448638057205057`*^9}},ExpressionUUID->"b8d969a6-c529-4d39-8c71-\
7efec1bb9f21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dec", "=", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Class\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7440260585818152`*^9, 3.744026085589837*^9}, {
  3.7440267842095146`*^9, 3.7440267844438977`*^9}, {3.74477796925346*^9, 
  3.7447779771959715`*^9}, {3.7447800175251675`*^9, 3.744780021951474*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"864db627-5b01-4a0e-aebe-6c2e976d8039"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Class\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Input depth\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["1", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetDecoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.744960112668044*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"a84c8eca-ce0a-4582-bfc4-1db9f59ee6b1"]
}, Open  ]],

Cell["Examples of two networks are shown below.", "Text",
 CellChangeTimes->{{3.7447800700228906`*^9, 3.7447800828705235`*^9}, {
  3.7448638230407887`*^9, 
  3.7448638357364483`*^9}},ExpressionUUID->"360d40d3-3602-4fb7-b190-\
b68d284e1d0e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "123", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netOne", "=", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "Ramp", ",", "2", ",", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", "dec"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", "12"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Random\>\"", ",", 
       RowBox[{"\"\<Weights\>\"", "\[Rule]", "0.01"}], ",", 
       RowBox[{"\"\<Biases\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"netTwo", "=", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "Ramp", ",", "5", ",", "Ramp", ",", "2", ",", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", "dec"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", "12"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Xavier\>\"", ",", 
       RowBox[{"\"\<FactorType\>\"", "\[Rule]", "\"\<Mean\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "\[Rule]", "\"\<Uniform\>\""}]}], 
      "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7440262690524354`*^9, 3.74402628420623*^9}, {
   3.7440263333272696`*^9, 3.744026333686822*^9}, {3.7440264466092157`*^9, 
   3.744026455032035*^9}, 3.7440268175998335`*^9, {3.7440269027891397`*^9, 
   3.74402690966479*^9}, 3.7440269787479076`*^9, {3.744029690033039*^9, 
   3.744029692564703*^9}, {3.7440319464251547`*^9, 3.744031958884856*^9}, {
   3.7447813397179193`*^9, 3.7447813504072423`*^9}, {3.744781404153472*^9, 
   3.744781431958414*^9}, {3.7447816902539253`*^9, 3.7447816911977787`*^9}, {
   3.744781743462886*^9, 3.744781749581935*^9}, {3.7447818095398273`*^9, 
   3.744781891246031*^9}, {3.744781945957777*^9, 3.744781947773471*^9}, {
   3.7448124741019745`*^9, 3.7448124785482807`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"21e89fd6-8cd6-4d85-86c7-549757c85167"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {23., {0., 23.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {23., {0., 23.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{5, 12}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{5}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2, 5}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 1, "Dimensions" -> 2, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {359., {83., 95.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7449602493122196`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"06a6e6ad-e0fb-48fa-bfd9-8fe8d8480169"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {23., {0., 23.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {23., {0., 23.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{5, 12}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{5}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{5, 5}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{5}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2, 5}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 1, "Dimensions" -> 2, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {359., {114., 126.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7449602493361406`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d852698d-8c8f-4c12-8b90-dad5fd148d29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"netOne", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "\"\<Weights\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744781452631176*^9, 3.7447814671252246`*^9}, {
  3.7447815686484814`*^9, 3.744781608741047*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"46e62ca2-b95e-482d-9a6e-2b065a6246c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.012415491975843906`", ",", 
     RowBox[{"-", "0.0017410542350262403`"}], ",", "0.00332348863594234`", 
     ",", 
     RowBox[{"-", "0.0008041795808821917`"}], ",", 
     RowBox[{"-", "0.015130085870623589`"}], ",", "0.0032118363305926323`", 
     ",", 
     RowBox[{"-", "0.017771007493138313`"}], ",", "0.015539806336164474`", 
     ",", "0.0023342014756053686`", ",", 
     RowBox[{"-", "0.012783610261976719`"}], ",", 
     RowBox[{"-", "0.017029983922839165`"}], ",", 
     RowBox[{"-", "0.01774386689066887`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.013498460873961449`", ",", "0.008592299185693264`", ",", 
     "0.003973054233938456`", ",", "0.003249425208196044`", ",", 
     "0.01419709250330925`", ",", 
     RowBox[{"-", "0.00796722061932087`"}], ",", "0.01526135765016079`", ",", 
     "0.011026386171579361`", ",", 
     RowBox[{"-", "0.010083657689392567`"}], ",", "0.007017128635197878`", 
     ",", 
     RowBox[{"-", "0.0009526028297841549`"}], ",", "0.0022040382027626038`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0028387524653226137`"}], ",", "0.02016397751867771`", 
     ",", 
     RowBox[{"-", "0.00472625158727169`"}], ",", 
     RowBox[{"-", "0.008827283047139645`"}], ",", 
     RowBox[{"-", "0.01681312546133995`"}], ",", "0.000866730697453022`", ",", 
     RowBox[{"-", "0.010211796499788761`"}], ",", 
     RowBox[{"-", "0.0032610653433948755`"}], ",", 
     RowBox[{"-", "0.007453531492501497`"}], ",", 
     RowBox[{"-", "0.00951678492128849`"}], ",", 
     RowBox[{"-", "0.0037253478076308966`"}], ",", 
     RowBox[{"-", "0.012680360116064548`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0023108927998691797`", ",", 
     RowBox[{"-", "0.0015959249576553702`"}], ",", 
     RowBox[{"-", "0.0035650788340717554`"}], ",", 
     RowBox[{"-", "0.0038767263758927584`"}], ",", 
     RowBox[{"-", "0.012596935965120792`"}], ",", "0.005330631975084543`", 
     ",", 
     RowBox[{"-", "0.010566945187747478`"}], ",", "0.0011391481384634972`", 
     ",", "0.01862403005361557`", ",", 
     RowBox[{"-", "0.00436824606731534`"}], ",", 
     RowBox[{"-", "0.024796143174171448`"}], ",", "0.0005823885439895093`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.011807825416326523`", ",", "0.0009181876084767282`", ",", 
     "0.010540669783949852`", ",", "0.005667731165885925`", ",", 
     RowBox[{"-", "0.008394010365009308`"}], ",", 
     RowBox[{"-", "0.009278178215026855`"}], ",", 
     RowBox[{"-", "0.005703271366655827`"}], ",", 
     RowBox[{"-", "0.009960504248738289`"}], ",", 
     RowBox[{"-", "0.008009159006178379`"}], ",", "0.0048688058741390705`", 
     ",", "0.0002526737516745925`", ",", 
     RowBox[{"-", "0.0010136007331311703`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7449602834992914`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"ed722d58-3a49-4ce1-8241-cc1b2adee0c2"]
}, Open  ]],

Cell["The initial random weight values can be shown.", "Text",
 CellChangeTimes->{{3.7448880364692507`*^9, 
  3.7448880569306917`*^9}},ExpressionUUID->"b43261e8-bcf5-4546-96b5-\
b9cb3dd53653"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"NetExtract", "[", 
     RowBox[{"netOne", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "\"\<Weights\>\""}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", "0.01", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7447816384580374`*^9, 3.7447816752372875`*^9}, {
  3.744782012598631*^9, 3.7447820317096353`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5075e7df-1f1c-4920-8ab9-13a3822cde29"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.644], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.644], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.03, 0}, {-0.019999999999999997`, 1.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{39.701470588235246`, 144.6220588235294}, {
          160.2657952734309, 179.00131382835664`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.019999999999999997`, 0}, {-0.009999999999999998, 
           11.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{143.6720588235294, 
          248.5926470588235}, {-17.589390275826503`, 179.00131382835664`}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.009999999999999998, 0}, {0., 21.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{247.64264705882346`, 
          352.5632352941176}, {-195.44457582508392`, 179.00131382835667`}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0., 0}, {0.010000000000000002`, 17.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{351.61323529411754`, 
          456.5338235294117}, {-124.30250160538094`, 179.00131382835667`}}],
        StatusArea[#, 17]& ,
        TagBoxNote->"17"],
       StyleBox["17", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.010000000000000002`, 0}, {0.020000000000000004`, 
           9.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{455.5838235294117, 560.5044117647059}, {
          17.981646834024957`, 179.00131382835667`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.020000000000000004`, 0}, {0.03, 1.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{559.5544117647058, 664.4749999999999}, {
          160.26579527343088`, 179.00131382835667`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.0312, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.03, 0.03}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.744960311823906*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"df12c215-55c6-4986-916c-006699b5a1e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"NetExtract", "[", 
     RowBox[{"netTwo", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "\"\<Weights\>\""}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", "0.1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7447819077674613`*^9, 3.7447819333890777`*^9}, {
  3.7447820026785173`*^9, 3.7447820057176867`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"68165337-3db6-45bb-8e46-4d87e6cc2ea9"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.8, 0}, {-0.7000000000000001, 6.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{29.009947958366716`, 
          67.56273607120991}, {-104.26547405708101`, 183.7323820320732}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.7000000000000001, 0}, {-0.6000000000000001, 8.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{66.61273607120992, 
          105.1655241840531}, {-199.94809275346574`, 183.7323820320732}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.6000000000000001, 0}, {-0.5, 2.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{104.2155241840531, 142.76831229689634`}, {
          87.09976333568845, 183.7323820320732}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {-0.4, 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{141.81831229689632`, 180.37110040973954`}, {
          39.2584539874961, 183.73238203207322`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.4, 0}, {-0.30000000000000004`, 3.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{179.42110040973952`, 217.97388852258274`}, {
          39.2584539874961, 183.73238203207322`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.30000000000000004`, 0}, {-0.19999999999999996`, 
           1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{217.02388852258272`, 255.57667663542594`}, {
          134.9410726838808, 183.7323820320732}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.19999999999999996`, 0}, {-0.09999999999999998, 3.},
            "RoundingRadius" -> 0]},
         ImageSizeCache->{{254.6266766354259, 293.17946474826914`}, {
          39.25845398749607, 183.73238203207322`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{-0.09999999999999998, 0}, {0., 3.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{292.2294647482691, 330.7822528611123}, {
          39.25845398749607, 183.73238203207322`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.09999999999999998, 4.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{329.8322528611123, 
          368.3850409739555}, {-8.5828553606963, 183.73238203207322`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.09999999999999998, 0}, {0.19999999999999996`, 6.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{367.4350409739555, 
          405.9878290867987}, {-104.26547405708104`, 183.73238203207322`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.19999999999999996`, 0}, {0.30000000000000004`, 5.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{405.0378290867987, 
          443.5906171996419}, {-56.42416470888867, 183.73238203207322`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.40000000000000013`, 0}, {0.5, 3.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{480.24340531248515`, 518.7961934253284}, {
          39.25845398749607, 183.73238203207322`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.5, 0}, {0.6000000000000001, 3.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{517.8461934253284, 556.3989815381716}, {
          39.25845398749607, 183.73238203207322`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.6000000000000001, 0}, {0.7, 4.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{555.4489815381716, 
          594.0017696510148}, {-8.5828553606963, 183.73238203207322`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.7, 0}, {0.8, 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{593.0517696510148, 631.604557763858}, {
          39.25845398749607, 183.73238203207322`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.8, 0}, {0.9, 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{630.654557763858, 669.2073458767012}, {
          39.25845398749607, 183.73238203207322`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.8340000000000001, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.8, 0.9}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7449603197009687`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ed24d0c5-cc90-4f15-8ac3-7561452c318d"]
}, Open  ]],

Cell["Examples are left in comments below (**).", "Text",
 CellChangeTimes->{{3.744888068052969*^9, 
  3.7448880829142714`*^9}},ExpressionUUID->"48f44fa5-a894-4358-babe-\
ef3b783c8a0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"trained", "=", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"netOne", ",", "train", ",", 
      RowBox[{"BatchSize", "\[Rule]", "256"}], ",", 
      RowBox[{"ValidationSet", "\[Rule]", "test"}], ",", 
      RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", 
      RowBox[{"LossFunction", "\[Rule]", 
       RowBox[{"CrossEntropyLossLayer", "[", "\"\<Binary\>\"", "]"}]}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ADAM\>\"", ",", 
         RowBox[{"\"\<Beta1\>\"", "\[Rule]", "0.9"}], ",", 
         RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.0003"}]}], "}"}]}], 
      ",", 
      RowBox[{"MaxTrainingRounds", "\[Rule]", "25"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"trained", "=", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"netOne", ",", "train", ",", 
      RowBox[{"BatchSize", "\[Rule]", "256"}], ",", 
      RowBox[{"ValidationSet", "\[Rule]", "test"}], ",", 
      RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", 
      RowBox[{"MaxTrainingRounds", "\[Rule]", "25"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"trained", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"netOne", ",", "train", ",", 
     RowBox[{"BatchSize", "\[Rule]", "256"}], ",", 
     RowBox[{"ValidationSet", "\[Rule]", "test"}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<SGD\>\""}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "25"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzzlIAmAAxXGxkiCCoKDsGMIWM0shgggTO0gDF4UgsANFQRESNZEoEBsk
IogIjIwIggoro/KIUFFBGzUcyrKLUkihAoccKvJ9w+MHb/u3ymckSiqFQmku
DcrWN2+ZmbzAuPBAHD1lsttLDgyNcWCtvjIBAyYn0fRFz8Iiaz8HNdp0AX78
8IswzDuoYJV8p2Zp0B0QVcOa7UgdlAgdTTDX9tkCLWdRNlSwy7hwSpfpIb8q
0Qvloqd+aLsxDsKdcoYYPicvibHMvISo5kthSO6SwT3tyiS8oLkVUKzPE4/o
1kU44f2zwe7hPiesj44QY/7xc2iOy73Qv2xQdqC3SFXDXeO3AVoZwlmo0a/N
wcdGngXaG+xbULtxSGSnupxwNcUl3h//umCcIz2BQd+rB77Fij6oCl8HYWfo
LgJ1V8o09JuTL3Ap65l2ZPMCSlWB+A8wLvXo
  "],
 CellLabel->"In[37]:=",ExpressionUUID->"8f49f243-e78b-458e-89eb-801b4aee1daf"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {23., {0., 23.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {23., {0., 23.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{5, 12}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{5}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2, 5}],
                     "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 1, "Dimensions" -> 2, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {359., {83., 95.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.744960660797453*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"ebdfecd1-5f3e-439b-b35f-9ea7ad0ad35a"]
}, Open  ]],

Cell["\<\
The first  sample row is passed as an argument to show the predicted target \
value.\
\>", "Text",
 CellChangeTimes->{{3.7448881002725496`*^9, 
  3.7448881189622717`*^9}},ExpressionUUID->"76bb11f1-a308-48f0-ae9c-\
378a8aaa0ba0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "[", 
  RowBox[{"xTestStandardized", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.744026358435226*^9, 3.7440263619981747`*^9}, {
  3.7440289983970737`*^9, 3.744029013679607*^9}, {3.744812587596863*^9, 
  3.7448125967674055`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"96c6d357-204e-4bdf-99c0-e4d1b18204c3"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.74496068016766*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"68ecaac0-c2c9-4e17-a1e3-b33b4f4518ed"]
}, Open  ]],

Cell["A classifier measurements object can be created.", "Text",
 CellChangeTimes->{{3.7448881241514587`*^9, 
  3.7448881373542905`*^9}},ExpressionUUID->"1c4406c0-a844-4148-a57c-\
9474633e09a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trained", ",", "test"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7440265485324917`*^9, 3.7440265541895714`*^9}, {
  3.744026837131342*^9, 3.744026842506877*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"3389ec30-a580-4d52-83f7-95f4503675ec"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Net\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["2997", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[
                  
                  RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                   0.4746151541446917}, {0.7191592194171378, 
                   0.5062062867304069, 0.8158644505878024}, {
                   0.47333333333333333`, 0.7727052229508918, 
                   0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                  ImagePadding -> 0.2, 
                  PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                  PlotRangePadding -> Automatic, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Net\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["2997", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.7093760427093760423`5.448694463343231", "\[PlusMinus]",
                     "0.0082953183979210202`2."}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierMeasurementsObject, 3959232, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           ClassifierMeasurementsObject, 
            8307041757936322794128537323658715220821900724356848581584, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  BoxID -> 8307041757936322794128537323658715220821900724356848581584,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.744960692210003*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"2062b6e3-1b0a-4966-a26a-f93dedd04afd"]
}, Open  ]],

Cell["A list of properties for this object can be extracted.", "Text",
 CellChangeTimes->{{3.744888140159869*^9, 
  3.744888150458277*^9}},ExpressionUUID->"a09ce092-de90-40ce-a6f8-\
27c0c4378cb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.744028867631168*^9, 3.7440288708972006`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"81bae637-bb37-45be-a024-012ed82f05b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Accuracy\"\>", ",", "\<\"AccuracyBaseline\"\>", 
   ",", "\<\"AccuracyRejectionPlot\"\>", ",", "\<\"AreaUnderROCCurve\"\>", 
   ",", "\<\"BatchEvaluationTime\"\>", ",", "\<\"BestClassifiedExamples\"\>", 
   ",", "\<\"ClassifierFunction\"\>", ",", "\<\"ClassMeanCrossEntropy\"\>", 
   ",", "\<\"ClassRejectionRate\"\>", ",", "\<\"CohenKappa\"\>", 
   ",", "\<\"ConfusionFunction\"\>", ",", "\<\"ConfusionMatrix\"\>", 
   ",", "\<\"ConfusionMatrixPlot\"\>", 
   ",", "\<\"CorrectlyClassifiedExamples\"\>", 
   ",", "\<\"DecisionUtilities\"\>", ",", "\<\"Error\"\>", 
   ",", "\<\"EvaluationTime\"\>", ",", "\<\"Examples\"\>", 
   ",", "\<\"F1Score\"\>", ",", "\<\"FalseDiscoveryRate\"\>", 
   ",", "\<\"FalseNegativeExamples\"\>", ",", "\<\"FalseNegativeRate\"\>", 
   ",", "\<\"FalsePositiveExamples\"\>", ",", "\<\"FalsePositiveRate\"\>", 
   ",", "\<\"GeometricMeanProbability\"\>", 
   ",", "\<\"IndeterminateExamples\"\>", ",", "\<\"LeastCertainExamples\"\>", 
   ",", "\<\"Likelihood\"\>", ",", "\<\"LogLikelihood\"\>", 
   ",", "\<\"MatthewsCorrelationCoefficient\"\>", 
   ",", "\<\"MeanCrossEntropy\"\>", ",", "\<\"MeanDecisionUtility\"\>", 
   ",", "\<\"MisclassifiedExamples\"\>", ",", "\<\"MostCertainExamples\"\>", 
   ",", "\<\"NegativePredictedValue\"\>", ",", "\<\"Perplexity\"\>", 
   ",", "\<\"Precision\"\>", ",", "\<\"Probabilities\"\>", 
   ",", "\<\"ProbabilityHistogram\"\>", ",", "\<\"Properties\"\>", 
   ",", "\<\"Recall\"\>", ",", "\<\"RejectionRate\"\>", ",", "\<\"Report\"\>",
    ",", "\<\"ROCCurve\"\>", ",", "\<\"ScottPi\"\>", 
   ",", "\<\"Specificity\"\>", ",", "\<\"TopConfusions\"\>", 
   ",", "\<\"TrueNegativeExamples\"\>", ",", "\<\"TruePositiveExamples\"\>", 
   ",", "\<\"WorstClassifiedExamples\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.744960703587387*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"2c432757-dae9-452f-872a-6430b1b0469e"]
}, Open  ]],

Cell["Showing the accuracy property.", "Text",
 CellChangeTimes->{{3.744888155991409*^9, 
  3.7448881640261526`*^9}},ExpressionUUID->"a5a02dfa-9317-4d88-a46b-\
aea4136fe26b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7440270264153767`*^9, 3.744027030556466*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"bffa13e9-6374-452b-8033-8413b74aa803"],

Cell[BoxData["0.709376042709376`"], "Output",
 CellChangeTimes->{3.7449607097788687`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"76b9f91b-ba4d-4340-80de-060b0964ea73"]
}, Open  ]],

Cell["\<\
A confusion matrix plot shows the errors and correct predictions.\
\>", "Text",
 CellChangeTimes->{{3.744888167381627*^9, 
  3.7448881862097445`*^9}},ExpressionUUID->"f96570e3-392a-4753-9ca3-\
5dd3f016660b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.744026854320628*^9, 3.744026863974792*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"63ad733b-b686-43db-91a2-b1741de50542"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.8945401427858161, 0.7088167034634489, 
   0.30191450199700753`}, {0.9327531751016352, 0.48680126181489924`, 
   0.003348031259926591}}, {{1., 0.42, 0.}, {0.9151228592910524, 
   0.7977154960761149, 0.4812253687296346}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1102", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1102", "\" examples of \"", "0", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7132686084142394`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7202614379084967`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7167479674796748`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1102, " examples of ", 0, " correctly classified"}], 
         Row[{"Precision = ", 0.7132686084142394}], 
         Row[{"Recall = ", 0.7202614379084967}], 
         Row[{"FScore = ", 0.7167479674796748}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["443", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "443", "\" examples of \"", "1", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.2867313915857605`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.3019768234492161`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{443, " examples of ", 1, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.2867313915857605}], 
         Row[{"Row fraction = ", 0.3019768234492161}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["428", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "428", "\" examples of \"", "0", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.29476584022038566`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.2797385620915033`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{428, " examples of ", 0, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.29476584022038566`}], 
         Row[{"Row fraction = ", 0.2797385620915033}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1024", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1024", "\" examples of \"", "1", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7052341597796143`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.6980231765507839`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7016101404590614`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1024, " examples of ", 1, " correctly classified"}], 
         Row[{"Precision = ", 0.7052341597796143}], 
         Row[{"Recall = ", 0.6980231765507839}], 
         Row[{"FScore = ", 0.7016101404590614}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1530", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7202614379084967`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1530, " example", "s", " of class ", 0}], 
        Row[{"Recall = ", 0.7202614379084967}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1467", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.6980231765507839`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1467, " example", "s", " of class ", 1}], 
        Row[{"Recall = ", 0.6980231765507839}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1545", "\" example\"", "\"s\"", "\" classified as \"", "0"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7132686084142394`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1545, " example", "s", " classified as ", 0}], 
        Row[{"Precision = ", 0.7132686084142394}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1452", "\" example\"", "\"s\"", "\" classified as \"", "1"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7052341597796143`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1452, " example", "s", " classified as ", 1}], 
        Row[{"Precision = ", 0.7052341597796143}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 0.], TraditionalForm]}}, {{1.5, 
       FormBox["1530", TraditionalForm]}, {0.5, 
       FormBox["1467", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1545", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1452", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.744960714508495*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"10ff8a0a-c500-4f8c-b38f-8885312002e0"]
}, Open  ]],

Cell["More of the properties are explored below.", "Text",
 CellChangeTimes->{{3.744888197813504*^9, 
  3.744888206226188*^9}},ExpressionUUID->"cf228ddd-47ba-48e3-bba9-\
739e045c9fcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "\"\<Report\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.744031814142877*^9, 3.7440318170652685`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"09ee92ff-f579-4f54-b049-985502f9cc17"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Number of test examples\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "2997"},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Accuracy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{
                   "70.9376042709375980166`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod],
                  StyleBox[
                   TemplateBox[{"\" \[PlusMinus] \"", 
                    
                    TemplateBox[{
                    "0.8295318397921019882`2.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod]}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.6927854059135339915`3.",
                   "\", \"", "0.7259666795052180932`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                Row[{
                 "95% confidence interval: [", 0.6927854059135339915`3., ", ",
                   0.7259666795052180932`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Accuracy baseline\"", 
                   "\"Accuracy if predicting the commonest class\"", 
                   LabelStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{
                   "51.0510510510510542304`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod],
                  StyleBox[
                   TemplateBox[{"\" \[PlusMinus] \"", 
                    
                    TemplateBox[{
                    "0.913278270935497849`2.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod]}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.492244945091800612`3.", 
                  "\", \"", "0.5287760759292204904`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.492244945091800612`3., 
                  ", ", 0.5287760759292204904`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Geometric mean of probabilities\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.5737624916381514062`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0044447791732493136`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.564872933291652779`3.", 
                  "\", \"", "0.5826520499846500334`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.564872933291652779`3., 
                  ", ", 0.5826520499846500334`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Mean cross entropy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.5555397459260401627`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0077466456639334602`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.5400464545981732423`3.",
                   "\", \"", "0.5710330372539070831`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.5400464545981732423`3., 
                  ", ", 0.5710330372539070831`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Single evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "1.64`",
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Batch evaluation speed\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "19.`",RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}],"examples per millisecond",
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Rejection rate\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"0","\"%\"","percent","\"Percent\""},
               "QuantityPostfix"]},
             {
              ItemBox[
               
               GraphicsBox[
                RasterBox[{{{0.8945401427858161, 0.7088167034634489, 
                 0.30191450199700753`}, {0.9327531751016352, 
                 0.48680126181489924`, 0.003348031259926591}}, {{1., 0.42, 
                 0.}, {0.9151228592910524, 0.7977154960761149, 
                 0.4812253687296346}}}, {{0, 0}, {2, 2}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1102", TraditionalForm], {0.5, 0.5}], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1102", "\" examples of \"", "0", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.7132686084142394`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.7202614379084967`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.7167479674796748`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1102, " examples of ", 0, " correctly classified"}], 
                    Row[{"Precision = ", 0.7132686084142394}], 
                    Row[{"Recall = ", 0.7202614379084967}], 
                    Row[{"FScore = ", 0.7167479674796748}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["443", TraditionalForm], {0.5, 0.5}], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "443", "\" examples of \"", "1", "\" misclassified as \"",
                     "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.2867313915857605`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.3019768234492161`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{443, " examples of ", 1, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.2867313915857605}], 
                    Row[{"Row fraction = ", 0.3019768234492161}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["428", TraditionalForm], {0.5, 0.5}], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "428", "\" examples of \"", "0", "\" misclassified as \"",
                     "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.29476584022038566`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.2797385620915033`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{428, " examples of ", 0, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.29476584022038566`}], 
                    Row[{"Row fraction = ", 0.2797385620915033}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1024", TraditionalForm], {0.5, 0.5}], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1024", "\" examples of \"", "1", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.7052341597796143`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.6980231765507839`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.7016101404590614`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1024, " examples of ", 1, " correctly classified"}], 
                    Row[{"Precision = ", 0.7052341597796143}], 
                    Row[{"Recall = ", 0.6980231765507839}], 
                    Row[{"FScore = ", 0.7016101404590614}]}], "Tooltip"]& ]}, 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1530", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.7202614379084967`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1530, " example", "s", " of class ", 0}], 
                    Row[{"Recall = ", 0.7202614379084967}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1467", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.6980231765507839`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1467, " example", "s", " of class ", 1}], 
                    Row[{"Recall = ", 0.6980231765507839}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1545", "\" example\"", "\"s\"", "\" classified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.7132686084142394`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1545, " example", "s", " classified as ", 0}], 
                    Row[{"Precision = ", 0.7132686084142394}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1452", "\" example\"", "\"s\"", "\" classified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.7052341597796143`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1452, " example", "s", " classified as ", 1}], 
                    Row[{"Precision = ", 0.7052341597796143}]}], 
                    "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{1.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {
                    0.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{1.5, 
                    FormBox["1530", TraditionalForm]}, {0.5, 
                    FormBox["1467", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["1545", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1452", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->12,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->300,
                
                Method->{
                 "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                  Automatic, "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.7449607283453054`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"39fed3b3-25bc-4d90-8c8e-5a52cfaa30d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "\"\<AreaUnderROCCurve\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.744031908689012*^9, 3.744031914955331*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"c2b2c765-a9eb-42c9-8d60-177c9ebc7f75"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", "0.7858129391270253`"}], ",", 
   RowBox[{"1", "\[Rule]", "0.7858361067671786`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.744960741383971*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"0fe6056a-185b-4547-b1bc-ddefe4a09525"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "\"\<ROCCurve\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.744777101943762*^9, 3.744777107089433*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"bb708b66-548b-4552-8e59-b554a28fd9a1"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx13QW0lVX3LnBAQcACBUFQkBCVlu5Fd4OEIBKCICEdAoKASHdLN9Ip3SiN
AtJxugNBuu675rO+99n3zHvneMf4j9/Y//0dOfHGXM9cO0f77xt3TJEsWbKd
rydLZv/v/68yHvzOO6qZ/9tf+E4n1TbJ6x19Z+15LEvPY98l+f/v6fvdzvve
6byvd5L39/OdWWpgkv+9H3x/eLy3dwxN8r8/3Hf6vZ2846ckX2+E7wxSo5J8
/Z99Z+p26L1uh0Yn+e8Z4/v9oz28Y2yS/75xvj+QmpDkv3ei7+x9T2Tre2JS
kv/+Kfzv77QnXac9U5L8e6b6fkdqWpJ/X4D3d/aO6Un+vTP47/3uQIbvDsxI
8u+f6fs9qVlJvh8BPtzNO2Yn+f7M4fenx5HMPY7MSfL9mus7i9S8JN+/AP/R
0zt+TfL9nM/vZ+8/P+j95/wk398FvrNJLUzy/Q7wyb7esSjJ938xvaejdyxO
8vMIsNSSJD8f+p1v96b/du+SJD+vpfS+b71jaZKfX4ClliX5edIZuux/t8v+
ZUl+vsvpA128Y3mSn3eApVYk+fnT73U9mLHrwQBLraQPdfUOGr8fAZZaleT3
hc7c/XCm7ocDLLWaPtLdO2j8PgVYak2S3y86y/dH3//+aIClfqOPfe8dNH7/
Aiy1NsnvI/1Brz+y9vojwFLr6D97eQeN39cAS61P8vu73lRq/s3WYs2qm6TO
1uf4h32OB1hqg3Mz7RN9vIPG73+ApTaaXpXGj151sK22/H3QH/U7mb3fSRp/
L5t8Twkv4x00/n42ua/XSXnqFFs0/r4CXi8bMaVsRMDrUpv5ekRZ76Dx90dP
m2qLxt9jwOvlIqeWiwx4XWoLX48s5x00/l7p6dNs0fj7DXi9fNS08lEBr0tt
5etR5b2Dxt/3VpO+e/mgQ7FdlWdMt0Xj7z/g9QrR0ytEB7wutY2vR1fwDhrn
B3rmDFs0zhcBr5uYGSZmm/v59lTG+WQ7X4+xB43zCz1rpi0a55uA1yvGzqwY
u920PP3wgx7j+yjjfLSDr8dW9I4d7vvZXxnnK3r2LFs0zl8Br1eKm1UpLuB1
qd/5elwl76BxfqPnzLZF43wX8Hrl+NmV4wNel9rJ1+MreweN8yE9d44tGufH
gNerJMypkhDwutQu81nIX7WefjRIeW5CFe/Y5X7eg5VxfqXnzbVF43wb8HrV
xLlVEwNel9rN1xOregeN8zH96zxbNM7PAa9XuzOv2p2A16X28PU71byDxvmb
nv+rLRrn8z3m8cM1/cfs+FF5fvV/f63+b8DrUnv5+r/VvYPG+Z9eMN8WjetB
wOs17s6vcTfgdal9fP1uDe+gcX2gFy6wReN6EfB6zXsLat7b5/6+hivj+rGf
r9+r6R00rif0ooW2aFxfAl6v9d/CWv8FvC51gK//V8s7aFxv6MWLbNG4/gS8
Xvv+otr3aVyPDvr+64ePvYPG9YluKHXQhI8+9HfaPCOUcb2i//p4sHfQuH7R
jZ6uaPh0xUF3PhqpjOsb/fdftmhc7wLev/Jpw5VPA94vdYjvH5zHO2hcD+lG
UofMmfQFO/99Z5Qyrpf033mGeMchd74YrYzrKd342cpGz1bSuL4eMtvnz3sx
e88vyuf/tkXj+ks3XvWs0apnAe+XOsz3D/nEO2hcn+nGUjSu1wHv/2Sod9C4
fh9257+xyk2er2r8fNVhs+CT12a2GT1OGdf7w+78MV75wnlbNO4HDpuft/TJ
93GjicpNVj9vvPo5jfuFI74vDP3UO2jcP9BNpGjcPwS8/9MfvYPG/QTd9MXq
Ji9W07i/OOLOH5OUL16wReP+g2665kWTNS8C3i91lO//8TPvOGp+z3Yn6P6b
U3zj71Mb9y9HTb5v8uRv2WeqclOpo+7vcZoy7nfoi58N8w4a9z/0Fy/XNH25
hsb9EP3PRVsB75f7oYD3//ay6W8vA94vdYzvH5bXO2jcL9FfSB0zi9a0HrD3
ijbup465v/fpypfyDv8n73Aa91t0s2Rrv0i2lsb9V8D7/7EV8H65/wp4/9pk
3vEH3y9FXxqezzto3I/RzaQC3i/3Z/TlfD9dyvcTjfs1unnydc2Sr6Nx/xbw
/ku2At4v93MB71+X3Dv+5Pul6Ms/5fcOGvd7dHOpgPfL/R99Jf+Iy/lH0Lgf
pFukWN88xfo/zbuJ0w5nrzBDGfeL9JXLtmjcPwa8f30K7zjO90vRV0YU8A4a
95d0C6nj7nqgjfvP4+aXYifeHLlspvLVAiOvFBhJ4/70uLs+zPL9dNDLFhGp
Zyu3fGVDi1c20Lifpa9esRXwfrm/DXj/hle84wTfL0VfHVnQO06487827nfp
llI07n/pawVHXS04isb9MP3lqxtbvrrxhPn+QPHltXrM8Y3ry1xl3D/T167a
onE/HfD+ja96x0m+X4q+NqqQd9C436a/lAp4v9x/09cL/Xyt0M8nTeir3RLX
XdDG/flJdz2cp9wq5aYvU26icf9OX79mK+D9cj9/0jSvvbRMutK/KrfalNI7
TvnG/T59/efC3kHj/p9uJRXwfnkeoG8UHn298Ggazwd061SbW6XaTOP5IOD9
120FvF+eFwLevzmVd5zm+6XoG6M/9w4azxN0a6mA98vzxWl3f6F98/Nfbnz+
y2lzavKVn/ssnK+M55HT7nq/wLf5562/L72y0Deu19pfvbal9WtbaDzP0Ddv
2Ap4vzzfBLx/y2veccZszVLtgzJdFinj+Ye++UsR76DxPHTG3T8sVv5Kisbz
En2ryJibRcacMRk27dta/1ttPE/RbVJv/Sr1VhrPVwHvv2kr4P3yfBXw/q2p
veMs3y9F3xpT1DtoPH/RbaQC3i/PY/TtomNvFR1L4/nsrLt/os+eb9EyWZYl
yl+n2dYmzTYaz3P07Vu2At4vz3dn3f2X9tfb0njHOd94/qNvjy3mHTSeB8+Z
Mffvvdh8msb90FLlr6XOmcqZJy/vMEwbz5N0ULFxt4uNo/F8SbdNu/3rtNtp
PG8GvP+2rYD3y/PnOXc/pm3Pfl+m/Ms3nk9pOR1mofG8+pd5ViZv7YxFlvnG
/YJ2Yam/zI6vjiX+EaaN513ank3nVaPxvEvL6bUVjedfuqfUX+5+YbnvnsPb
zhw4WxvPy/TncoKm8fxM/2tP17/SeH6mN2+yReN5mu4lJ3Qaz9cBX9+e3q8H
fH153v7L3d9o/3vHFo3ncdpeDVql+tvkXfbU+4mt8I37H208v9Ny+chK43me
/lyKxvM9ba8uv1an8Xwf8PXt5aZ1wNeX5/2/TdixWUHXn2n3kqLx/E8XkQsU
jX7A3+7+bqXyXXv5mk+jX0Bv2WyLRr+A7i0XNBr9A7qIvZzdCPj60k8I+Pr/
2gr4+tJfCPj6re0F7Dy/vtR5szDq89ETN2rL5e2D8+5+cpUy+hPnTYvXz+Qz
7bWLSNHoX9D26ji/xnl3/6iN/gYtl8uvaPQ76N5SNPofdFG5oNLof9D37OV0
AY3+B711i63z5h3755BhtTL6IXQfuQDT6I+cd/fH9OmGrwxY+qd2UXt5vkmj
f0Lfu2uLRj+Ftlfvr1Jf8I3+ygV3v7tGWS7vH9Lov9BFpS6Y0X0WftD0B230
Z2h7N7Cg5gV3/6yN/s0FU3FW6cMpC/ymLLcPbWj0d+g+UjT6PRfc/bV2Mbnh
oNEPov+ztx8LafSH6G1bbdHoD9F95QaFRr/ognmy8+K3v9/WLmZvX27R6CfR
/92zRaO/RNu7lzZpLrr747XK6D/RcnuTjUa/iS4mddFsu/79m12maaP/RNu7
n4W1aPSfaLkd+vqiuz+ne7xI693SrvON+3P60xwrW5x+qI1+Ft1XikZ/66K7
v1/vO6RKpRdDf6Nxv7/B9/xON5YV+kq7uNyw0eiX0fft7dkiGv2zi+5+X3v7
Nls0+mt0P7mBu2iajR1QK/jtjcrov9HF7e3dbRr9OPr+f7Zo9Odoe/f3ddp/
fKNfR8vtYHYa/Tu6uBSNfh5t7w4X1abRz6O3p23rHQFfX/p5AV9fikZ/jy4R
NK540Lh/3PMRnW7dO94dmzb6gfSD2ovv1178j3s+2qSMfiG9Y7stGv3Df0zH
yGbeXxCN5xHt/h+d6vfRKRr9RrrE+KDi44No9B/pB/dt0ehHXvK9o+3r3kGj
P0n3P/WRd1wyhwfm/vDpdG30Ly+55yftElI0+puXTPa0dxObxGs/WFzHO2j0
P+kdr7fzDhr9ULq/FI3+KF0yeHyJ4PE0+qX0wzpLHtRZcsk9v21WRj+V/n2H
LRr9VXpAjtP9c5ym0W+lS04ILjEhmEb/NeDrP7AV8PWlH3uZX7/dG95Boz9L
Dzidwzto9GvpklI0+rf0wyV1vYNGPzfg67/R3jsumyG/Hji8rro2+r30AKnL
7nlWG/3gy+Zq/okzUy7WLhUyoWTIBBr9YvpR3aUP6y697J6PtdE/pnf+botG
P/myKbH/y85tHmsPzHlmQM4zNPrNl93z9hblUhNDSk4ModGPvmymN/i07O+N
tR89tHXZPT/T9uyRbp02+tlXfO9s/6Z3XHHPy9rod9MDz+T0Dhr9b7qUFI1+
OP1oaT3vuGLq9T4S1DnlVmX0x+mdb3bwDhr9cXqgFI1+OV06dGKp0Ik0+uP0
43rLHtVbdsX1B7TRP6d37bRFo59OD8p1dmCus1fMb69M3XqojTb67XTpSaGl
JoXS6L9fcf0I2t7tZdmp/fiRLRr9+quuv0DLn0v6bb7Rb9De1eEt77hqDv3+
ON/p77TR/7/qnve1B53N5R001gPo0lI01gfox8vqe8dVk63Wny9yH9XG+sFV
1y/Q3vXWN95BY33hqhl8bcbfQz/crjxI6qrrN2hjPeKqudK1/fJL/bXLhE0q
HTaJxnoF/aT+8sf1l9NYn6B377J11fUTtLF+Qf+Q+9yg3OdorGdcNcWfFxpQ
6C8a/QR62qTntcZ8tkO5zOSw0pPDaKyH0E8e27rqnue1sV5yzffub972Dhrr
J/QP53J7B431lGsmMfupD4JHaJeRorHeQj9Z3sA7aKy/0Lvf7ugdNNZjrrn+
g/YPUjTWZ+iy4ZPLhE+msT5DP22w4kmDFTTWa+g9u23RWL+hB0s78pqpu3lO
Yukb2ljfoctKQ/Ka65f87ntN5U6HpxWn0Q/RxnoQ/fSJLRrrQ9dNqotFZ8ZO
0pZ2Zrrrrn9Bd+iYvHPVKG2sL9HSzfyYxnoTXVaKxvoTLe3MhjTWowK+fjrb
0Az4+rI+dd31S3YqD5a6bg4+OFtmQSVtrGfR5Wx7cwqN9S36WUPb4Lzu+jH0
h2Pmv/lgHo3+iTbWx66bH97/Lqj+fzT6JbuU9+6xRWM9jR4i7VAa62t0OWmI
XjeXfyu5dVU9Gv0WbazH0c+e2qKxPnfDt7RH09NYr7thipVLOTrZKm3pluah
sZ53w/V3tMtJ3TBTz9gbzt3KWP+jpX3a6Ibr72hjfZC23dT039JYH7xhEtos
zrelpfYQKRrrhTdc/0a7vG23TqWxPkg/b2QbrjdMnTvdX6Tdqo31Q3rfXls3
XD9HG+uL9FBpr9JYb7xhVv9U9u8Ob+xRLi8NVxrrkfTzZ7ZuuP4PnfLdNMv3
dqTRz9HG+uVNY6+WGQ9oS3v2HRrrm7R0Zz+hsd550/WLaPnzzLxXubzUTddP
0sb6KC3t3MY01ktv+rnVpLbd3Hc601hPpYdK3XT9K22sr9IVbPt2Go31VvpF
Y9vApbH+Su/fZ4vGeiz9o7RrA76+rM8GfH1p0N40g1rYS6421m9vun6a9ovn
tmis797yLe3Zd2ms99LSjf30lrkU/cbhgbn3+Ua/ji4qN4DaWC+mK0jRWD++
5fp92tLObUJjfZm23dx3u9wyU95Y/W3ey9pYf77l+of7lX+UumUSFvQrM7Iw
jf4gXadQlTdvjNXGejZtbDt4+i3XH9TGevYts/pguqBiodovm9iGMY317luu
f3ZA+cB+W7dMysa3tkwsp431cXqYtI9prJfTaBjfcv05bayf3zLtQ9f+HDFT
++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
Rv7ggu9B9vKVTvsXiQ/TmK+LcPkD7cgIKd+Yv6NrSMA4wnjX0kIxebQxnxfh
8graq2z8+FmE+SR+5DcVy2tjni/S92tSkS7voI15v0gzrFHJubOaaMvyXHoa
84C0tFE+iHT5CW3MC9KfSNGYH4w0l7bHnInrQiPvQBfIsjBFleHasvz2OY35
w0iXf9CW+HS5SCPLf7No5CO0Mb8YaW6ESAPbN/ITdNEaOxdXO0IjH0HbbuCv
V7VrSEW6/AQd/La946CRh6BL95UVdN/IP2hj3jLSTLHtpg+0ZbmwEY15zEiX
l9CW+HjrSBNZTp7ofSNPQVdYEnejdi1tzHNGuvyE9rdSNOY9aVle7B1pZqVc
nH7J1zTyE9qYB4008V3s/4C2xNmHRLq8hTbmRekxv9iiMT9KR5WTFUTfmCeN
NFXPphpcb4J2TVlAjHR5DvrXIrs3LluqjflTevUqWzTmUSNdHoS+N6t72OOd
2qklME9jfjXS5UPo2t7TWsNzNPIitPezqLcynEZ+RLuzLGDSmIeNNI+O/DLi
2VMa+ZF/fDe0l9t3tI//aYvGPC39qQT8I13+hF41ISF29afamLelx0jcn8b8
LR0VKeXyLPSLO0vsHbxv5FO0Ma9L15SBARrzuZH+vgX/M/Is9PpdsuCgvNqO
GzynMd8b5Tu1FI35XlqWG9+hMe8b5fIz9KvZ9u5PPkJbxhU+pDEfHOXyNtqf
StGYH6ZlObFIlJHl6jnamC+OcvkcbRl/KB9ltkTk/HTDBm3MI9M1paJcHodO
W+dS61ePaWNeOcrlc+h2G8dO/fI6jXwOvfPd8n9s+ldblicbR7m8jjbmoaPM
2wPvPEmV+pJv5Hnob207MxuNfA+9v6IN4NDI69AZV6Sdm6YOjbyOtoyLfBVl
uqXZf+brdtqY145y+R36aPdeKXYM0O4sFeXyO3TW87m9J14aeR66dwn5DfWN
PI825sVpWW7tE2VOzBu/eOduGvkfbcyXR5kc8rhOIw9ED+xwN03HSG0ZlxlK
Yz6dHjvGVpTLE9Hn/pQGhjLm2eno8rLC6vJFl33L7UEGbcy/R7n8kHYtWUCN
Mj+iYa+M+Xh6zWpbNObl6TQywENjfj7K5ZPof/47cGNfRRp5IVr+85trd5EF
Vhrz+FEuT6R94ritKDNyX57q33WnkTfSxvw+/ZkMDNGY548y13Nc++HgSO2x
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
/wNhvz6/
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2kMQIIARRcG1bdu2bdu2bdu2bdu2bdu2N5tO5dA196l6t5+wUftK7QIF
CBAgIA1CBwiwnR1sYytb2MwmNrKB9axjLWtYzSpWsoLlLGMpS1jMIhaygPnM
Yy5zmM0sZjKD6UxjKlOYzCQmMoHxjGMsYxjNKEYyguEMYyhDGMwgBjKA/vSj
L33oTS960oPudKMrXehMJzrSgfa0oy1taE0rWtKC5jSjKU1oTCMahv7/j+tT
j7rUoTa1qEkNqlONqlShMpWoSAXKU46ylKE0pShJCYpTjKIUoTCFKEgB8pOP
vOQhN7nISQ6yk42sZCEzmchIBtKTjrSkITWpSEkKkpOMpCQhMYlISALiE4+4
xCE2sYhJDKITjahEITKRiEgEwhOOsIQhNKEISQiCE4ygBCEwgQhIAP6FChDg
P/zlD7/5xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ97
3OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxl
DrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUP
velFT3rQnW50pQud6URHOtCedrSlDa1pRUta0JxmNKUJjWlEQxpQn3rUpQ61
qUVNalCdalSlCpWpREUqUJ5ylKUMpSlFSUpQnGIUpQiFKURBCpCffOQlD7nJ
RU5ykJ1sZCULmclERjKQnnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUOsYlF
TGIQnWhEJQqRiUREIhCecIQlDKEJRUhCEJxgBCUIgQlEQALwL6T++csffvOL
n/zgO9/4yhc+84mPfOA973jLG17zipe84DnPeMoTHvOIhzzgPve4yx1uc4ub
3OA617jKFS5ziYtc4DznOMsZTnOKk5zgOMc4yhEOc4iDHGA/+9jLHnazi53s
YDvb2MoWNrOJjWxgPetYyxpWs4qVrGA5y1jKEhaziIUsYD7zmMscZjOLmcxg
OtOYyhQmM4mJTGA84xjLGEYzipGMYDjDGMoQBjOIgQygP/3oSx9604ue9KA7
3ehKFzrTiY50oD3taEsbWtOKlrSgOc1oShMa04iGNKA+9ahLHWpTi5rUoDrV
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
yUNucpGTHGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJSUJiEpGQBMQnHnGJ
Q2xiEZMYRCcaUYlCZCIRkQiEJxxhCUNoQhGSEAQnGEEJQmACEZAA/Ausf/7y
h9/84ic/+M43vvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH
29ziJje4zjWucoXLXOIiFzjPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd
7GInO9jONrayhc1sYiMbWM861rKG1axiJStYzjKWsoTFLGIhC5jPPOYyh9nM
YiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/+tKH3vSi
Jz3oTje60oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSiIQ2oTz3qUofa1KIm
NahONapShcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zkIic5
yE42spKFzGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJiE884hKH2MQiJjGI
TjSiEoXIRCIiEQhPOMIShtCEIiQhCE4wghKEwAQiIAH4F0j//OUPv/nFT37w
nW985Quf+cRHPvCed7zlDa95xUte8JxnPOUJj3nEQx5wn3vc5Q63ucVNbnCd
a1zlCpe5xEUucJ5znOUMpznFSU5wnGMc5QiHOcRBDrCffexlD7vZxU52sJ1t
bGULm9nERjawnnWsZQ2rWcVKVrCcZSxlCYtZxEIWMJ95zGUOs5nFTGYwnWlM
ZQqTmcREJjCecYxlDKMZxUhGMJxhDGUIgxnEQAbQn370pQ+96UVPetCdbnSl
C53pREc60J7/jaba0obWtKIlLWhOM5rShMY0oiENqE896lKH2tSiJjWoTjWq
UoXKVKIiFShPOcpShtKUoiQlKE4xilKEwhSiIAXITz7ykofc5CInOchONrKS
hcxkIiMZSE860pKG1KQiJSlITjKSkoTEJCIhCYhPPOISh9jEIiYxiE40ohKF
yEQiIhEITzjCEobQhCIkIQhOMIIShMAEIiAB+BdQ//zlD7/5xU9+8J1vfOUL
n/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqX
ucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbWxlC5vZ
xEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nE
RCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQnW50pQud6URH
OtCedrSlDa1pRUta0JxmNKUJjWlEQxpQn3rUpQ61qUVNalCdalSlCpWpREUq
UJ5ylKUMpSlFSUpQnGIUpQiFKURBCpCffOQlD7nJRU5ykJ1sZCULmclERjKQ
nnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQnWhEJQqRiUREIhCe
cIQlDKEJRUhCEJxgBCUIgQlEwID/H7r+c/7DX/7wm1/85Aff+cZXvvCZT3zk
A+95x1ve8JpXvOQFz3nGU57wmEc85AH3ucdd7nCbW9zkBte5xlWucJlLXOQC
5znHWc5wmlOc5ATHOcZRjnCYQxzkAPvZx172sJtd7GQH29nGVrawmU1sZAPr
Wcda1rCaVaxkBctZxlKWsJhFLGQB85nHXOYwm1nMZAbTmcZUpjCZSUxkAuMZ
x1jGMJpRjGQEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdKQD7WlH
W9rQmla0pAXNaUZTmtCYRjSkAfWpR13qUJta1OS/xLzvDw==
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2kMUIMqSBcDftm3btm3btm3btm3btm3b9uuJPrOIU5vaFjLzJmjYrmLb
AP/73/+2hvrf//6tAQlEYIIQlGAEJwQhsfV/oQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQXv/nD
f/zl3+EPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8u7zb0Z4OdKQTnelCV7rRnR70pBe96UNf
+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zm
MZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvax
nwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGf
BzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w3/85d/D
H4CABCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKT
gIQkIjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOA
ghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CG
NKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEM
YjBDGMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxi
MUtYyjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIw
RzjKMY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFP
eMoznvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//Pv0ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zg
Ja94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/wr+AAQkEIEJQlCCEZwQ
hCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSk
JBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSk
FKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQV
rWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDf/zlX7MvAAEJRGCCEJRgBCcEIQlFaMIQ
lnCEJwIRiURkohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCW
dKQnAxnJRGaykJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZy
lKcCFalEZapQlWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0
pwMd6URnutCVbnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxn
AhOZxGSmMJVpTGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcD
G9nEZrawlW1sZwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIX
ucRlrnCVa1znBje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5
xGe+8JVvfOcHP/nFb/7wH3/51+gPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBE
IhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYy
kZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpR
mSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZ
LnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkp
TGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1s
ZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zl
Gte5wU1ucZs73OUe93nAQx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb
3/nBT37xmz/8x1/+DfkCEJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJ
RnRiEJNYxCYOcYlHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclG
dnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1
alCTWtSmDnWpR30a0JBGNKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd6
0JNe9KYPfelHfwYwkEEMZghDGcZwRjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYw
k1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2cZ2drCT
XexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5LnCRS1zmCle5xnVucJNb
3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+8JFPfOYLX/nGd37wk1/8
5g//8Zd/A/4ABCQQgQlCUIIRnBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQW
sYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5
yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpUpBKVqUJVqlGdGtSkFrWp
Q13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSkE53pQle60Z0e9KQXvelD
X/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc
5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172
sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5x
nwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cN//OVf
uCcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jE
JwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSn
AAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcB
DWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZ
xGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznE
YY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEPecRj
nvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vAff/kX7AtAQAIR
mCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGY
JCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgi
FKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0
pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBABjGYIQxl
GMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZ
y1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjH
OcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95
wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zHX/6FegMQkEAEJghBCUZw
QhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJS
kJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQ
klKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCS
VrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJR
jGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWs
Zg1rWcd6NrCRTWxmS6j/z7X/H+Aw/So=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2999, 3000}]}}}], {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"1", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx13QWUldXXBnBawCKlBCRE6VBA8qW7QUKQlBJBpARFQbq7u7tBuksaAaVj
ZphOBOn6ztnP8X3mY3/fWe9a//Vb/J25986Nc/Z59rk52n/fqGOiBAkS7Hw7
QQL7v//fqNjsm62fN63m/W839f1DxbEjVh5s+8a/d/Kdunu5gENR3d74//f0
3eLM4w97jO39xn/fz3feoD9rPv9owBs/72ffTx+v7jdq+69v/PzBvkNGHLqQ
Ms+QN37fUN9nUxfqcuHesDd+/wjfv8+b82rmnpFv3J7Rvud/8tb01iPGvHH7
xvoevqV3/o8bjn/j9k7wvSPbvYCH70564/bT+b/JU6BF78lv3J8pXvqD35qr
qvemF65u9ePeqzTu71TfaeOmHM5efppv3H965Ocn3x26dLpvPB4zfD8f8Lp5
aPKZvvH40N8fKL6sZo9ZvvF4zfZ9N8l3cesu0Xj85vhuVmtJ6VSl5vrG40mf
nnh1eO8F83zj8Z3v2/v7vQuXEy/wjceb3pq56oeluy70jcd/kfOXyuk27dta
r/MiL5WMtsr4e9HnLjZvkSDzYt/4+9GjHj54tfkMjb/fEt+VMk5c1mEQjb8n
/aJ0vlrpiy31jb8vvf3rY3HHg2n8vZf57jm47fT+M2n8/el8S5+b37DcN54P
dPCxGQE3XtB4fqzwvSC86IjxG2k8X1b6bv722fxeexrPHzqNvTnpVrnHv6My
nl/0mQaJf1zyB43n22rfI3ov+LDJTzSef3SFGaUOJy24xjeej/SznX913nGH
xvNzre9tN75/t+sUGs9XuserlOYpt843nr/0pzlWND/zmMbzeb3voMoVX/2y
Zr2XpeexzD2PfauM5/sG3/M63Vxa+Gsaz3+66egfawa+v9E3Xg90qnVpzDOG
xuthk++OYU3NI0Dj9UAf7p876/OpNF4fdPaU9+Max9B4vWx2f/+eygPnHji8
rhqN1xN9rcD46UkX0Xh9bfbSdtmXpsu+Xsol9n/VpfVTGq+/Lb6n1v+0zI5G
NF6PtH00Uq2j8fqk6/Y6EtAl6Vb39+urjNcvvSbx5K2HWtN4PdP22Zh5J43X
Ny0PR+ptXkYZ/ZXx+qcP7Xia/8y3NN4P6Gw1/3iV+yiN94dt7u/1k/LP16dd
+CXr777x/kFf7dZ+2eV+NN5P6OIvC/9Y+E8a7y/0lAkva47Ku93LeqKXuX5R
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
X3TzvWXK5slh3sBprO/pnAe7Hi/3zPhAV3NpY/1/yfcA+/aSikY9gDbvRYUj
89CoD1xy88F4lrFc+ZOYod9UKHfJzQ+1UU+gB5nV24zGNOoJ9OXfI89Gd73k
fdDtYPpuB+NZxgpl1BuMD3Uzl3bBzAsSVR58yc3ntFGfoGV5OYNGvYK+GSQL
At+oV9CfVd+5qOoRGvUL2s5O516jUb+gA9+378A06hnGMlYql+ojFQHfqHfQ
k+x08kMa9Q86rKzMsHyjHkKXXxx9s1ZNGvURekbSRakXt/nLzY/pjN0PZ+h+
WBv1FDqmq/2BNOordJVzyX6uO45GveUvN/9epTy32O6NS5fQqMfQD2Z0D366
0/hId3Npo15D1zKzjQbnadRvaHPf6q4IoVHPoZ8cGTnkxfO/3Pw7nmWsVkb9
5283P9duYN8O09CoD9Erx8VGrfqURr2IfnVvsf3E9o36Ef2lDBr1pL+9zN8f
zfT9Ue31u2TB5Rv1JjpJtr37Ew6hUX+ipdww62+3nlijjPoUvSU056cbNtCo
Vxkf+95cNNYf8SxjrXLK2pdbJTlGY/pIt9s4evJXN2jUv+idacsd3/QPjXrY
3269oP1+/3vPkiW/7Bv1MrqzXX5ko1E/u+x9+MPxLD8c195fwRbQLrv5+Dpl
1Nvo9MtTzk5Rm0b9jf4uxf6zbdrRqMfRR7v/kGj7jzTqc3SWi7nNjI5GvY7u
VUKeIb5Rv6NPzhm7aOduGvW7y27drJ1Dpp+X3XojnmWsp2V9oY16IN2/w/0U
HcNo1Acve9l6n8ja+0Q8y9igfP4PmWB72U72NheN9YM26o1XfMvbdzpjGRtp
WW/QH/U9lb3vKRrz/U3KqF/Sv2IB7Rv1TPrvfw/c3FeBRn3zijcppLS5tOXX
NaNR/6SH7stT7dvuV9z8n548yQ5t1EuvuPm/9o0c1386OJRGPZUuZstvc2jU
V83PLxM6qUyo9ujICsHfbaJRf6UD6v2b8chxGtNn+gtMwH2jPktPzGDf0a64
9chm35NDy5hLG/XcK249oh3683s7jqW46k2ZbIc26r+0rX5l+YhG/feqW29o
T6/S9yPzGvWN+jAdverTL0/UMT+vbNjksmHaqB/TtjqSrQONejI954eJ+/sM
oFFfvurWO1uU7/9dyZZkfKP+TNcs/eiTHCto1KPNzw8ray7tRQtkAu4b9Woa
03ca9Wu6PgoivlHPplecPvJswOurbj2mjXr3Nd/y8ZP+mjd1ih3aqIfTTabl
M1M+GvXxa259p73uyS37Cegb9XPz35cLn1IuXDuxvfvNadTXr7n14Vblrw5V
sRU136i/m/8+vJy5aKy/tDd//KTEoOE06vXXvGlT7dBOgQm1W1/R08pHTC0f
oY16P91WCvDX3PpqmzL2A2g7+frtBI39AVpejbfNz48oby4a6ytt7CfQnbIM
KF/oIY39heu+9w0q0HvY29e96dPs0Mb+w3W3ftNOF3xn5fUc5v/vRU7zIrWx
X3Hdre9+V+5WY+rNIl+Y/3+kvbSxv0EfWVct9ch6NPY76Mypn1W99c11t/7T
xv4H/QMm4L6xH0KftOWZyTT2R+iPyss99o39kuvejOl2aJs3g4wl9tPYT7nu
1qfaWK7Q2G+h83QrNCQo0vy8ClHTK0TRWM9u579HVTCXNvZr6F/OB27/IuEN
39ivoeXjMQON/Ro6/6waH4UUvOHWy9rYz6GHvnjepEwVGvs7N7yZM+ygsX7V
vt5WJtTezIrRMypG01hP7lDGfhFdVDZUaOwf0aPyfvCg3Ega+0l0gN1umE9j
f8ncnuiK5tIueX9gq8itN9z6Vhv7UTe8WTPt0J7Q1Fb8aOxP3XDrWW07uzUr
Bm9WpZiZlWK0sZ9Fl8tuX3E09rdu+p42tJbdoXDr353K2P+i7bv57Fw09sPo
Spgwe7NiKplLG/tf9Bxbbm9w062HtbE/Rv9jbv28TjTm+XSNAadL3B9IY/+M
lnLTVBr7afTjisXMR/5Nb/YsO2isz7Wx/2b+/5VjZ1WOpbFe38V/j61sLu16
K0L+MlNqt56m58y2Qxv7ezfd+pieUyVudpU4bSznaOwH0i961LElHN/YH6Sb
SMH8lm/sF95y6+vdvufEVTGX9tqSMgF2629t7Cfe8ubOsYPG+lw7kWzA0dh/
pFskkE8Ib27Ve3Oq3tPG/iS92T7dWtHYn6STnxz804pet9z6fY8y9ivN//9e
VXPRWJ9rtyn4+cYXo2558+baoY39zltu/a4t23cLaeyH0u89mpNx9e809kfN
z6/2z9xq/2h3/Kpe3denb7n19F7f8/6pZi5tLA9pW735MojGfiudFhNiP4f6
n+fPs4PG+jzev1e/P6/6/Xj/LmOfMvZzb/vuNrJLVML3aezv3vbm369uLu3D
ZvXT/GMa+790pgbnm2woQ2M/mJbtjka3XT1AG/vF9ImMdgeFxv4xnf0XVGT+
M/aPaSn3Tb/tLZhvhzb2l2n77P56LY395tuuXqH9sRTcaexH0wMxQfWN/Wnz
82s8mF/jAY16x37lS72+fdYmlsZ+tvnvH9QwF436iHa+K1kLb09yxzf2v+kh
dnqT5Y63cIEdNOon8f695r8Lav4b799lHFDGfjp9beGwWe2Lmv/+35rmolF/
0cb+O10kyRdnd1ansR9Py9O3NY39+TveooV20KjvaN85s6BExz409vPpEkUb
ddszxvy8Wg8X1nqojf3+O66+c9D3nz99bC5tu5uZevEdV8+hG8jQRn6AtsV1
MwH2jTwBXba1rTjSWE7TUw9ntzN238gX0JF57DOORr4gwPfiqnYBEeDqT9rI
HwR4f378s7m0ZXsobYCrT2kjjxDgNXy+vMHz5dpP7MsvW4CrR2kjv0DnbvXn
ksC8NPIMdP338u17pziNfAP988GhV0pWCPAu/GmHNvIPtPms+6d97QBXr6Ib
rnjeYMVzbeQlaCn3NqWRnwhw9a5Dyq8uT8qzqx2NfAWdVwpyNPIU5vb+nMdc
2l+WqdLy/f4Brn6mjfwF/VuM/QAwt1cGjfqaNvIa9LqFjyd2nGB+f56B5tJG
niPA1du0r9ryxewAr9GLFQ1frNBG/oNOnGTt0T3LaORBaPtmGboxwNXntJEX
oVt2sTuSAd7FC3bQqL9pI19Cj8hsdzxo5E3oLRKvMLdv5YuGK19oI39C35bp
eoCr1x32fXHgJ+bSRl4lwNXX6EYytFPIgjHA1de0kXcxP/+TX8ylXfxuNvOJ
TSMPQ7eb3n9mulc08jGBvsdVv7jZS0EjLxPo6nXaO+32aDoaeZpAr/HLlY1e
rtSWt+vsga6eR1+6aAeN+p028jm0+WxKcCif+fmrXjZa9ZJGPe+I70u/fGou
GvU9urEMGvU8beR/zM/79FdzaZeRwAiNfBBtdy8yVKSRD6Kn9LEF30BXL9RG
fijQa/JqVeNXq7T32+2JZjTyRYGu3qhtq9Wz2gd6f12yQxv5o0BXf9ROP/bp
giPdze9b/arx6lfayCvRFco13hXbn0ZeKdDVI48q22plpmHm9vya11zayDcF
uvql9qzFyWKrTDS/TwaN+qQ28lHm5+cdZC5tKe/NoZGfouOS7s45d3mgq2/S
X75e3eT1am3krQJdvVM7i2zYBnp//2UHjfqnNvJa5ueved1kzWtt++z4Zw+N
PFegq5ceU+4lCyUa+S5zewblM5c24lA0tpsCXf1UG8tXGnkw+qFZHc4PD3T7
/DTqofTlfIP/zjeYRv2Tbppg7ZcJ1mojX0bbYuKJBzTyZXSdmSPNPQ509VFt
5M2CfPevaRMyQd7lv+2gUU/VRj6NlrhD+iCv6doE5jqujPwafX79tCp9P6KR
Z6PNYqf1ovxBrn5LXx6c31w06q10Uxnx/nupp9JX8v92Of9v2sjPBbl6K90s
4bqmCdfRqLdq50ljK2jm5122g0Y9Vhv5PPPz1yU01x/KjY4uNitSGvk9+pd+
z9fnqBvk6q30ld8KmEsbeT96td1ebB7k6rF0MxnayAcGufqs9t/XNwT92IFG
fpBOMD75yyU9aOQJg7yrBYZcKTBEu4BMSGnkDYNcvVfbvFkUfTqMRh4xyGue
aH2zROtp1IO1Zbkwyfy+K3ZoI78Y5Oq/2httOX6u+X3rE5nrhDLyjvT1t+w7
SpCr/9JXhxQ0lzbykUGu/ks3l6GdzL59b6aRp6SL2bTzXhr5SvrrbJfPP/8j
yNV3tZG/DPKuFRx6teBQGvVf7dEShwzyWiTe0DzxBhr1YPraVTu0keekUS6i
ke8McvVk7YDP7YTT/P4Nic11Uhl50CBXf6avDS1kLu13JOBHIy8a5OrT2pLO
fE0jT3rXdwfZIKORL6Un2njSBzTyprRN5zXJcddrIUMbedS7rl5OXy807Fqh
YTTq5dqh7V7uHVTgrvdVko0tkmzURn71rquv09ev2UGjHq5twy5rStLIu9KS
BqtEI/9qfv/GJOY65Rv1de2u/e0nKI28LC3b/S1o5Gfpgzf3VWj2DY28LB09
wQZOzP0dVthc2sjP0hkq2h1XGvnZu67+r11ZCp408rXm/sugsT+gLcunyTTy
uHe9G4WHXy88XFu2p+bRyOvedfsN2sdTXL3dYiWNPC8tb89baOR76aw9xqbd
tO+u1zLppq+SbtJG/peuKROgu27/gr5x3Q4a+xF0y01JzXWa/70MbeSLacSB
acQf6EVSvjS/f3gRc9HY36BbytBGXpm2u3GtIu+6/Q9t5Jnpx+G1zQyPRp6Z
zmU+DbYkCPZuFhlxo8gIGvsn2sg/07Kb8Xaw1yrZ5pbJNmsjH03/ZON3GYLd
foo28tPm9tywg8b+ivYKc+s+z2l+/uZk5jrjG/sv9M0RRc2ljXw2bavVbQoG
u/0WbeS3ze+TQf/XZ/imX6a3Exgaee9g71bRkTeLjqSxf6P96YkD9X+vHOx9
/daWVm9tobG/Q9+6aYc28uR0EwlMBbv9IG3kzc3v2/KWuc76xv6P9mAbh/mK
Rv6cXnvbFtBp5NHN7RlZzFw09n/or2XQ2K+hbxcbdavYKO0rttzZM9jtz2gj
/x7stU6+9evkW7UTVx58adzPNPLxwW5/hr59yw7tQg+vxewYQSNPH+z2c+jW
W5Ob65xv7N9of2WXk5Np5O9p2R6eb37fqM/MpY18Pr35bfsMDXb7Q3RrGdrI
89O37MfdVhp5fjp5T5swpJHvD3b7SdqfywY+jfx/sHfns9G3Pxut3Vbi/8Fu
P0obcSXaVlNTBdDoH6B3fJHwRpkoGv0E9N3Irx52ekSjf4C2q90pCUO8Nim2
tU6xTRv9BCFuv0y7tGww0Og3oCXemoFG/0GId+e2Hdp2dpI2F43+hBC3P0e3
2ZbCXOeV93W0gbgQtz+njf4G8/NHf24ubTOZmdq1VIjbz6PbyKCxH6eNfokQ
Mw8fc+fzMTT267TTmWfntCo0+itCvLYpf2+T8nca+3V0wB07aOzX0XY28VXS
P31j/067wkD7jkujzkNLnOyrEE+mI5lp7PfRRWRoo/+Dnhlw40X6TjT6QULc
fiFtZzdzqtLYn6NlutNSW8q7P9DoLwlx+3d0Txk09u+0Y6vYDREa/Sl0Zpmg
hHhFZYJEY79PG/0stCxPp9DoZ6F/sPGJ+TT6W0K8f+z0ay6N/UPt+e/aAAiN
fpgQb/MmO2jsB9I/yARLWz6et9Hojwlx+4Pa//6w+nyPA+bxsdOzGzT2D+l/
7tlBY3+QtrOvlskuKKMfJ8Tt/2nbtOzsU+b22ulZFm3079Bo7wlx+4V0URk0
9ge10f9j7s9cO8HT/nHU9mz3Amj0B9E2PZklOsTtN2qjf8jcfztdbEVjv1H7
XLSdIJj7J0Mb/Ub0swVHuv+QKNQ3+o/ojyVQSqMfKdTtZ2o3tPH4jDT6lWhb
rbmfi0a/Em3TRVkLh3rFZIKrjf4l+q9Mw/6pUTrU7Z9qI00T6t230+F5NPZH
te1qoE9VGv1QdH67/dog1Nuy2Q4a+6c06vja6KcKdfurdDE7vb5JY79Uu5ls
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
bzDa+22wHTTytdprbPtkmmgvsLhs+CnjvMJol5+lK9rtv+k08rT04kV2aMvx
YtmiXZ5WG+chRnsJZUOQRt5WO+GhfP8UyhvttbPbhdu1cZ5itMvn0ocO2qEt
7Syf0zhvkW7+8e2Ph3vRLr+rjfMYo70cskGpPexKyQqbakW7fC/9m2xf0sj7
auM8R/P3CZDhG3lguqJscGpLnPZLGudB0jfK2IbzaJcnphfb7dFHNPLFdEIZ
gb6RL9bGeZPm7yMbqtpvSWA82uWPadlu/YBG3pjOIYNG/piW3dj8NPLItGzP
lqCRR6YrytDGujfa5Y9pu3v6qDaN/LG2xI1+NI+f3T5tSiOfTLeToY3zOaNd
Xlm7tbzB0Di/0zyeH9gNVxp5ZFq2W/vRyBNrj0liE2bR3pDf7NDG+aC0bD/N
onFeaLTLH9NBJWRD1zfyx9qBXewMJtqrZLd7Z9DIJ9NLFtuhjfNHo10emU4k
G8Tathvw843RLq9Mt7fbxTto5Je1cV5ptHf4kB30f+eUvGkpt+yO9nLKhjKN
vDM9RLaXtXHeabTLQ9NBgTKUvxmUpv2YY9EuH62N81DN4y0b1jTy0tr4+jTz
eNvt7Mc08tR0IhlBvpGnptvLhrc2zmOl98jxvdEub03L9ngGGnlrOqcMGvlr
bZz3SodNtxtQ5vG2u+sFtHEeLC3HfdyncT5stMt307L9XpJGvpuuJEO7/LOL
Ie1eRrv8tzbOn43x7O794zo08t60bOc3o5H3ptvLoJHvpu3ufIbuNPLdtGzX
/6jddV2BBOOT0zj/NsblvbWlXTxtjDd0iB008uD03ZKy4a+M83PpQ/Z4zWw0
zsuNcflxurKNC8zUjj5cqv57+WJcvpxeusQOGvlxOrEEDGjkyekONm6wk0a+
nD5y2A4aeXNtnPcb4+WSgAKNPDk9VOIJNPLk9N0gGb6RL9fOaNv7ipvHRwIM
NPLm9FIbZ3hCI39OJ5ZxVxnnFce4fDrdQQIQNPLp2lXkQAka5xvT30uDhHl8
bVwiI418O51LhjbOR45x+XZa0hMFaeTdaYlTfEEj/64917YjNDWPrwxtnMcc
4/Ly2vbL7ELamcf/iQ1k0MjLa+M8Z/P427hGc217ml+q7jEuT093kEEjP0/b
dEfGHjTy8to4L9o8vjb+0V87m40X9o9x+XptnB9N12zyVs7OQ2mcHx3jDRtq
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
B9KU2ns=
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl2jMQIAASRcG1bdu2bdu2bdu2bdu2bdu29/b66oKuCSd62U/YqH2ldoEC
BAgQkHmhAwTYzg62sZUtbGYTG9nAetaxljWsZhUrWcFylrGUJSxmEQtZwPzQ
//81lznMZhYzmcF0pjGVKUxmEhOZwHjGMZYxjGYUIxnBcIYxlCEMZhADGUB/
+tGXPvSmFz3pQXe60ZUudKYTHelAe9rRlja0phUtaUFzmtGUJjSmEQ1pQH3q
UZc61KYWNalBdapRlSpUphIVqUB5ylGWMpSmFCUpQXGKUZQiFKYQBSlAfvKR
lzzkJhc5yUF2spGVLGQmExnJQHrSkZY0pCYVKUlBcpKRlCQkJhEJSUB84hGX
OMQmFjGJQXSiEZUoRCYSEYlAeMIRljCEJhQhCUFwghGUIAQmEAEJwL9QAQL8
h7/84Te/+MkPvvONr3zhM5/4yAfe8463vOE1r3jJC57zjKc84TGPeMgD7nOP
u9zhNre4yQ2uc42rXOEyl7jIBc5zjrOc4TSnOMkJjnOMoxzhMIc4yAH2s4+9
7GE3u9jJDrazja1sYTOb2MgG1rOOtaxhNatYyQqWs4ylLGExi1jIAuYzj7nM
YTazmMkMpjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvSh
N73oSQ+6042udKEznehIB9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2
tahJDapTjapUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5
yEkOspONrGQhM5nISAbSk460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGI
SQyiE42oRCEykYhIBMITjrCEITShCEkIghOMoAQhMIEISAD+hdQ/f/nDb37x
kx985xtf+cJnPvGRD7znHW95w2te8ZIXPOcZT3nCYx7xkAfc5x53ucNtbnGT
G1znGle5wmUucZELnOccZznDaU5xkhMc5xhHOcJhDnGQA+xnH3vZw252sZMd
bGcbW9nCZjaxkQ2sZx1rWcNqVrGSFSxnGUtZwmIWsZAFzGcec5nDbGYxkxlM
ZxpTmcJkJjGRCYxnHGMZw2hGMZIRDGcYQxnCYAYxkAH0px996UNvetGTHnSn
G13pQmc60ZEOtKcdbWlDa1rRkhY0pxlNaUJjGtGQBtSnHnWpQ21qUZMaVKca
ValCZSpRkQqUpxxlKUNpSlGSEhSnGEUpQmEKUZAC5CcfeclDbnKRkxxkJxtZ
yUJmMpGRDKQnHWlJQ2pSkZIUJCcZSUlCYhKRkATEJx5xiUNsYhGTGEQnGlGJ
QmQiEZEIhCccYQlDaEIRkhAEJxhBCUJgAhGQAPwLoX/+8off/OInP/jON77y
hc984iMfeM873vKG17ziJS94zjOe8oTHPOIhD7jPPe5yh9vc4iY3uM41rnKF
y1ziIhc4zznOcobTnOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvYzja2soXN
bGIjG1jPOtayhtWsYiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jONKYyhclM
YiITGM84xjKG0YxiJCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43utKFznSi
Ix1oTzva0obWtKIlLWhOM5rShMY0oiENqE896lKH2tSiJjWoTjWqUoXKVKIi
FShPOcpShtKUoiQlKE4xilKEwhSiIAXITz7ykofc5CInOchONrKShcxkIiMZ
SE860pKG1KQiJSlITjKSkoTEJCIhCYhPPOISh9jEIiYxiE40ohKFyEQiIhEI
TzjCEobQhCIkIQhOMIIShMAEIiAB+Bdc//zlD7/5xU9+8J1vfOULn/nERz7w
nne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqXucRFLnCe
c5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbWxlC5vZxEY2sJ51
rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGM
ZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQnW50pQud6URHOtCedrSl
Da1pRUta0JxmNKUJjWlEQxpQn3rUpQ61qUVNalCdalSlCpWpREUqUJ5ylKUM
pSlFSUpQnGIUpQiFKURBCpCffOQlD7nJRU5ykJ1sZCULmclERjKQnnSkJQ2p
SUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQnWhEJQqRiUREIhCecIQlDKEJ
RUhCEJxgBCUIgQlEQALwL5j++csffvOLn/zgO9/4yhc+84mPfOA973jLG17z
ipe84DnPeMoTHvOIhzzgPve4yx1uc4ub3OA617jKFS5ziYtc4DznOMsZTnOK
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
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl2kMUIMqSBcDftm3btm3btm3btm3btm3b9uuJPrOIU5vaFjLzJmjYrmLb
AP/73/+2hvrf//6tAQlEYIIQlGAEJwQhsfV/oQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5
w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQXv/nD
f/zl3+EPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmjb8u7zb0Z4OdKQTnelCV7rRnR70pBe96UNf
+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zm
MZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvax
nwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGf
BzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w3/85d/D
H4CABCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKT
gIQkIjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOA
ghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CG
NKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEM
YjBDGMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxi
MUtYyjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIw
RzjKMY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFP
eMoznvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//Pv0ByAggQhM
EIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwS
kpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGK
UozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rS
jOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM
4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl
rGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zg
Ja94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/wr+AAQkEIEJQlCCEZwQ
hCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSk
JBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSk
FKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQV
rWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDf/zlX7MvAAEJRGCCEJRgBCcEIQlFaMIQ
lnCEJwIRiURkohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCW
dKQnAxnJRGaykJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZy
lKcCFalEZapQlWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0
pwMd6URnutCVbnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxn
AhOZxGSmMJVpTGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcD
G9nEZrawlW1sZwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIX
ucRlrnCVa1znBje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5
xGe+8JVvfOcHP/nFb/7wH3/51+gPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBE
IhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYy
kZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpR
mSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZ
LnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkp
TGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1s
ZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zl
Gte5wU1ucZs73OUe93nAQx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb
3/nBT37xmz/8x1/+DfkCEJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJ
RnRiEJNYxCYOcYlHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclG
dnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1
alCTWtSmDnWpR30a0JBGNKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd6
0JNe9KYPfelHfwYwkEEMZghDGcZwRjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYw
k1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2cZ2drCT
XexmD3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5LnCRS1zmCle5xnVucJNb
3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+8JFPfOYLX/nGd37wk1/8
5g//8Zd/A/4ABCQQgQlCUIIRnBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQW
sYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5
yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpUpBKVqUJVqlGdGtSkFrWp
Q13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSkE53pQle60Z0e9KQXvelD
X/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc
5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172
sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5x
nwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cN//OVf
uCcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jE
JwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSn
AAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcB
DWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZ
xGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznE
YY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEPecRj
nvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vAff/kX7AtAQAIR
mCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGY
JCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgi
FKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0
pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBABjGYIQxl
GMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZ
y1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjH
OcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95
wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zHX/6FegMQkEAEJghBCUZw
QhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJS
kJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQ
klKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCS
VrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJR
jGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWs
Zg1rWcd6NrCRTWxmS6j/z7X/H+Aw/So=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{2999, 3000}]}}}], {}, {}, {}, {}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.744960748108574*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"4c8a9699-7785-4ed0-9df7-9b2eaecdcaa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "[", "\"\<ClassMeanCrossEntropy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.74477714498287*^9, 3.744777159258928*^9}, 
   3.744777205612863*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"558408d5-355f-4ef0-bd9f-dc7352c7dc98"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", "0.5422063511442474`"}], ",", 
   RowBox[{"1", "\[Rule]", "0.569445740483738`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.744960752184975*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"b9bdef16-cb8b-4ddf-8ab3-234e17d8630a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1037},
WindowMargins->{{1912, Automatic}, {Automatic, -8}},
Magnification:>1.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 371, 7, 184, "Title",ExpressionUUID->"05e86aeb-e120-4f56-a8fb-c12b7be2819a"],
Cell[954, 31, 44366, 731, 496, "Input",ExpressionUUID->"dd8063af-1ee7-4831-bd82-481b9ba164a0"],
Cell[CellGroupData[{
Cell[45345, 766, 192, 3, 125, "Section",ExpressionUUID->"dda4dbf9-0585-42f0-b97a-968659526a59"],
Cell[45540, 771, 968, 15, 279, "Text",ExpressionUUID->"5d3c53b7-4670-43d2-baba-b35e230db03b"],
Cell[46511, 788, 11275, 189, 191, "Input",ExpressionUUID->"f9f74817-6125-45ff-affb-ac6d2bc8e79b"],
Cell[57789, 979, 276, 6, 65, "Text",ExpressionUUID->"b951790c-b1a5-4597-acef-83773bf16bb9"],
Cell[58068, 987, 53708, 885, 446, "Input",ExpressionUUID->"e69b03b3-0829-4ff9-9463-5c68c186cb54"],
Cell[111779, 1874, 847, 17, 194, "Text",ExpressionUUID->"02b9243f-bb60-4439-b7e5-05c6bfa79f39"],
Cell[112629, 1893, 1001, 27, 151, "Text",ExpressionUUID->"160a046e-a209-4637-8be0-8493d9c07553"],
Cell[113633, 1922, 630, 16, 108, "Text",ExpressionUUID->"1ea082f0-5d7c-45b3-9173-d1ee21ede35b"],
Cell[114266, 1940, 463, 10, 108, "Text",ExpressionUUID->"e37e96f9-59ef-4428-956c-44c3b67d9f4a"],
Cell[114732, 1952, 569, 13, 151, "Text",ExpressionUUID->"7a5ab0f3-32e7-4f07-920d-d00f492bf9bb"],
Cell[115304, 1967, 20746, 344, 333, "Input",ExpressionUUID->"0e2f42d2-9af1-4c39-af5d-cd8bc3f1b6f5"],
Cell[136053, 2313, 434, 8, 108, "Text",ExpressionUUID->"b30fff1d-0d44-4418-9a8c-7c5f9fc54323"],
Cell[136490, 2323, 392, 10, 108, "Text",ExpressionUUID->"596f26f6-694e-4763-b6a8-f1e4b154e485"],
Cell[136885, 2335, 1705, 43, 236, "Text",ExpressionUUID->"960ee351-14cf-4100-a534-5facaa2bce22"],
Cell[138593, 2380, 634052, 10399, 628, 344014, 5644, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"c054d1db-e0e9-446d-a437-157dd94f6f52"],
Cell[772648, 12781, 620, 15, 151, "Text",ExpressionUUID->"5c6a4fe9-cdab-4f24-8621-655c9c1ef7f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773305, 12801, 181, 3, 125, "Section",ExpressionUUID->"c8e223b3-3b28-4025-ba72-5783f041e2bc"],
Cell[773489, 12806, 299, 6, 65, "Text",ExpressionUUID->"86b91a34-0476-4ed6-b1a8-b0b74189099c"],
Cell[773791, 12814, 269, 5, 54, "Input",ExpressionUUID->"3806cdfb-eb50-4c5c-87d4-a3ed1f8382d4"],
Cell[774063, 12821, 1049, 25, 108, "Text",ExpressionUUID->"a6eaf394-5b30-48ec-bdda-69a75556c6eb"],
Cell[775115, 12848, 324, 6, 54, "Input",ExpressionUUID->"2c63f65e-63e4-4534-a74d-f439e9cd85ea"],
Cell[775442, 12856, 283, 6, 65, "Text",ExpressionUUID->"815c9a2b-7fa4-4cc7-a4b6-6111d8d76521"],
Cell[CellGroupData[{
Cell[775750, 12866, 220, 3, 54, "Input",ExpressionUUID->"a8d93945-b7c6-47aa-b94b-74128acb7af8"],
Cell[775973, 12871, 222, 4, 62, "Output",ExpressionUUID->"f5c8c36e-97df-4545-ad27-4e9bfca255cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776232, 12880, 468, 10, 54, "Input",ExpressionUUID->"873861f0-a53c-47b9-9e23-82062ca09410"],
Cell[776703, 12892, 136831, 3823, 775, "Output",ExpressionUUID->"88e9aeba-a29a-4ff5-929e-eef007447f62"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[913583, 16721, 193, 3, 125, "Section",ExpressionUUID->"c9369298-9c07-4a97-8124-6efd99b62ead"],
Cell[913779, 16726, 169, 3, 65, "Text",ExpressionUUID->"2eb16dd6-1738-4eff-8f65-40c57b3c8ef9"],
Cell[CellGroupData[{
Cell[913973, 16733, 288, 5, 54, "Input",ExpressionUUID->"f79877e1-c48e-4156-992b-b92208b86bce"],
Cell[914264, 16740, 154, 2, 62, "Output",ExpressionUUID->"bc2a081c-1e16-4ecb-a4af-f6b804300280"]
}, Open  ]],
Cell[914433, 16745, 315, 9, 65, "Text",ExpressionUUID->"abe80adf-a969-4060-b25e-2fecb144e221"],
Cell[CellGroupData[{
Cell[914773, 16758, 406, 7, 54, "Input",ExpressionUUID->"48e843d0-b08c-4826-8f57-87118c381341"],
Cell[915182, 16767, 152, 2, 62, "Output",ExpressionUUID->"35508279-f389-4281-9ff1-98151df647cc"]
}, Open  ]],
Cell[915349, 16772, 871, 18, 194, "Text",ExpressionUUID->"bd9c958c-ac9e-46e7-b938-73e692478372"],
Cell[CellGroupData[{
Cell[916245, 16794, 974, 19, 166, "Input",ExpressionUUID->"f58d1f0e-0ed8-4369-ba50-6277a3df5bb8"],
Cell[917222, 16815, 200, 4, 62, "Output",ExpressionUUID->"6887c643-757a-4c00-bfe5-494d97acc759"],
Cell[917425, 16821, 200, 4, 62, "Output",ExpressionUUID->"a4eb1000-9e45-4445-a00b-f35623176f0d"]
}, Open  ]],
Cell[917640, 16828, 272, 6, 65, "Text",ExpressionUUID->"2212b41b-0f15-43fb-9b12-d17dbcc57fe7"],
Cell[917915, 16836, 1221, 27, 166, "Input",ExpressionUUID->"b889757d-9d7c-43df-aef2-2a510c82c8b9"],
Cell[919139, 16865, 219, 5, 65, "Text",ExpressionUUID->"6613cfd0-5d1a-4bf6-8b21-a315f44412ad"],
Cell[CellGroupData[{
Cell[919383, 16874, 726, 14, 54, "Input",ExpressionUUID->"3a8e6020-c21a-4922-bec7-39a30a765702"],
Cell[920112, 16890, 19057, 400, 449, "Output",ExpressionUUID->"9d23813a-6bfa-45cd-913f-c7ce9a6bbb3e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[939218, 17296, 170, 3, 125, "Section",ExpressionUUID->"424c2ace-fa59-4e22-999f-99e28abdaaff"],
Cell[939391, 17301, 427, 8, 108, "Text",ExpressionUUID->"c275542f-d642-4c6d-a006-0528bbcddeb9"],
Cell[939821, 17311, 466, 11, 77, "DisplayFormulaNumbered",ExpressionUUID->"b851ed0b-cced-4849-8404-7531f1c48a6d"],
Cell[940290, 17324, 182, 3, 65, "Text",ExpressionUUID->"81ca0149-4fda-4c14-b8dd-1d0e0054508d"],
Cell[CellGroupData[{
Cell[940497, 17331, 231, 4, 54, "Input",ExpressionUUID->"169cff71-7deb-4232-aea5-c4abbc9451b9"],
Cell[940731, 17337, 531, 10, 62, "Output",ExpressionUUID->"d13e1b6c-c105-479f-a7a5-47bab840e411"]
}, Open  ]],
Cell[941277, 17350, 199, 3, 65, "Text",ExpressionUUID->"e17c7225-e5ce-4a4a-bf22-7b57ef0c4f90"],
Cell[CellGroupData[{
Cell[941501, 17357, 248, 4, 54, "Input",ExpressionUUID->"da4d2381-956c-406c-a987-cf005bc7ce08"],
Cell[941752, 17363, 530, 10, 62, "Output",ExpressionUUID->"75efb73e-046c-48a1-a681-5237b380fed7"]
}, Open  ]],
Cell[942297, 17376, 688, 16, 151, "Text",ExpressionUUID->"d8a5799a-9e4a-42a6-b724-47b5397749b4"],
Cell[CellGroupData[{
Cell[943010, 17396, 544, 11, 129, "Input",ExpressionUUID->"b8aad849-3a25-4320-86f7-328bba9ec043"],
Cell[943557, 17409, 580, 11, 109, "Output",ExpressionUUID->"0e726c6e-92d8-4017-9526-4509ffbf06c8"],
Cell[944140, 17422, 404, 8, 62, "Output",ExpressionUUID->"8eaddc1f-68fa-4882-982c-ac5f28f21cfa"]
}, Open  ]],
Cell[944559, 17433, 335, 7, 108, "Text",ExpressionUUID->"8f8f6fea-ae93-4e7c-8ccc-c977399d3c9a"],
Cell[944897, 17442, 846, 22, 54, "Input",ExpressionUUID->"4e64ec88-9e2c-4ce7-a7fd-1e77cdbffc6e"],
Cell[945746, 17466, 472, 14, 65, "Text",ExpressionUUID->"1c15ebec-0dd0-4ba2-87a8-bdc863f28217"],
Cell[CellGroupData[{
Cell[946243, 17484, 365, 8, 92, "Input",ExpressionUUID->"9701b2e7-2236-4ac1-ba0c-fe95a7b45aa5"],
Cell[946611, 17494, 706, 14, 100, "Output",ExpressionUUID->"d3cbcc27-6ba1-43bb-a08b-c715f5059eed"],
Cell[947320, 17510, 531, 10, 62, "Output",ExpressionUUID->"5d3d63d2-6433-4eed-8f64-871aef52ab0c"]
}, Open  ]],
Cell[947866, 17523, 377, 8, 108, "Text",ExpressionUUID->"bb2b3dc3-5dce-43ce-b380-69f09704323c"],
Cell[CellGroupData[{
Cell[948268, 17535, 1057, 23, 129, "Input",ExpressionUUID->"fe5f2ff8-9634-499d-86ff-e11250ed9eac"],
Cell[949328, 17560, 173, 3, 62, "Output",ExpressionUUID->"ce5d024c-676d-40ad-8b2c-8493ffe4a26e"],
Cell[949504, 17565, 783, 17, 100, "Output",ExpressionUUID->"0aa74bdf-870f-419d-90c0-54d72b28f044"]
}, Open  ]],
Cell[950302, 17585, 225, 4, 65, "Text",ExpressionUUID->"359f2b62-0153-48a7-962d-dd1bdb1fad94"],
Cell[CellGroupData[{
Cell[950552, 17593, 1013, 22, 129, "Input",ExpressionUUID->"177f0e35-d6d6-4528-ae5f-872eecdc9296"],
Cell[951568, 17617, 176, 3, 62, "Output",ExpressionUUID->"53468600-ed11-4bfd-875e-dc928f4f1ce4"],
Cell[951747, 17622, 762, 16, 100, "Output",ExpressionUUID->"77229595-2e35-4ade-9acf-63b50f89b2c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[952558, 17644, 176, 3, 125, "Section",ExpressionUUID->"70009688-7119-47c5-81ac-a8e1711f0cae"],
Cell[952737, 17649, 276, 6, 65, "Text",ExpressionUUID->"b8d969a6-c529-4d39-8c71-7efec1bb9f21"],
Cell[CellGroupData[{
Cell[953038, 17659, 500, 10, 54, "Input",ExpressionUUID->"864db627-5b01-4a0e-aebe-6c2e976d8039"],
Cell[953541, 17671, 2103, 50, 187, "Output",ExpressionUUID->"a84c8eca-ce0a-4582-bfc4-1db9f59ee6b1"]
}, Open  ]],
Cell[955659, 17724, 240, 4, 65, "Text",ExpressionUUID->"360d40d3-3602-4fb7-b190-b68d284e1d0e"],
Cell[CellGroupData[{
Cell[955924, 17732, 2163, 44, 203, "Input",ExpressionUUID->"21e89fd6-8cd6-4d85-86c7-549757c85167"],
Cell[958090, 17778, 24800, 508, 249, "Output",ExpressionUUID->"06a6e6ad-e0fb-48fa-bfd9-8fe8d8480169"],
Cell[982893, 18288, 29071, 595, 311, "Output",ExpressionUUID->"d852698d-8c8f-4c12-8b90-dad5fd148d29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012001, 18888, 352, 7, 54, "Input",ExpressionUUID->"46e62ca2-b95e-482d-9a6e-2b065a6246c6"],
Cell[1012356, 18897, 2964, 63, 322, "Output",ExpressionUUID->"ed722d58-3a49-4ce1-8241-cc1b2adee0c2"]
}, Open  ]],
Cell[1015335, 18963, 192, 3, 65, "Text",ExpressionUUID->"b43261e8-bcf5-4546-96b5-b9cb3dd53653"],
Cell[CellGroupData[{
Cell[1015552, 18970, 486, 11, 54, "Input",ExpressionUUID->"5075e7df-1f1c-4920-8ab9-13a3822cde29"],
Cell[1016041, 18983, 4939, 143, 456, "Output",ExpressionUUID->"df12c215-55c6-4986-916c-006699b5a1e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021017, 19131, 487, 11, 54, "Input",ExpressionUUID->"68165337-3db6-45bb-8e46-4d87e6cc2ea9"],
Cell[1021507, 19144, 11409, 338, 466, "Output",ExpressionUUID->"ed24d0c5-cc90-4f15-8ac3-7561452c318d"]
}, Open  ]],
Cell[1032931, 19485, 185, 3, 65, "Text",ExpressionUUID->"48f44fa5-a894-4358-babe-ef3b783c8a0e"],
Cell[CellGroupData[{
Cell[1033141, 19492, 2232, 47, 240, "Input",ExpressionUUID->"8f49f243-e78b-458e-89eb-801b4aee1daf"],
Cell[1035376, 19541, 24798, 508, 249, "Output",ExpressionUUID->"ebdfecd1-5f3e-439b-b35f-9ea7ad0ad35a"]
}, Open  ]],
Cell[1060189, 20052, 238, 6, 65, "Text",ExpressionUUID->"76bb11f1-a308-48f0-ae9c-378a8aaa0ba0"],
Cell[CellGroupData[{
Cell[1060452, 20062, 377, 7, 54, "Input",ExpressionUUID->"96c6d357-204e-4bdf-99c0-e4d1b18204c3"],
Cell[1060832, 20071, 148, 2, 62, "Output",ExpressionUUID->"68ecaac0-c2c9-4e17-a1e3-b33b4f4518ed"]
}, Open  ]],
Cell[1060995, 20076, 194, 3, 65, "Text",ExpressionUUID->"1c4406c0-a844-4148-a57c-9474633e09a8"],
Cell[CellGroupData[{
Cell[1061214, 20083, 329, 6, 54, "Input",ExpressionUUID->"3389ec30-a580-4d52-83f7-95f4503675ec"],
Cell[1061546, 20091, 8532, 171, 218, "Output",ExpressionUUID->"2062b6e3-1b0a-4966-a26a-f93dedd04afd"]
}, Open  ]],
Cell[1070093, 20265, 196, 3, 65, "Text",ExpressionUUID->"a09ce092-de90-40ce-a6f8-27c0c4378cb1"],
Cell[CellGroupData[{
Cell[1070314, 20272, 218, 3, 54, "Input",ExpressionUUID->"81bae637-bb37-45be-a024-012ed82f05b9"],
Cell[1070535, 20277, 1925, 30, 322, "Output",ExpressionUUID->"2c432757-dae9-452f-872a-6430b1b0469e"]
}, Open  ]],
Cell[1072475, 20310, 174, 3, 65, "Text",ExpressionUUID->"a5a02dfa-9317-4d88-a46b-aea4136fe26b"],
Cell[CellGroupData[{
Cell[1072674, 20317, 216, 3, 54, "Input",ExpressionUUID->"bffa13e9-6374-452b-8033-8413b74aa803"],
Cell[1072893, 20322, 168, 2, 62, "Output",ExpressionUUID->"76b9f91b-ba4d-4340-80de-060b0964ea73"]
}, Open  ]],
Cell[1073076, 20327, 217, 5, 65, "Text",ExpressionUUID->"f96570e3-392a-4753-9ca3-5dd3f016660b"],
Cell[CellGroupData[{
Cell[1073318, 20336, 225, 3, 54, "Input",ExpressionUUID->"63ad733b-b686-43db-91a2-b1741de50542"],
Cell[1073546, 20341, 9536, 252, 618, "Output",ExpressionUUID->"10ff8a0a-c500-4f8c-b38f-8885312002e0"]
}, Open  ]],
Cell[1083097, 20596, 184, 3, 65, "Text",ExpressionUUID->"cf228ddd-47ba-48e3-bba9-739e045c9fcf"],
Cell[CellGroupData[{
Cell[1083306, 20603, 214, 3, 54, "Input",ExpressionUUID->"09ee92ff-f579-4f54-b049-985502f9cc17"],
Cell[1083523, 20608, 22917, 533, 1115, "Output",ExpressionUUID->"39fed3b3-25bc-4d90-8c8e-5a52cfaa30d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1106477, 21146, 223, 3, 54, "Input",ExpressionUUID->"c2b2c765-a9eb-42c9-8d60-177c9ebc7f75"],
Cell[1106703, 21151, 328, 7, 62, "Output",ExpressionUUID->"0fe6056a-185b-4547-b1bc-ddefe4a09525"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1107068, 21163, 214, 3, 54, "Input",ExpressionUUID->"bb708b66-548b-4552-8e59-b554a28fd9a1"],
Cell[1107285, 21168, 84297, 1488, 369, "Output",ExpressionUUID->"4c8a9699-7785-4ed0-9df7-9b2eaecdcaa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1191619, 22661, 252, 4, 54, "Input",ExpressionUUID->"558408d5-355f-4ef0-bd9f-dc7352c7dc98"],
Cell[1191874, 22667, 327, 7, 95, "Output",ExpressionUUID->"b9bdef16-cb8b-4ddf-8ab3-234e17d8630a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

